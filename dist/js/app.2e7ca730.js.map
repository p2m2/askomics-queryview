{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/askomics/attribute/AttributeBox.vue?343e","webpack:///./src/components/askomics/panels/AttributesPanel.vue?bedc","webpack:///./src/views/AskOmics.vue?2c97","webpack:///./src/App.vue","webpack:///./src/ts/types.ts","webpack:///./src/ts/utils.ts","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/views/AskOmics.vue","webpack:///./src/components/askomics/panels/QueryBuilder.vue","webpack:///./src/components/askomics/panels/QueryGraphPanel.vue","webpack:///./src/ts/RequestManager.ts","webpack:///./src/ts/StrategyRequestAbstract.ts","webpack:///./src/ts/StrategyRequestAskOmics.ts","webpack:///./src/ts/StrategyRequestDataDriven.ts","webpack:///./src/ts/UserIncrementManager.ts","webpack:///./src/ts/GraphBuilder.ts","webpack:///./src/components/askomics/panels/QueryGraphPanel.vue?55e7","webpack:///./src/components/askomics/panels/AttributesPanel.vue","webpack:///./src/components/askomics/attribute/AttributeBox.vue","webpack:///./src/components/askomics/attribute/URIBox.vue","webpack:///./src/components/askomics/attribute/URIBox.vue?2f84","webpack:///./src/components/askomics/attribute/URIBox.vue?e6ae","webpack:///./src/components/askomics/attribute/XsdString.vue","webpack:///./src/components/askomics/attribute/XsdString.vue?7c29","webpack:///./src/components/askomics/attribute/XsdString.vue?0e34","webpack:///./src/components/askomics/attribute/XsdNumeric.vue","webpack:///./src/components/askomics/attribute/XsdNumeric.vue?9a43","webpack:///./src/components/askomics/attribute/XsdNumeric.vue?e090","webpack:///./src/components/askomics/attribute/AttributeBox.vue?421f","webpack:///./src/components/askomics/attribute/AttributeBox.vue?c924","webpack:///./src/components/askomics/panels/AttributesPanel.vue?043b","webpack:///./src/components/askomics/panels/AttributesPanel.vue?3e63","webpack:///./src/components/askomics/panels/QueryBuilder.vue?33a3","webpack:///./src/components/askomics/panels/QueryBuilder.vue?df5f","webpack:///./src/views/AskOmics.vue?fe31","webpack:///./src/views/AskOmics.vue?bdc7","webpack:///./src/views/Results.vue","webpack:///./src/components/results/ResultsPanel.vue","webpack:///./src/components/results/ResultsPanel.vue?65e4","webpack:///./src/components/results/ResultsPanel.vue?3b5c","webpack:///./src/views/Results.vue?f830","webpack:///./src/views/Results.vue?ee05","webpack:///./src/views/Configuration.vue","webpack:///./src/components/configuration/ConfigurationPanel.vue","webpack:///./src/components/configuration/ConfigurationPanel.vue?9fd6","webpack:///./src/components/configuration/ConfigurationPanel.vue?e17e","webpack:///./src/views/Configuration.vue?706d","webpack:///./src/views/Configuration.vue?2fd0","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/components/askomics/panels/QueryGraphPanel.vue?1f67"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","type","placeholder","aria-label","aria-current","to","requestManagerStringify","JSON","stringify","configuration","discovery","$event","updateConfiguration","NodeType","LinkType","ObjectState","FilterProperty","regexp","test","_string","substring","url","splitList","split","last","splitList2","decodeURI","bytes","si","thresh","Math","abs","units","u","toFixed","date","event","Date","toUTCString","str","hash","charCodeAt","toString","toUpperCase","hex","rgb","parseInt","g","b","luma","id","uri","range","label","visible","negative","linked","this","splitUrl","trim","replace","getObject","att","AskOmicsViewAttributes","file","content","mimetype","method","strategy","logLevel","Error","ma","methodAcess","remoteAccess","copy","UserConfiguration","String","AskOmicsGenericNode","idCounter","state_n","SUGGESTED","CONCRETE","SELECTED","assign","RangeBoxType","focus","state","AskOmicsViewNode","SOMETHING","node","typeLink","source","target","link","watch","jsonConfigurationSWDiscoveryString","console","log","created","methods","build","parse","render","requestString","currentQuery","filterProperty","updateQuery","requestBusy","requestBusyPercent","requestBusyEvent","width","height","back","forward","getResults","icon","size","spin","role","style","aria-valuenow","aria-valuemin","aria-valuemax","canvasClass","disabled","discovery_map","config_rdf","Promise","successCallback","failureCallback","setConfigString","something","isSubjectOf","select","limit","commit","raw","then","response","Set","results","bindings","map","datatype","e","listUriDatatypeProperty","listUriDatatypePropertyClean","Map","all","getDatatypesWithProperty","allPairPropertyDatatype","PropertyDatatype","set","catch","config_endp","askomics_prefix","isObjectOf","isA","current","isLinkTo","root","filter","isLiteral","not","strStarts","notEqual","isUri","RequestManager","config_str","strategy_str","nodes","links","getDiscovery","getSerializedString","config","serializedDiscovery","sw","setSerializedString","defaultGraph","setDecoration","setDiscovery","setAskOmicsStrategy","setDataDrivenStrategy","warn","disco","snd_node","FORWARD_PROPERTY","BACKWARD_PROPERTY","IS_A","error","numberOfResults","re","setConfig","getFocus","idFocus","index","listVarName","varname","vue","focusIsSelected","remove","$emit","serialized","attribute","getDecoration","attributeList","distinct","checkVariablePresent","listLabelEntity","datatypes","lUris","keys","getDatatypes","mapPropertyAndRange","iCount","uriProperty","pop","propertyEntities","FORWARD_ENTITY","BACKWARD_ENTITY","forwardEntities","backwardEntities","transaction","progression","percent","requestEvent","mR","entity","labelEntity","labelProperty","has","rm","browse","deep","decorations","attributes","element","node_id","idRef","field","sortable","isKey","variables","getColumnsResults","flatMap","variables_uniq","setPageSize","selectByPage","args","graph","request","forEach","v","toShape","setFocus","update","GraphBuilder","emptyGraph","nodeInst","keyUri","uriBox","from","listAttributes","obj","unshift","emits","components","props","required","Number","ctrlKey","canvas","ctx","color","zoom","zoomTime","trans","colorGrey","colorDarkGrey","colorFirebrick","lineWidth","nodeSize","textSize","blankNodeSize","arrowLength","forceCollide","strengthForce","strengthForceManBody","alphaTarget","selectedNodeCanvas","mounted","build3DJSGraph","setUpCanvas","beforeDestroy","updateCanvas","computed","selectedNode","getContext","simulation","force","strength","on","canvasClick","container","subject","dragsubject","dragstarted","dragged","dragended","clearRect","fillStyle","fillRect","beginPath","globalAlpha","strokeStyle","drawLink","stroke","drawNode","restart","zoomed","translate","transform","x","y","scale","k","find","setShapeNode","removeSuggestion","lock_suggestions","setFocusRoot","releaseSelectedObject","rect","getBoundingClientRect","left","top","component","ArrayPromises","ALL","clickNodeForward","clickNodeBackward","TO","FROM","nodesAndLinksArray","nodesAndLinks","concat","alert","finally","active","fx","fy","IntersectionCoordinate","x1","y1","x2","y2","theta","atan","cos","sin","middleCoordinate","triangleCoordinate","headlen","atan2","xa","PI","ya","xb","yb","subNums","newStr","oldStr","arrayString","char","code","fromCharCode","unselectedColor","unselectedColorText","stringToHexColor","setLineDash","arc","fill","closePath","font","textAlign","textBaseline","humanId","fillText","moveTo","lineTo","triangle","displayCommonAttributeButtons","selected_filterProperty","propertyFilterList","propFilter","displayRemoveButton","removeNode","item","updateAttribute","className","attributeInt","closeLink","openLink","closeEye","openEye","includes","typeSearch","optionsTypeSearch","option","text","typeCompare","optionsTypeCompare","filterValue","operator","optionsOprator","add","library","FontAwesomeIcon","XsdString","XsdNumeric","URIBox","toggleLinkAttribute","toggleOptional","AttributeBox","updateRequestString","attributesList","document","querySelector","isFocusStart","buildAttributesBox","QueryGraphPanel","AttributesPanel","query","prepareRequestBusy","attributeBoxEvent","params","QueryBuilder","$route","config_strategy_query","is-static-mode","isStaticMode","has-checkbox","hasCheckbox","is-loading","isLoading","is-re-search","isReSearch","columns","rows","total","totalRecordCount","isSortable","messages","doSearch","tableLoadingFinish","updateCheckedRows","VueTableLite","Boolean","default","order","sort","laziestPages","pagingInfo","pageSizeChangeLabel","gotoPageLabel","noDataAvailable","resultsPage","indexLazyPage","getCountAndLaziesPages","values","URIinstance","row","tabURI","col","val","uriInstance","offset","floor","err","ResultsPanel","for","selectedimetype","optionsMimetype","selectedEndpoint","list","configurationsList","endpoint","selectedStrategy","Array","title","getUserConfiguration","configObj","confL","ConfigurationPanel","config_list","routes","path","router","history","use","mount"],"mappings":"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","file":"js/app.2e7ca730.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/askomics-queryview/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AttributeBox.vue?vue&type=style&index=0&id=9b07c67e&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AttributesPanel.vue?vue&type=style&index=0&id=5d99d33f&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AskOmics.vue?vue&type=style&index=0&id=a88daee6&lang=css\"","<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n     <div class=\"container-fluid\">\n      \n      <div class=\"collapse navbar-collapse\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          \n          <li class=\"nav-item\">\n          <!--  <router-link class=\"nav-link\" aria-current=\"page\" \n            :to=\"{ path : '/' , props: { configuration : userConfig }}\" \n            >AskOmics Query Builder </router-link> -->\n\n            <router-link class=\"nav-link\" aria-current=\"page\"\n            :to=\"{ name : 'askomics' , params: { query: requestManagerStringify }}\" \n            >AskOmics Query Builder </router-link>\n          </li>\n          \n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" :to=\"{ name : 'results' , params: { rm: requestManagerStringify }}\">Results </router-link>\n          </li>\n\n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" :to=\"{ name : 'configuration' , params: { configuration: JSON.stringify(configuration) }}\">Configuration </router-link>\n          </li>\n        </ul>\n        \n        <form class=\"d-flex\">\n          <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n          <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>\n      \n      </div>\n    </div>\n  </nav>\n\n  <!-- Extraneous non-emits event listeners  -->\n\n  <router-view \n      @updateDiscovery=\"discovery = $event\"\n      @updateConfiguration =\"updateConfiguration\"\n  />\n    <!--  -->\n\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { UserConfiguration } from '@/ts/types'\n\n@Options({\n  name: \"AppView\",\n  \n  data() { \n        return {\n          discovery               : \"\",\n          configuration           : new UserConfiguration(\"test\") ,//`{ \"sources\" : [{ \"id\"  : \"test\", \"url\" : \"https://openstack-192-168-101-49.vm.openstack.genouest.org/sparql/\" }]}`,\n          requestManagerStringify : \"\"\n        }\n  },\n  \n  watch: {\n    discovery(value: string) {\n      //alert(value)\n      this.requestManagerStringify = JSON.stringify([this.configuration.jsonConfigurationSWDiscoveryString(),this.configuration.strategy,this.discovery])\n      console.log(\"******************************LOG ==> \"+value)\n    }\n  },\n  \n  created() {\n    this.configuration  = new UserConfiguration(\"test\")\n    this.configuration.type = \"url\"\n    this.configuration.url  = \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\"\n    this.configuration.strategy  = \"data-driven\" \n    this.requestManagerStringify = JSON.stringify([this.configuration.jsonConfigurationSWDiscoveryString(),this.configuration.strategy,this.discovery])\n  },\n \n  methods : {\n    updateConfiguration(configuration : string) {\n      this.configuration = UserConfiguration.build(JSON.parse(configuration))\n      this.requestManagerStringify = JSON.stringify([this.configuration.jsonConfigurationSWDiscoveryString(),this.configuration.strategy,this.discovery])\n    }\n  }\n})\nexport default class App extends Vue {}\n</script>\n\n<style>\n</style>\n","import Utils from \"./utils\"\n\ninterface AskOmicsViewAttributesI {\n    id: string\n    uri: string\n    label: string\n    range : string\n    visible: boolean    \n    negative: boolean   \n    linked: boolean     \n}\n\nexport class AskOmicsViewAttributes {\n      id: string\n      uri: string\n      label: string\n      range : string\n      visible: boolean    = false\n      negative: boolean   = false\n      linked: boolean     = false\n\n      constructor(id: string,uri: string,range: string, label : string=\"\") {\n        this.id = id\n        this.uri = uri\n        this.label = label == \"\" ? Utils.splitUrl(uri): label \n        this.range = range.trim().replace(\"http://www.w3.org/2001/XMLSchema#\",\"xsd:\")\n      }\n    \n      getObject() {\n        return {\n            id: this.id, \n            uri : this.uri, \n            label: this.label, \n            range: this.range, \n            visible: this.visible , \n            negative: this.negative,\n            linked : this.linked\n          }\n      }\n\n      static build(n: AskOmicsViewAttributes) {\n          return JSON.stringify(n.getObject())\n      }\n\n\n\n      static from(n: AskOmicsViewAttributesI) : AskOmicsViewAttributes {\n        const att = new AskOmicsViewAttributes(n.id,n.uri,n.range,n.label)\n        att.visible = n.visible\n        att.negative = n.negative \n        att.linked = n.linked\n        return att\n\n    }\n\n}\n\nexport type ViewNode3DJS = {\n    id     : string\n    uri    : string\n    focus  : string\n    label  : string\n    state_n  : ObjectState\n    type   : NodeType\n}\n\nexport type ViewLink3DJS = {\n    id     : string\n    uri    : string\n    label  : string\n    source : ViewNode3DJS\n    target : ViewNode3DJS\n    state_n  : ObjectState\n    type   : LinkType\n}\n\nexport interface Graph3DJS { \n    nodes : ViewNode3DJS[], \n    links : ViewLink3DJS[] \n}\n\n\nexport enum NodeType {\n    SOMETHING=0,\n    FORWARD_ENTITY,\n    BACKWARD_ENTITY   \n}\n\nexport enum LinkType {\n    FORWARD_PROPERTY=0,\n    BACKWARD_PROPERTY,\n    IS_A\n}\n\nexport enum ObjectState {\n    SUGGESTED=0,\n    CONCRETE,\n    SELECTED,   \n}\n\nexport enum FilterProperty {\n    TO=0,\n    IS_A,\n    FROM,\n    ALL,   \n}\n\n/**\n *  \"text/turtle\",\n      \"text/n3\",\n      \"text/rdf-xml\",\n      \"application/rdf+xml\"\n */\nexport class UserConfiguration {\n    id             : string  \n    url            : string = \"\"\n    file           : string = \"\"\n    content        : string = \"\"\n    mimetype       : string = \"application/sparql-query\"\n    method         : string = \"POST\"\n\n    strategy       : string = \"data-driven\"\n    logLevel       : string = \"info\"\n\n    constructor(id  : string) {\n            this.id = id\n    }\n    \n\n    static build(s : any) : UserConfiguration {\n        const copy     = new UserConfiguration(s.id)\n        \n        copy.url     = s.url \n        copy.file    = s.file \n        copy.content = s.content\n        copy.mimetype = s.mimetype \n        copy.method = s.method \n        copy.strategy = s.strategy  \n        copy.logLevel = s.logLevel\n\n        return copy  \n    }\n\n    remoteAccess() : string {\n        if ( this.url.length>0) {\n            return `\"url\" : \"`+this.url+`\"`\n        } else if ( this.file.length>0) {\n            return `\"file\" : \"`+this.file+`\"`\n        } else if ( this.content.length>0 ) {\n            return `\"content\" : \"`+this.content+`\"`\n        }\n        \n        throw Error(\"url|file|content should bed defined.\") ;\n\n    }\n    methodAcess() : string {\n        if ( this.method ) `\"method\" : \"`+this.method+`\"`\n        return \"\"\n    }\n\n    jsonConfigurationSWDiscoveryString() : string {\n\n        let ma : string = this.methodAcess() \n\n        if (ma.length > 0 ) {\n            ma = ma + \",\\n\"\n        } \n\n        return  `{\n            \"sources\" : [{\n            \"id\"  : \"__id__\",\\n`  +\n            this.remoteAccess() + \",\\n\" +\n            ma +\n            `\"mimetype\" : \"`+this.mimetype+`\"` + \n        `}],\n            \"settings\" : {\n                \"cache\" : true,\n                \"logLevel\" : \"`+this.logLevel+`\",` +\n                `\"sizeBatchProcessing\" : 10,\n                \"pageSize\" : 10\n            }\n        }`\n    }\n}\n  \n\nexport abstract class AskOmicsGenericNode {\n    id          : string\n    uri         : string = \"\"\n    label       : string = \"\"\n    state_n     : ObjectState\n\n    static idCounter : number  = 0 ;\n\n    constructor( uri : string ,  label : string ) {\n        this.id = String(AskOmicsGenericNode.idCounter++)\n        this.uri = uri \n        this.state_n = ObjectState.SUGGESTED    \n        \n        if ( label.length > 0 )\n            this.label = label\n        else\n            this.label = Utils.splitUrl(uri)\n    }\n\n    isSuggested() : Boolean { return this.state_n == ObjectState.SUGGESTED}\n\n    isConcrete() : Boolean { return this.state_n == ObjectState.CONCRETE}\n\n    isSelected() : Boolean { return this.state_n == ObjectState.SELECTED}\n\n    setSuggested() : void { this.state_n = ObjectState.SUGGESTED}\n\n    setConcrete() : void { this.state_n = ObjectState.CONCRETE}\n\n    setSelected() : void { this.state_n = ObjectState.SELECTED}\n\n    getObject() : object {\n        return Object.assign({},this)\n    }\n}\n\nexport class AskOmicsViewNode extends AskOmicsGenericNode {\n    focus : string\n    type : NodeType\n    \n    constructor(uri : string, label : string, type: NodeType) {\n        super(uri,label);\n        this.type  = type\n        this.focus = \"\"\n    }\n\n    static something(state : ObjectState,focus:string) : AskOmicsViewNode {\n        const n = new AskOmicsViewNode(\"something\",\"Something\",NodeType.SOMETHING) ;\n        n.type = NodeType.SOMETHING ;\n        n.state_n = state\n        n.focus = focus\n        return n\n    }\n\n    static build( node : ViewNode3DJS ) : string {\n        return JSON.stringify({ \n            id: node.id, \n            uri : node.uri, \n            label: node.label, \n            type: node.type , \n            focus: node.focus,\n            state_n : node.state_n\n        })\n    }\n} \n\nexport class AskOmicsViewLink extends AskOmicsGenericNode {\n    type      : LinkType\n    source    : string\n    target    : string\n\n    constructor(uri : string,  label : string, typeLink : LinkType, source : string, target : string) {\n        super(uri,label);\n       \n        this.type = typeLink\n        this.source = source\n        this.target = target    \n    }\n\n    static build( link : ViewLink3DJS ) : string {\n        return JSON.stringify({ \n            id: link.id , \n            uri : link.uri, \n            label : link.label, \n            type: link.type, \n            source: link.source.id, \n            target : link.target.id,\n            state_n : link.state_n\n     })\n    }\n   \n} \n\nexport enum RangeBoxType {\n    XSD_UNKNOWN=0,\n    XSD_NUMERIC,\n    XSD_BOOLEAN,\n    XSD_STRING,   \n}\n\nexport type RdfSparqlResultForm = {\n    type : String,\n    value: String, \n    datatype: String,\n    \"xml:lang\" : String\n}","export default class Utils {\n\n    static isUrl(s : string) {\n      /* eslint-disable */\n       var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\n       return regexp.test(s);\n    }\n  \n    static truncate(_string : string, n: number) {\n      if (_string.length > n) {\n        return _string.substring(0 ,n) + \"...\"\n      } else {\n        return _string\n      }\n    }\n  \n    static splitUrl(url : string) : string {\n      let splitList = url.split('/')\n      // take last elem\n      let last = splitList[splitList.length - 1]\n      let splitList2 = last.split('#')\n      return decodeURI(splitList2[splitList2.length - 1])\n    }\n  \n    static humanFileSize (bytes : number, si : boolean) {\n      let thresh = si ? 1000 : 1024\n      if (Math.abs(bytes) < thresh) {\n        return bytes + ' B'\n      }\n      let units = si ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n      let u = -1\n      do {\n        bytes /= thresh\n        ++u\n      } while (Math.abs(bytes) >= thresh && u < units.length - 1)\n      return bytes.toFixed(1) + ' ' + units[u]\n    }\n  \n    static humanDate (date : number) {\n      let event = new Date(date * 1000)\n      return event.toUTCString()\n    }\n  /*\n    static objectHaveKeys(obj : Object, level, ...rest) {\n      if (obj === undefined) return false\n      if (rest.length == 0 && obj.hasOwnProperty(level)) return true\n      return this.objectHaveKeys(obj[level], ...rest)\n    }\n  \n    static isFunction(functionToCheck) {\n      return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]'\n    }\n  */\n    static stringToHexColor (str : string ) {\n      // first, hash the string into an int\n      let hash = 0\n      for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash)\n      }\n      // Then convert this int into a rgb color code\n      let c = (hash & 0x00FFFFFF).toString(16).toUpperCase()\n      let hex = '#' + '00000'.substring(0, 6 - c.length) + c\n      return hex\n    }\n  \n    static isDarkColor(hex : string ) {\n      let c = hex.substring(1)    // strip #\n      let rgb = parseInt(c, 16)   // convert rrggbb to decimal\n      let r = (rgb >> 16) & 0xff  // extract red\n      let g = (rgb >>  8) & 0xff  // extract green\n      let b = (rgb >>  0) & 0xff  // extract blue\n  \n      let luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n  \n      if (luma < 128) {\n        return true\n      }\n      return false\n    }\n  \n  }\n  ","\nimport { Options, Vue } from 'vue-class-component';\nimport { UserConfiguration } from '@/ts/types'\n\n@Options({\n  name: \"AppView\",\n  \n  data() { \n        return {\n          discovery               : \"\",\n          configuration           : new UserConfiguration(\"test\") ,//`{ \"sources\" : [{ \"id\"  : \"test\", \"url\" : \"https://openstack-192-168-101-49.vm.openstack.genouest.org/sparql/\" }]}`,\n          requestManagerStringify : \"\"\n        }\n  },\n  \n  watch: {\n    discovery(value: string) {\n      //alert(value)\n      this.requestManagerStringify = JSON.stringify([this.configuration.jsonConfigurationSWDiscoveryString(),this.configuration.strategy,this.discovery])\n      console.log(\"******************************LOG ==> \"+value)\n    }\n  },\n  \n  created() {\n    this.configuration  = new UserConfiguration(\"test\")\n    this.configuration.type = \"url\"\n    this.configuration.url  = \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\"\n    this.configuration.strategy  = \"data-driven\" \n    this.requestManagerStringify = JSON.stringify([this.configuration.jsonConfigurationSWDiscoveryString(),this.configuration.strategy,this.discovery])\n  },\n \n  methods : {\n    updateConfiguration(configuration : string) {\n      this.configuration = UserConfiguration.build(JSON.parse(configuration))\n      this.requestManagerStringify = JSON.stringify([this.configuration.jsonConfigurationSWDiscoveryString(),this.configuration.strategy,this.discovery])\n    }\n  }\n})\nexport default class App extends Vue {}\n","import { render } from \"./App.vue?vue&type=template&id=f5fcac30\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n    <QueryBuilder v-model:query=\"query\" @updateQuery=\"updateQuery\" />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport QueryBuilder from '@/components/askomics/panels/QueryBuilder.vue'\n\n@Options({\n  name: \"AskOmicsView\",\n  \n  components: {\n    QueryBuilder \n  },\n\n  emits: [\"updateDiscovery\"],\n \n  computed: {\n    query() {\n      return this.$route.params.query\n    }\n  },\n\n  methods : {\n    updateQuery(config_strategy_query : string) {\n      const r = JSON.parse(config_strategy_query)\n      this.$emit('updateDiscovery',r[2])\n    }\n  }\n\n})\nexport default class AskOmics extends Vue {}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n</style>","<template>\n  <div id=\"askomics-panel\">\n      <div class=\"container\"> \n          <hr/>\n          <!-- waiting div -->\n          \n              <br />\n              <div class=\"row\">\n                \n              <div class=\"col col-xs-7\">\n                  <QueryGraphPanel \n                    v-model:requestString=\"currentQuery\"\n                    v-model:filterProperty=\"filterProperty\"\n                    @updateRequestManager=\"updateQuery\"\n                    @requestManagerBusy=\"requestBusy = JSON.parse($event)\"\n                    @requestManagerBusyPercent=\"requestBusyPercent = JSON.stringify(JSON.parse($event)*100)\"\n                    @requestManagerBusyEvent=\"requestBusyEvent\"\n                    :width=\"750\" \n                    :height=\"450\" />\n              </div>\n              \n              <div class=\"col col-xs-5\">\n                  <AttributesPanel \n                    v-model:requestString=\"currentQuery\"\n                    @updateRequestManager=\"updateQuery\"\n                    @updateFilterProperty=\"filterProperty = JSON.parse($event)\"\n                    :width=\"450\" \n                    :height=\"450\"\n                   />\n              </div>\n              \n         </div>\n         <div class=\"row\">\n\n\n           <div class=\"d-flex flex-row mb-3\">\n              <div class=\"p-2 bd-highlight\">\n              <button type=\"button\" class=\"form-control btn btn-primary\" @click=\"back\">&lt;&lt;</button>\n             </div>\n             <div class=\"p-2 bd-highlight\">\n              <button type=\"button\" class=\"form-control btn btn-primary\" @click=\"forward\">&gt;&gt;</button>\n             </div>\n             \n             <div class=\"p-2 bd-highlight\">\n              <button type=\"button\" class=\"form-control btn btn-primary\" @click=\"getResults\">Results</button>\n             </div>\n\n             <div class=\"p-2 bd-highlight\">\n              <button type=\"button\" class=\"form-control btn btn-primary\" @click=\"forward\">URL</button>\n             </div>\n\n            <div class=\"p-2 bd-highlight\">\n             <font-awesome-icon icon=\"spinner\" size=\"2x\" spin v-if=\"requestBusy\" />\n             </div>\n          </div>\n                \n          <div class=\"progress\" v-if=\"requestBusy\">\n                <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: '+requestBusyPercent+'%'\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                  {{ requestBusyPercent }} {{ requestBusyEvent }}\n                </div>\n          </div> \n         </div>\n     </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport router from '@/router/index';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n\nimport QueryGraphPanel from './QueryGraphPanel.vue'\nimport AttributesPanel from './AttributesPanel.vue'\nimport { FilterProperty } from '@/ts/types';\n\n[ faSpinner ].map(icon => library.add(icon)) ;\n\n@Options({\n  name: \"QueryBuilder\",\n  \n  components : {  \n      library,FontAwesomeIcon, QueryGraphPanel,AttributesPanel\n      },\n  \n  emits: [\"updateQuery\"],\n  \n  props : {\n    query :  String\n  },\n \n  data () {\n    return {\n      currentQuery       : this.query,\n      requestBusy        : false,\n      requestBusyPercent : \"0\",\n      requestBusyEvent   : \"\",\n      filterProperty     : FilterProperty.TO,\n    }\n  },\n   \n  watch : {\n    requestBusy : 'prepareRequestBusy',\n    requestBusyPercent : 'prepareRequestBusy'\n  } ,\n  \n  methods: {\n    \n    prepareRequestBusy() {\n      if (!this.requestBusy || this.requestBusyPercent == \"100\") {\n        this.requestBusyPercent = \"0\"\n        this.requestBusyEvent = \"\"\n      }\n    },\n\n    updateQuery(value : string) {\n      this.currentQuery = value\n      this.$emit('updateQuery',value)\n    },\n\n    attributeBoxEvent(e: string) {\n      console.log(\"attributeBoxEvent:\",e)\n    },\n\n    /* https://router.vuejs.org/guide/essentials/navigation.html*/\n\n    getResults() {\n      router.push({ name : 'results' , params: { rm: this.currentQuery }})\n    } ,\n\n    back() {\n\n    } ,\n\n    forward() {\n\n    }\n  }\n  \n})\n\nexport default class AskOmics extends Vue {\n\n}\n\n</script>\n\n<style>\n</style>\n","\n<!-- \n\n  Implementation AskOmics Visualization inside a Web Component\n  https://github.com/askomics/flaskomics/blob/dev/askomics/react/src/routes/query/visualization.jsx \n\n-->\n<template>\n  <div id=\"query-graph-panel\" :class=\"canvasClass\">\n    <canvas id=\"canvas-askomics-graph\" :width=\"width\" :height=\"height\" disabled> </canvas>\n  </div>\n</template>\n\n<script>\nimport { Options, Vue } from 'vue-class-component';\nimport * as d3 from 'd3';\nimport Utils from '@/ts/utils'\nimport RequestManager from '@/ts/RequestManager'\nimport UserIncrementManager from '@/ts/UserIncrementManager'\nimport { ObjectState, LinkType, FilterProperty } from '@/ts/types';\nimport { GraphBuilder } from '@/ts/GraphBuilder'\n\n@Options({\n  name: \"QueryGraphPanel\",\n  \n  emits: [\"updateRequestManager\",\"requestManagerBusy\",\"requestManagerBusyEvent\",\"requestManagerBusyPercent\"],\n  \n  components : {  },\n  \n  props: {\n    requestString   : {\n                        type: String,\n                        required: true\n                      },\n    filterProperty   : FilterProperty,\n    width           : Number,\n    height          : Number,\n  },\n\n  data () {\n    return {\n      ctrlKey: false,\n      canvas: null,\n      ctx: null,\n      color: d3.scaleOrdinal([\"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]),\n      zoom : 5,\n      zoomTime : 1000,\n      trans : d3.zoomIdentity,\n      colorGrey : '#808080',\n      colorDarkGrey : '#404040',\n      colorFirebrick : '#cc0000',\n      lineWidth : 2.5,\n      nodeSize : 17,\n      textSize : 12,\n      blankNodeSize : 1,\n      arrowLength : 40,\n      forceCollide: 40,\n      strengthForce: 1.0,\n      strengthForceManBody: -2000,\n      alphaTarget : 0,\n      canvasClass : \"\",\n      graph       : { nodes : [], links : [] },\n      request      : null,\n      selectedNodeCanvas : null\n    }\n  },\n\n  mounted() {\n    this.request = new RequestManager(this.requestString)\n    this.graph = GraphBuilder.build3DJSGraph(this.request) \n    this.setUpCanvas();\n  },\n  \n  beforeDestroy() {\n  },\n\n  watch: {\n    requestString() {\n      this.request = new RequestManager(this.requestString)\n      this.graph = GraphBuilder.build3DJSGraph(this.request)\n      this.updateCanvas(this.selectedNodeCanvas)\n    },\n\n    filterProperty() {\n      this.updateCanvas(this.selectedNodeCanvas)     \n    }\n    \n  },\n  \n  computed : {\n    selectedNode() {\n      return this.graph.nodes.filter( n => n.state_n == ObjectState.SELECTED ).pop() \n    }\n  },\n\n  methods: {\n \n    setUpCanvas() {\n\n        /**\n         * Managing CANVAS\n         */\n      \n      this.canvas = d3.select(\"#canvas-askomics-graph\")\n      this.ctx = this.canvas.node().getContext(\"2d\");\n\n      this.simulation = d3\n          .forceSimulation()\n          .force(\"x\",d3.forceX(this.width/2).strength(this.strengthForce) )\n          .force(\"y\",d3.forceY(this.height/2).strength(this.strengthForce) )\n          .force(\"collide\",d3.forceCollide(this.nodeSize+this.forceCollide))\n          .force(\"charge\", d3.forceManyBody().strength(this.strengthForceManBody))\n       //   .force(\"center\", null)\n         ;\n              \n      this.simulation.on(\"tick\", this.update);\n\n      this.canvas\n        .on(\"click\", this.canvasClick)\n        .call(d3.drag()\n            .container(this.canvas.node())\n            .subject(this.dragsubject)\n            .on(\"start\", this.dragstarted)\n            .on(\"drag\", this.dragged)\n            .on(\"end\", this.dragended)\n          )\n        /*.call(\n          d3.zoom()\n              .extent([[0, 0], [this.width, this.height]])\n              .scaleExtent([1, 8])\n              .on(\"zoom\", this.zoomed)\n          )*/\n          ;\n    },\n        \n    update() {\n      if ( this.graph && this.graph.nodes && this.graph.links ) {\n        this.ctx.clearRect(0,0,this.width, this.height);\n        this.ctx.fillStyle = \"Gainsboro\";\n        this.ctx.fillRect(0,0,this.width,this.height);\n\n        this.ctx.beginPath();\n        this.ctx.globalAlpha = 1.0;\n        this.ctx.strokeStyle = \"#aaa\";\n        this.graph.links.forEach(this.drawLink);\n        this.ctx.stroke();\n\n        this.ctx.globalAlpha = 1.0;\n       \n        this.graph.nodes.forEach(this.drawNode);\n\n        this.simulation.nodes(this.graph.nodes);\n        this.simulation\n                .force(\"link\", d3.forceLink().id(function (d) { return d.id; }))\n                .force(\"link\").links(this.graph.links)\n        \n        this.simulation.restart()\n      } else {\n        console.error(\"graph is not initialized.\")\n      }\n      \n    },\n\n    zoomed(event) {\n      this.ctx.translate(event.transform.x, event.transform.y); \n      this.ctx.scale(event.transform.k, event.transform.k);\n    },\n    \n    dragsubject(event) {\n        return this.simulation.find(event.x, event.y);\n    },\n\n    /**\n     * usefull to update canavs when requestManager change his internal state\n     */\n    updateCanvas(selectedNodeCanvas) {   \n      /**\n       * Nothing is selected with go out and remove selection */ \n      if (! selectedNodeCanvas ) {\n        console.log(\" ---  UNSELECTED NODE / updateCanvas/UserIncrementManager.removeSuggestion --- \")\n        this.graph =  UserIncrementManager.removeSuggestion(this.graph) \n        this.request.setFocusRoot()\n        this.$emit('updateRequestManager',this.request.serialized())\n      } else {\n         \n        /**----------------------------------------------------------------------------\n         * Creation Node/Links  \n         */\n        console.log(\" ---  SELECTED NODE / updateCanvas/UserIncrementManager.setShapeNode --- \")\n        this.graph = UserIncrementManager.setShapeNode(this.request,selectedNodeCanvas,this.graph)\n\n        /**----------------------------------------------------------------------------\n         * Remove Suggestion unused\n         */\n        console.log(\" ---  SELECTED NODE / updateCanvas/UserIncrementManager.removeSuggestion --- \")\n        this.graph = UserIncrementManager.removeSuggestion(this.graph) \n\n        /**-----------------------------------------------------------------------------\n         *  suggestions management\n         * \n         **/\n\n        this.lock_suggestions();\n      }\n\n      this.$emit('updateRequestManager',this.request.serialized())\n      this.update()\n    },\n\n    canvasClick(event) {\n      \n      console.log(\"------------------ canvasClick ---------------\")      \n      // if ctrl released \n      if ( ! event.ctrlKey ) this.graph = UserIncrementManager.releaseSelectedObject(this.graph)\n     \n      /* Find Selected Object */\n      let rect = this.canvas.node().getBoundingClientRect();\n      \n      this.selectedNodeCanvas = this.simulation.find(event.x - rect.left, event.y - rect.top,this.nodeSize);\n      this.updateCanvas(this.selectedNodeCanvas)     \n    },\n\n  lock_suggestions( ) {\n    /* proposes suggestion only if defined */\n    if (! this.selectedNode )\n      return \n\n      /* add new suggestions */\n      /* fix bug / trick to update graph with new values */\n      let graph = this.graph\n      let component = this\n      component.canvasClass = \"query-graph-panel-disabled\"\n      let ArrayPromises = []\n      switch (this.filterProperty) {\n        case FilterProperty.ALL : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeForward(this,this.request,this.selectedNode),\n              UserIncrementManager.clickNodeBackward(this,this.request,this.selectedNode)\n            ]\n          break\n        }\n        case FilterProperty.TO : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeForward(this,this.request,this.selectedNode),\n            ]\n          break\n        }\n        case FilterProperty.FROM : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeBackward(this,this.request,this.selectedNode)\n            ]\n          break\n        }\n         case FilterProperty.IS_A : {\n          ArrayPromises = []\n          break\n        }\n      }\n\n      Promise.all(ArrayPromises).then(nodesAndLinksArray =>{\n          console.log(\"----------------------lock_suggestions----------------------------\")\n          for ( let nodesAndLinks of nodesAndLinksArray ) {\n            console.log(JSON.stringify(nodesAndLinks))\n            console.log(\"--------------------------------------------------\")\n            component.graph.nodes = graph.nodes.concat(nodesAndLinks[0]);\n            component.graph.links = graph.links.concat(nodesAndLinks[1]);\n            graph = this.graph\n          }\n          component.graph = graph\n          component.canvasClass = \"\"\n          \n      }).catch( e => {\n        alert(e)\n      })\n      .finally(function() {\n        component.canvasClass = \"\"\n        component.update()\n      }) \n    },\n    \n    dragstarted(event) {\n     \n      if (!event.active) this.simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    },\n\n    dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    },\n    dragended(event) {\n        if (!event.active) this.simulation.alphaTarget(0);\n        event.subject.fx = null;\n        event.subject.fy = null;\n      },\n    \n    IntersectionCoordinate (x1, y1, x2, y2, r) {\n        let theta = Math.atan((y2 - y1) / (x1 - x2))\n        let x\n        let y\n        if (x1 < x2) {\n          x = x1 + r * Math.cos(theta)\n          y = y1 - r * Math.sin(theta)\n        } else {\n            x = x1 - r * Math.cos(theta)\n            y = y1 + r * Math.sin(theta)\n          }\n          return { x: x, y: y }\n        },\n    middleCoordinate (x1, y1, x2, y2) {\n        let theta = Math.atan((y2 - y1) / (x1 - x2))\n        let x\n        let y\n        if (x1 < x2) {\n          x = x1 + (this.nodeSize * 4) * Math.cos(theta)\n          y = y1 - (this.nodeSize * 4) * Math.sin(theta)\n        } else {\n          x = x1 - (this.nodeSize * 4) * Math.cos(theta)\n          y = y1 + (this.nodeSize * 4) * Math.sin(theta)\n        }\n        return { x: x, y: y }\n      },\n\n    triangleCoordinate (x1, y1, x2, y2, headlen) {\n      let theta = Math.atan2(y1 - y2, x1 - x2)\n\n      let xa = x1 - headlen * Math.cos(theta - Math.PI / 14)\n      let ya = y1 - headlen * Math.sin(theta - Math.PI / 14)\n\n      let xb = x1 - headlen * Math.cos(theta + Math.PI / 14)\n      let yb = y1 - headlen * Math.sin(theta + Math.PI / 14)\n\n      return {\n        xa: xa,\n        ya: ya,\n        xb: xb,\n        yb: yb\n      }\n    },\n\n    subNums (id) {\n        let newStr = \"\"\n        let oldStr = id.toString()\n        let arrayString = [...oldStr]\n        arrayString.forEach(char => {\n          let code = char.charCodeAt()\n          newStr += String.fromCharCode(code + 8272)\n        })\n        return newStr\n    },\n\n    drawNode(node) {\n\n      let unselectedColor = this.colorGrey\n      let unselectedColorText = this.colorDarkGrey\n      \n      this.ctx.fillStyle = node.uri ? Utils.stringToHexColor(node.uri) : \"#faaafff\" ;\n      \n      this.ctx.lineWidth = this.lineWidth ;\n\n      this.ctx.strokeStyle = node.state_n == ObjectState.SELECTED ? this.colorFirebrick : unselectedColor ;\n      this.ctx.globalAlpha = node.state_n == ObjectState.SUGGESTED ? 0.5 : 1 ;\n      node.state_n == ObjectState.SUGGESTED ? this.ctx.setLineDash([this.lineWidth, this.lineWidth]) : this.ctx.setLineDash([]);\n\n      // draw node\n      this.ctx.beginPath();\n      this.ctx.arc(node.x, node.y, this.nodeSize, 0, 2 * Math.PI, false);\n      this.ctx.stroke();\n      this.ctx.fill();\n      this.ctx.closePath();\n      // draw text\n      this.ctx.beginPath();\n      this.ctx.fillStyle = unselectedColorText;\n      this.ctx.font = this.nodeSize + 'px Sans-Serif';\n      this.ctx.textAlign = 'middle';\n      this.ctx.textBaseline = 'middle';\n      let label = node.humanId ? node.label + \" \" + this.subNums(node.humanId) : node.label;\n      this.ctx.fillText(label, node.x + this.nodeSize, node.y + this.nodeSize);\n      this.ctx.closePath();\n\n    },\n\n    drawLink(link) {\n      link.state_n == ObjectState.SUGGESTED ? this.ctx.setLineDash([this.lineWidth, this.lineWidth]) : this.ctx.setLineDash([]);\n      let unselectedColor = this.colorGrey\n      let unselectedColorText = this.colorDarkGrey\n      \n      this.ctx.strokeStyle = link.state_n == ObjectState.SELECTED ? this.colorFirebrick : unselectedColor\n      this.ctx.fillStyle = link.state_n == ObjectState.SELECTED ? this.colorFirebrick : this.colorGrey\n      this.ctx.globalAlpha = link.state_n == ObjectState.SUGGESTED ? 0.3 : 1\n      this.ctx.lineWidth = this.lineWidth\n\n      this.ctx.beginPath();\n      let c = this.IntersectionCoordinate(link.source.x, link.source.y, link.target.x, link.target.y, this.nodeSize)\n      this.ctx.moveTo(c.x, c.y);\n      c = this.IntersectionCoordinate(link.target.x, link.target.y, link.source.x, link.source.y, this.nodeSize)\n      this.ctx.lineTo(c.x, c.y);\n      this.ctx.stroke();\n      this.ctx.closePath();\n\n       // draw arrow\n       if (link.type == LinkType.FORWARD_PROPERTY || link.type == LinkType.BACKWARD_PROPERTY) {\n          this.ctx.beginPath()\n          let triangle = this.triangleCoordinate(link.target.x, link.target.y, link.source.x, link.source.y, this.arrowLength)\n          this.ctx.moveTo(c.x, c.y)\n          this.ctx.lineTo(triangle.xa, triangle.ya)\n          this.ctx.lineTo(triangle.xb, triangle.yb)\n          this.ctx.fill()\n          this.ctx.closePath()\n       }\n      // draw text\n        this.ctx.beginPath()\n        this.ctx.fillStyle = unselectedColorText\n        this.ctx.font = this.textSize + 'px Sans-Serif'\n        this.ctx.textAlign = 'middle'\n        this.ctx.textBaseline = 'middle'\n        let m = this.middleCoordinate(link.source.x, link.source.y, link.target.x, link.target.y)\n        this.ctx.fillText(link.label, m.x, m.y)\n        this.ctx.closePath()\n   }\n    \n  }\n})\n\nexport default class QueryGraphPanel extends Vue {\n\n}\n\n</script>\n\n<style>\n\n.query-graph-panel-disabled {\n    cursor: not-allowed;\n    pointer-events: none;\n}\n</style>\n","import { SWDiscoveryConfiguration, SWDiscovery, URI, SWTransaction} from '@p2m2/discovery'\nimport { ViewNode3DJS, ViewLink3DJS, LinkType, AskOmicsGenericNode, \n         AskOmicsViewNode, AskOmicsViewLink, NodeType, \n         ObjectState, AskOmicsViewAttributes } from './types'\nimport StrategyRequestAbstract from \"./StrategyRequestAbstract\"\nimport StrategyRequestAskOmics from \"./StrategyRequestAskOmics\"\nimport StrategyRequestDataDriven from \"./StrategyRequestDataDriven\"\nimport Utils from './utils'\nimport { Vue } from 'vue-class-component'\n\n/**\n * Trick . TS inser SWDiscovery inside a Proxy type. Exception occurs whith the first use.\n */\nlet discovery_map : Map<number,any> ;\n\nfunction getDiscovery(id : number) : any {\n    const d = discovery_map.get(id);\n    if ( d )\n        return d ;\n    return new SWDiscovery();\n}\n/**\n * end trick\n */\n\nexport default class RequestManager {\n    static idCounter : number                  = 0 ;\n    id               : number                  = RequestManager.idCounter++;\n    config           : any                         ;\n    config_str       : string                  = \"\" ;\n    strategy_str     : string                  = \"\" ;\n    strategy         : StrategyRequestAbstract = new StrategyRequestDataDriven();\n    discovery        : any                     = null ;\n    \n    defaultGraph(focus: string)  : any {\n        return {\n            nodes : [AskOmicsViewNode.something(ObjectState.CONCRETE,focus)],\n            links : []\n        }\n    }\n\n    constructor(requestManagerStringify : string) {\n        if ( !discovery_map ) {\n            discovery_map =  new Map<number,any>() ;\n        }\n        \n        this.parse(requestManagerStringify)\n    }\n\n    serialized() : string {\n        return JSON.stringify([ this.config_str, this.strategy_str, this.getDiscovery().getSerializedString()])\n    }\n\n    parse( str : string ) {\n        \n        if (! str || str.length<=0) {\n            throw new Error(\"Non string to parse !\")\n        }\n\n        const r = JSON.parse(str)\n        this.config_str = r[0]\n        this.config = SWDiscoveryConfiguration.setConfigString(this.config_str)\n        this.strategy_str = r[1]\n        const serializedDiscovery = r[2]\n\n        let sw = SWDiscovery(this.config)\n        \n        if (serializedDiscovery && serializedDiscovery.length>0)\n            sw = sw.setSerializedString(serializedDiscovery)\n        else {\n\n            const n = this.defaultGraph(\"start\").nodes[0]\n\n            sw = sw\n            .something(\"start\")\n            .setDecoration(\"node\",AskOmicsViewNode.build(n))\n            .setDecoration(\"attributes\",JSON.stringify([...new Map()]))\n        }\n         \n        this.setDiscovery(sw)\n        \n        switch(this.strategy_str) {\n            case \"askomics\" : {\n                this.setAskOmicsStrategy()\n                break\n            }\n            case \"data-driven\" : {\n                this.setDataDrivenStrategy()\n                break\n            }\n            default : {\n                console.warn(\"strategy unknown : \"+this.strategy_str)\n                this.setDataDrivenStrategy()\n            }\n        }\n\n    }\n\n\n    setDiscovery(disco : any) : void  { discovery_map.set(this.id,disco) } \n\n    getDiscovery() : any { return getDiscovery(this.id) }\n\n    update(node : ViewNode3DJS, link : ViewLink3DJS ) : string {\n        \n        const snd_node = link.source.id == node.id ? link.source : link.target\n        const d : any = this.getDiscovery()\n        \n        switch(link.type) { \n            case LinkType.FORWARD_PROPERTY: { \n                this.setDiscovery(\n                    d.isSubjectOf(new URI(link.uri))\n                    .isA(new URI(snd_node.uri)))\n                \n                node.state_n = ObjectState.CONCRETE\n                node.focus = this.getDiscovery().focus()\n                \n                this.setDiscovery(\n                    this.getDiscovery()\n                    .setDecoration(\"link\",AskOmicsViewLink.build(link))\n                    .setDecoration(\"node\",AskOmicsViewNode.build(node))\n                    .setDecoration(\"attributes\",JSON.stringify([...new Map()]))\n                    )\n\n                break; \n            } \n            case LinkType.BACKWARD_PROPERTY: { \n                this.setDiscovery(\n                    d\n                    .isObjectOf(new URI(link.uri))\n                    .isA(new URI(snd_node.uri)))\n                \n                node.state_n = ObjectState.CONCRETE\n                node.focus = this.getDiscovery().focus()\n                \n                this.setDiscovery(\n                        this.getDiscovery()\n                        .setDecoration(\"link\",AskOmicsViewLink.build(link))\n                        .setDecoration(\"node\",AskOmicsViewNode.build(node))\n                        .setDecoration(\"attributes\",JSON.stringify([...new Map()]))\n                        )\n               break; \n            } \n            case LinkType.IS_A: { \n                this.setDiscovery(\n                    d\n                    .isA(new URI(snd_node.uri))\n                    //TODO\n                    //.decorate(\"node\",JSON.stringify(AskOmicsViewNode.build(node)))\n                    )\n               break; \n            } \n            default: { \n               console.error(\"unkown action :\"+JSON.stringify(link))\n               break; \n            } \n         }\n\n         return this.getDiscovery().focus() \n    }\n\n    /** CONFIGURATION */\n    setPageSize(numberOfResults : number) {\n        const re = /(\"pageSize\"\\s*:\\s*)(\\d+)/; \n        this.config_str = this.config_str.replace(re, \"$1\"+numberOfResults)\n        console.log(this.config_str)\n        this.config = SWDiscoveryConfiguration.setConfigString(this.config_str)\n        const disco = this.getDiscovery()\n        this.setDiscovery(disco.setConfig(this.config))\n    }\n\n   \n    focusIsSelected() : boolean {\n        return ( this.getFocus() != this.getDiscovery().root().focus() ) \n    }\n\n    isFocusStart() : boolean {\n        return ( this.getFocus() == \"start\" ) \n    }\n\n    setAskOmicsStrategy() {\n        console.log(\" -- setAskOmicsStrategy -- \");\n        this.strategy = new StrategyRequestAskOmics(this.config) ;\n    }\n\n    setDataDrivenStrategy() {\n        console.log(\" -- setDataDrivenStrategy -- \");\n        this.strategy = new StrategyRequestDataDriven() ;\n    }\n\n    getFocus() : string {\n        return this.getDiscovery().focus() ;\n    }\n\n    setFocusRoot() : void {\n        const disco = this.getDiscovery().root() ;\n        this.setDiscovery(disco);\n    }\n\n    setFocus(idFocus : string) : void {\n        const disco = this.getDiscovery().focus(idFocus) ;\n        this.setDiscovery(disco);\n    }\n\n    checkVariablePresent(response : any ,index : number ,listVarName : string[] ) : Boolean {\n        for (let i=0;i<listVarName.length;i++) {\n            const varname = listVarName[i]\n            if ( ! response.results.bindings[index][varname] ) {\n                console.warn(\" probleme with entry : \"+JSON.stringify(response.results.bindings[index]))\n                return false\n            }\n        }\n        \n        return true\n    }\n\n    removeNode(vue : Vue) {\n        if ( this.focusIsSelected() ) {\n            this.setDiscovery(this.getDiscovery().remove(this.getDiscovery().focus())) ;            \n            vue.$emit('updateRequestManager',this.serialized())\n        } else {\n            console.warn(\"None node is selected !\")\n        }\n    }\n\n    updateAttribute(attribute :AskOmicsViewAttributes) {\n        \n        let map : Map<String,AskOmicsViewAttributes> = new Map(JSON.parse(this.getDiscovery().getDecoration(\"attributes\")))\n\n        map = map.set(attribute.uri, attribute)\n\n        /** ON PEUT PAS ENCORE SUPPRIMER UN DATATYPE */\n\n        if ( attribute.visible ) {\n            this.setDiscovery(\n                this.getDiscovery()\n                .datatype(attribute.uri,attribute.id)\n                )\n        }\n\n        this.setDiscovery(\n            this.getDiscovery()\n            .setDecoration(\"attributes\",JSON.stringify([...map]))\n            )\n    }\n\n    attributeList(focus: string) : Promise<AskOmicsViewAttributes[]> {\n        return new Promise((successCallback, failureCallback) => {\n            if (this.strategy) {\n                this.strategy.attributeList(this.getDiscovery(),focus) \n                //.console()\n                .select(\"property\",\"labelProperty\")\n                .distinct()\n                .commit()\n                .raw()\n                .then(\n                    (response : any) => {\n                        //console.log(response)\n                        const results : AskOmicsViewAttributes[] = []\n                        \n                        const m : Map<string,string> = new Map()\n                        for (let i=0;i<response.results.bindings.length;i++) {\n                            if ( ! this.checkVariablePresent(response,i,['property']) ) continue\n                            const uri   : string = response.results.bindings[i][\"property\"].value;\n                          /*\n                            TODO : Discovery => wait for \"bind.datatype\" feature\n\n                            let range : string \n                          \n                            if (response.results.bindings[i][\"range\"]) {\n                                range = response.results.bindings[i][\"range\"].value;\n                                console.log(\"RANGE:\"+range);\n                            } */\n                                \n\n                            let label   : string = Utils.splitUrl(uri)  ;\n                            try {\n                                const listLabelEntity = response.results.datatypes[\"labelProperty\"][uri] ;\n                                if ( listLabelEntity )\n                                    label=listLabelEntity[0].value; \n                            } catch (error) {\n                                failureCallback(error);\n                            }     \n\n                            m.set(uri,label)\n                        }\n                        \n                        if ( this.strategy && m.size>0) {\n                            const lUris : string[] = []\n                            for (const key of m.keys()) {\n                                lUris.push(key)\n                            }\n \n                            this.strategy.getDatatypes(this.config_str, lUris)\n                            .then ( (mapPropertyAndRange )=>{\n                                let iCount = 0\n                                lUris.map(\n                                    uriProperty => {\n                                        let label = m.get(uriProperty)\n                                        let range = mapPropertyAndRange.get(uriProperty)\n                                        \n                                        if (!label) label = uriProperty.split(/\\/#/).pop()\n                                        if (!label) label = \"\"\n                                        if (!range) range = \"\"\n                                        \n                                        const id : string = focus+\"_dt_\"+iCount++\n                                        results.push(\n                                            new AskOmicsViewAttributes(id,uriProperty,range,label)\n                                        )\n                                    })\n                                successCallback(results)\n                                \n                            }).catch(e => {failureCallback(e)} )\n                        } else {\n                            successCallback(results)\n                        }  \n                    })\n                .catch( (e : any) => {failureCallback(e)} )}\n        })\n    }\n\n    forwardEntities(vue : Vue, current: AskOmicsViewNode) : Promise<Map<String,AskOmicsGenericNode>> {\n        return this.propertyEntities(vue, NodeType.FORWARD_ENTITY,current)\n    }\n\n    backwardEntities(vue : Vue, current: AskOmicsViewNode) : Promise<Map<String,AskOmicsGenericNode>> {\n        return this.propertyEntities(vue, NodeType.BACKWARD_ENTITY,current)\n    }\n\n    propertyEntities( vue : Vue, type: NodeType, current: AskOmicsViewNode ) : Promise<Map<String,AskOmicsGenericNode>> {\n        return new Promise((successCallback, failureCallback) => {\n            if (this.strategy) {\n                \n                let disco : any = this.getDiscovery()\n                let typeLink : LinkType\n\n                switch(type) { \n                    case NodeType.FORWARD_ENTITY : { \n                        disco = this.strategy.forwardEntities(this.getDiscovery(),this.config_str,current)\n                        typeLink = LinkType.FORWARD_PROPERTY\n                        break; \n                    } \n                    case NodeType.BACKWARD_ENTITY : { \n                        disco = this.strategy.backwardEntities(this.getDiscovery(),this.config_str,current)\n                        typeLink = LinkType.BACKWARD_PROPERTY\n                        break; \n                    } \n                    default: { \n                        failureCallback(\"unkown action :\" +type)\n                        return\n                    } \n                 }\n\n                try {\n                    const transaction : any =\n                     disco\n                        //.console()\n                        .select(\"property\",\"entity\",\"labelEntity\",\"labelProperty\")\n                        .distinct()\n                        .commit()\n                        .progression( (percent : Number) => {\n                            vue.$emit('requestManagerBusyPercent',JSON.stringify(percent))\n\n                        })\n                        .requestEvent( (event : string ) => {\n                            vue.$emit('requestManagerBusyEvent',JSON.stringify(event))\n                        })\n\n                    transaction\n                        .raw()\n                        .then(\n                            (response : any) => {                      \n                                const mR = new Map()\n                                for (let i=0;i<response.results.bindings.length;i++) {\n                                    if ( ! this.checkVariablePresent(response,i,['entity','property']) ) continue\n                                  \n                                    const entity      : string = response.results.bindings[i][\"entity\"].value;\n                                    const property    : string = response.results.bindings[i][\"property\"].value;\n                                    let labelEntity   : string = \"\"  ;\n                                    let labelProperty : string = \"\"  ;\n                                    let n : AskOmicsViewNode ;\n\n                                    if (!mR.has(entity)) {\n                                       \n                                        try {\n                                            const listLabelEntity = \n                                                response.results.datatypes[\"labelEntity\"][entity] ;\n                                            if ( listLabelEntity )\n                                                labelEntity=listLabelEntity[0].value; \n                                        } catch (error) {\n                                            console.warn(error);\n                                        }     \n                                        \n                                        n = new AskOmicsViewNode(entity,labelEntity,type)\n\n                                        mR.set(entity, n) ;\n                                    } else {\n                                        n = mR.get(entity)\n                                    }\n                                    if(! mR.has(entity+property)) {\n                                        try {\n                                            const listLabelEntity = \n                                                response.results.datatypes[\"labelProperty\"][property] ;\n                                            if ( listLabelEntity )\n                                                labelProperty = listLabelEntity[0].value; \n                                        } catch (error) {\n                                            console.warn(error);\n                                        }    \n                                        \n                                        if (typeLink == LinkType.FORWARD_PROPERTY)\n                                            mR.set( entity+property,new AskOmicsViewLink(property,labelProperty,typeLink,current.id,n.id))\n                                        else \n                                            mR.set( entity+property,new AskOmicsViewLink(property,labelProperty,typeLink,n.id,current.id))\n                                    }\n                                }\n                                successCallback(mR);\n                            }\n                        ).catch( (e : Error) => { failureCallback(e) });\n                    } catch ( e ) {\n                        failureCallback(e)\n                    }\n            } else {\n                failureCallback(\"strategy undefined.\")\n            }\n       })\n    }\n    /**\n     * https://github.com/linmasahiro/vue3-table-lite\n     * @returns \n     */\n    getColumnsResults() {\n        console.log(\" --- getColumnsResults ---\")\n        console.log(this.config_str)\n        const rm = this.getDiscovery() ;\n        const r = rm.browse(\n            (node : any, deep : Number) => {\n                if( node.decorations && node.decorations.attributes ) {\n                    const attributes : Map<String,AskOmicsViewAttributes> = new Map(JSON.parse(node.decorations.attributes))\n\n                    for (const [key, element] of attributes) {\n                        if ( element.visible ) {\n                            return {\n                                node_id : node.idRef,\n                                label: element.label,\n                                field: element.id,\n                                width: \"3%\",\n                                sortable: true,\n                                isKey: false\n                               }\n                        } \n                    }\n                }\n                /*\n                if( node.decorations && node.decorations.node ) {\n                   return {\n                    label: node.idRef,\n                    field: node.idRef,\n                    width: \"3%\",\n                    sortable: true,\n                    isKey: false\n                   }\n                }*/\n            })\n            .filter( (value : Object) => value )\n\n        console.log(r)\n        return r \n\n    }\n\n    getCountAndLaziesPages(numberOfResults : number = 10) {\n        \n        const variables = this.getColumnsResults().flatMap( (value : any) => [value.node_id,value.field] )\n        const variables_uniq = [...new Set(variables)];\n\n        this.setPageSize(numberOfResults)\n        \n        return new Promise((successCallback, failureCallback) => {\n            this.getDiscovery()\n                .console()\n                .selectByPage(...variables_uniq)\n                .then( ( args : any ) => {\n                    successCallback(args)\n                }).catch( (error : string) => {\n                    failureCallback(error)\n                });\n            })\n\n    }\n\n}","import {QueryVariable, SWDiscovery, SWDiscoveryConfiguration, URI} from '@p2m2/discovery'\nimport { AskOmicsViewNode } from './types'\n/* \n - Structure Node \n       {\n            id: Numeric, \n            label: String,\n            uri : String,\n            suggested: Boolean (true), \n            selected: Boolean (false),\n       }\n\n\n- Structure Link    \n        {\n            source    : Numeric,\n            target    : Numeric,\n            label     : String,\n            suggested : Boolean (true), \n            selected  : Boolean (false), \n            directed  : Boolean (true), \n        }\n\n*/\nexport default abstract class StrategyRequestAbstract {\n    \n    constructor() {\n    }\n\n    getDatatypesWithProperty(config_rdf : any,property: string ) : Promise<string[]> {\n       \n        return new Promise((successCallback, failureCallback) => {\n            SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf))\n                .something()\n                    .isSubjectOf(new URI(property),\"valueL\")\n                    .select(\"valueL\")\n                    .limit(5)\n                    .commit()\n                    .raw()\n                    .then(\n                        (response : any) => {\n                                try {\n                                    const t = [...new Set(response.results.bindings.map( (id : any) => id[\"valueL\"].datatype))];\n                                    if(t[0]) {\n                                        successCallback([property,t[0] as string])\n                                    } else {\n                                        // if datatype not defined, by default is string\n                                        successCallback([property,\"xsd:string\"])\n                                    }\n                                } catch(e) {\n                                    failureCallback(e)\n                                }\n                    })\n            })\n    }\n\n    getDatatypes(config_rdf : any,listUriDatatypeProperty: string[] ) : Promise<Map<string,string>> {\n        const listUriDatatypePropertyClean = [...new Set(listUriDatatypeProperty)]\n        const results : Map<string,string> = new Map()\n        return new Promise((successCallback, failureCallback) => {\n            Promise.all(listUriDatatypePropertyClean.map(property => this.getDatatypesWithProperty(config_rdf,property)))\n            .then(\n                allPairPropertyDatatype => {\n                    allPairPropertyDatatype.map(\n                        PropertyDatatype => results.set(PropertyDatatype[0],PropertyDatatype[1])\n                    )\n                    successCallback(results)\n                })\n            .catch(e => { \n                failureCallback(e) \n            } )\n        })\n    }\n\n    abstract attributeList(discovery : any,focus: string) : any\n\n    /* \n    * Structure Node to return\n       {\n            id: Numeric,      /// equiv   uri : String,\n            focus: String, \n            label: String,\n                              /// pas besoin  suggested: Boolean (true), \n            selected: Boolean (false),\n       }\n    * \n    * in uri : String \n    * @return List(Object(node : Node, links : List(Link)))\n    */\n\n    abstract forwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any\n\n    abstract backwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any\n\n}\n\n","\nimport { SWDiscovery,URI, SWDiscoveryConfiguration} from '@p2m2/discovery'\nimport { NodeType, AskOmicsViewNode } from './types'\nimport StrategyRequestAbstract from './StrategyRequestAbstract'\n\n\n\nexport default class StrategyRequestAskOmics extends StrategyRequestAbstract {\n\n    askomics_prefix : string = \"http://askomics.org/internal/\"\n    config_endp  : string\n\n    constructor(config_endp : string) {\n        super();\n        console.log(\" ============ StrategyRequestAskOmics ============ \") ;\n        this.config_endp = config_endp\n    }\n\n    attributeList(discovery : any,focus: string) : any {\n        /*\n        let d : any = (new SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf)).something());\n\n        if ( current.type != NodeType.SOMETHING ) d = d.set(new URI(current.uri))*/\n\n        return discovery\n               .focus(focus)\n               .isSubjectOf(new URI(\"rdf:type\"),\"typeFocus\")\n               .isObjectOf(new URI(\"rdfs:domain\"),\"property\")\n                  .isA(\"owl:DatatypeProperty\")\n                  .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelProperty\")\n                    .isSubjectOf(new URI(\"rdfs:range\"),\"range\")\n    }\n\n    forwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n\n        let d : any = (new SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf)).something());\n        \n        if ( current.type != NodeType.SOMETHING ) d = d.set(new URI(current.uri))\n        \n        return d.isObjectOf(new URI(\"rdfs:domain\"),\"property\")\n                      .isA(this.askomics_prefix+\"AskomicsRelation\")\n                      .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelProperty\")\n                    .isSubjectOf(new URI(\"rdfs:range\"),\"entity\")\n                    .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelEntity\")  \n    }\n\n    backwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n        let d : any = (new SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf)).something());\n        \n        if ( current.type != NodeType.SOMETHING ) d = d.set(new URI(current.uri))\n        \n        return d.isObjectOf(new URI(\"rdfs:range\"),\"property\")\n                      .isA(this.askomics_prefix+\"AskomicsRelation\")\n                      .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelProperty\")\n                    .isSubjectOf(new URI(\"rdfs:domain\"),\"entity\")\n                    .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelEntity\")  \n    }\n}","import {SWDiscovery,URI,QueryVariable,Literal, SWDiscoveryConfiguration} from '@p2m2/discovery'\nimport { AskOmicsViewNode, NodeType } from './types'\n\nimport StrategyRequestAbstract from './StrategyRequestAbstract'\n\n\n\nexport default class StrategyRequestDataDriven extends StrategyRequestAbstract {\n\n    constructor() {\n        super();\n        console.log(\" ============ StrategyRequestDataDriven ============ \") ;\n    }\n\n    \n\n    attributeList(discovery : any,focus: string) : any {\n    \n      return discovery\n              .focus(focus)\n              .isLinkTo(new QueryVariable(\"value\"),\"property\")\n              .root()\n              .something(\"value\")\n                  .filter.isLiteral\n                    .focus(\"property\")\n                    .datatype(new URI(\"rdfs:label\"),\"labelProperty\")\n    }\n\n    forwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n\n        return discovery\n           .isSubjectOf(new QueryVariable(\"property\"))\n            .isSubjectOf(new URI(\"rdf:type\"),\"entity\")\n             .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n            .datatype(new URI(\"rdfs:label\"),\"labelEntity\")       \n     .focus(\"property\")\n       .filter.notEqual(\"rdf:type\")\n       .filter.notEqual(\"rdfs:domain\")\n       .filter.notEqual(\"rdfs:range\")\n       .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n            .datatype(new URI(\"rdfs:label\"),\"labelProperty\");\n    }\n\n    backwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n        return discovery\n            .filter.isUri\n             .isObjectOf(new QueryVariable(\"property\"))\n            \n            .isSubjectOf(new URI(\"rdf:type\"),\"entity\")\n             .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n            .datatype(new URI(\"rdfs:label\"),\"labelEntity\")       \n          .focus(\"property\")\n            .filter.notEqual(\"rdf:type\")\n            .filter.notEqual(\"rdfs:domain\")\n            .filter.notEqual(\"rdfs:range\")\n            .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n                    .datatype(new URI(\"rdfs:label\"),\"labelProperty\");\n    }\n}","import { ObjectState , Graph3DJS, AskOmicsViewNode, AskOmicsViewLink, ViewLink3DJS, ViewNode3DJS } from './types'\nimport RequestManager from './RequestManager'\nimport { Vue } from 'vue-class-component'\n\nexport default class UserIncrementManager {\n\n    static releaseSelectedObject(graph : Graph3DJS) : Graph3DJS {\n\n        graph.nodes = graph.nodes.map( n => { \n            if (n.state_n == ObjectState.SELECTED) n.state_n = ObjectState.CONCRETE ;\n            return n\n        })\n        graph.links = graph.links.map( l => { \n            if (l.state_n == ObjectState.SELECTED) l.state_n = ObjectState.CONCRETE ;\n            return l\n        })\n\n        return graph\n    }\n    /*\n\n    static setSelectedNode(graph : Graph3DJS, select : AskOmicsViewNode ) : Graph3DJS {\n        if ( select ) {\n            graph.nodes = graph.nodes.map( n => { \n                if (n.id == select.id) n.state_n = ObjectState.SELECTED ;\n                return n\n            })\n        }\n\n        return graph\n    }*/\n\n    static clickNodeForward( vue : Vue, request : RequestManager ,  n: AskOmicsViewNode ) : Promise<[Object[],Object[]]> {\n            \n        vue.$emit('requestManagerBusy',JSON.stringify(true))\n        \n        return new Promise((successCallback, failureCallback) => {\n                request.forwardEntities(vue,n).then( r => {\n                    const nodes : Object[] = [] ;\n                    const links : Object[] = [] ;\n                    r.forEach((value, key) => {\n                        const v = Object.assign({},value) ;\n                        if (value instanceof AskOmicsViewNode) {\n                            nodes.push(v);\n                        } else if (value instanceof AskOmicsViewLink) {\n                            links.push(v);\n                        }\n                        });\n                        vue.$emit('requestManagerBusy',JSON.stringify(false))\n                        successCallback([nodes,links])\n                    })\n                    .catch(e => {\n                        vue.$emit('requestManagerBusy',JSON.stringify(false))\n                        failureCallback(e)\n                    });\n                });\n    }\n\n    static clickNodeBackward( vue : Vue, request : RequestManager ,  n: AskOmicsViewNode ) : Promise<[Object[],Object[]]> {\n        \n        vue.$emit('requestManagerBusy',JSON.stringify(true))\n\n        return new Promise((successCallback, failureCallback) => {\n            request.backwardEntities(vue,n).then( r => {\n                const nodes : Object[] = [] ;\n                const links : Object[] = [] ;\n                r.forEach((value, key) => {\n                    const v = Object.assign({},value) ;\n                    if (value instanceof AskOmicsViewNode) {\n                        nodes.push(v);\n                    } else if (value instanceof AskOmicsViewLink) {\n                        links.push(v);\n                    }\n                    });\n                    vue.$emit('requestManagerBusy',JSON.stringify(false))\n                    successCallback([nodes,links])\n                })\n                .catch(e => {\n                    vue.$emit('requestManagerBusy',JSON.stringify(false))\n                    failureCallback(e)\n                });\n            });\n}\n\n\n    static setShapeNode(request :RequestManager, toShape: ViewNode3DJS , graph : Graph3DJS ) : Graph3DJS {\n        \n        /**\n         * nothing todo is node is selected \n         */\n\n         if ( toShape.state_n == ObjectState.SELECTED ) return graph\n\n\n        /**\n         * Select Node if node is concrete and exit .\n         */\n        if ( toShape.state_n == ObjectState.CONCRETE ) {\n            \n\n            if ( toShape.focus && toShape.focus.length>0  ) {\n                graph.nodes = graph.nodes.map(\n                    (n : ViewNode3DJS )=> {\n                        if ( n.id == toShape.id ) {\n                            n.state_n = ObjectState.SELECTED\n                            request.setFocus(toShape.focus)\n                        }\n                        return n\n                    })\n\n                \n            }\n           \n            return graph\n        }\n        \n        \n        /**\n         * shape link/node if suggested\n         */\n        \n        graph.links = graph.links.map(\n            (l : ViewLink3DJS )=> {\n                \n                if ( (l.state_n == ObjectState.SUGGESTED) && (l.source.id == toShape.id || l.target.id == toShape.id) ) {\n                    l.state_n = ObjectState.CONCRETE\n                    \n                    /* ------------ */\n                    /* update model */\n                    /* ------------ */\n                    const focus : string = request.update(toShape,l)\n\n                    /* ------------ */\n                    /* FOCUS        */\n                    /* ------------ */\n                    graph.nodes = graph.nodes.map(\n                        (n : ViewNode3DJS )=> {\n                            if ( n.id == toShape.id ) n.focus = focus\n                            return n \n                        })\n                }\n                return l \n            })\n        /**\n        * SELECTED \n        */\n         graph.nodes = graph.nodes.map(\n            (n : ViewNode3DJS )=> {\n                if ( n.id == toShape.id ) {\n                    n.state_n = ObjectState.SELECTED\n                }\n                return n \n            }) \n        \n        return graph \n\n    }\n\n    static removeSuggestion(graph : Graph3DJS) : Graph3DJS {\n        graph.nodes = graph.nodes.filter( n => n.state_n != ObjectState.SUGGESTED )\n        graph.links = graph.links.filter( l => l.state_n != ObjectState.SUGGESTED )\n        return graph\n    }\n\n\n    /*\n\n    static attributeList(request :RequestManager, current: AskOmicsViewNode ) : Promise<Object[]> {\n        console.log(\"go :\",current)\n\n        return new Promise((successCallback, failureCallback) => {\n            if (Object.keys(current).length == 0) {\n                successCallback([])\n            } else {\n              //  console.log(current.type)\n                if(current.type == NodeType.SOMETHING) {\n                    console.log(\"get everything attributes\")\n                } else {\n                    \n                    request.attributeList(current).then(\n                        response => {\n                            successCallback(response.map( (obj : DatatypeLiteral)  => obj.getObject()))\n                        }\n                    ).catch(e => {failureCallback(e)})\n                }\n            }\n        })\n    } */\n\n}","import {AskOmicsViewNode, AskOmicsViewLink, AskOmicsViewAttributes } from '@/ts/types'\nimport RequestManager from './RequestManager';\n\ninterface GraphBuilderExpr {\n    nodes:Array<AskOmicsViewNode>;\n    links:Array<AskOmicsViewLink>;\n}\n\n\nexport class GraphBuilder {\n    constructor() {}\n\n    static emptyGraph() : any {\n        return  { nodes : [], links : [] }\n    }\n    \n    /**\n     * build graph from Request Manager (discovery)\n     */\n    static build3DJSGraph(rm : RequestManager) : GraphBuilderExpr {\n        \n        const graph : GraphBuilderExpr = GraphBuilder.emptyGraph()\n\n        rm.getDiscovery().browse(\n            (node : any, deep : Number) => {\n                console.log(\"-- browse -- \")\n                console.log(node)\n                if( node.decorations ) {\n                    if (node.decorations.node)\n                      graph.nodes.push(JSON.parse(node.decorations.node))\n                    if (node.decorations.link)\n                        graph.links.push(JSON.parse(node.decorations.link))\n                }\n            }\n        )\n\n        console.log(\"----------------------------------------------\")\n        console.log(graph)\n        if ( graph.nodes.length <= 0 &&  graph.links.length <= 0 ) {\n            throw Error(\"Can not handle empty graph\")\n        } else {\n            return graph\n        }\n    }\n\n     /**\n     * build graph from Request Manager (discovery)\n     */\n      static buildAttributesBox(rm : RequestManager) : Promise< Object[]> {\n        const lAttributeBox :  Object[] = [] ;\n        \n        return new Promise((successCallback, failureCallback) => {\n            rm.getDiscovery().browse(\n                (node : any, deep : Number) => {\n                    if ( node.idRef == rm.getFocus()) {\n                        const nodeInst = JSON.parse(node.decorations.node)\n                        const decorations : Map<String,AskOmicsViewAttributes> = \n                            node.decorations.attributes ? \n                                new Map(JSON.parse(node.decorations.attributes)) as Map<String,AskOmicsViewAttributes> : new Map() \n                        \n\n                        rm.attributeList(rm.getFocus()).then(\n                            response => {\n                                const keyUri = \"uri\"\n                               \n                                /* special attribute box -> URI */\n                                const uriBox = decorations.has(keyUri) ? \n                                    AskOmicsViewAttributes.from(decorations.get(keyUri)!) : new AskOmicsViewAttributes(keyUri,nodeInst.uri,\"uri\",nodeInst.label)\n                                \n                                /* attribute from RDF store*/\n                                const listAttributes : Object[] = \n                                \n                                response\n                                  .map( (obj : AskOmicsViewAttributes)  =>  {\n                                    if (  decorations.has(obj.uri) ) {\n                                        return AskOmicsViewAttributes.from(decorations.get(obj.uri)!)\n                                    } \n                                    \n                                    return obj\n                                  })\n                                  .map( (obj : AskOmicsViewAttributes )  =>  obj.getObject() )\n                                  \n                                  listAttributes.unshift(uriBox)\n\n                                successCallback(listAttributes)\n                            }\n                        ).catch(e => {failureCallback(e)})\n                    }\n                }\n            )})\n    }\n}","import { render } from \"./QueryGraphPanel.vue?vue&type=template&id=59fde202\"\nimport script from \"./QueryGraphPanel.vue?vue&type=script&lang=js\"\nexport * from \"./QueryGraphPanel.vue?vue&type=script&lang=js\"\n\nimport \"./QueryGraphPanel.vue?vue&type=style&index=0&id=59fde202&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div id=\"attributes-panel\" class=\"attributesList\">\n    <div class=\"d-flex justify-content-end\">\n       <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n         \n          <div>\n            <div id=\"v-model-select-property\" class=\"form-control\" v-if=\"displayCommonAttributeButtons\" >\n              <select v-model=\"selected_filterProperty\">\n                <option :key=\"propFilter.id\" :value=\"propFilter.id\" v-for=\"propFilter in propertyFilterList\">{{ propFilter.label }}</option>\n              </select>\n            </div>\n          </div>\n          \n          <div>\n            <button type=\"button\" class=\"form-control btn btn-secondary\" @click=\"removeNode\" v-if=\"displayRemoveButton\">Remove</button>\n            <button type=\"button\" class=\"form-control btn btn-secondary\" v-else disabled>Remove</button>\n          </div>\n          \n          <!--\n          <div class=\"btn-group\" role=\"group\">\n            <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Dropdown\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n              <a class=\"dropdown-item\" href=\"#\">Dropdown link</a>\n              <a class=\"dropdown-item\" href=\"#\">Dropdown link</a>\n            </div>\n          </div>-->\n       </div>\n      </div>\n                \n    <attributeBox\n      v-for=\"item in attributeList\" :key=\"item.id\"\n      :attribute=\"item\"\n      @updateAttribute=\"updateAttribute\"\n      />\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport { Options, Vue } from 'vue-class-component';\n\nimport AttributeBox from '../attribute/AttributeBox.vue'\nimport RequestManager from '@/ts/RequestManager'\n/*\nimport UserIncrementManager from '@/ts/UserIncrementManager' */\nimport { FilterProperty } from '@/ts/types'\nimport { GraphBuilder } from '@/ts/GraphBuilder'\n\n\n@Options({\n  name: \"AttributesPanel\",\n  emits: [\"updateRequestManager\",\"updateFilterProperty\"],\n  components : { AttributeBox },\n  props : {\n    requestString     : {\n                          type: String,\n                          required: true\n                        },\n    width             : Number,\n    height            : Number,\n  },\n\n  mounted() {\n    \n    this.updateRequestString(this.requestString) \n\n    let attributesList = document.querySelector<HTMLElement>('.attributesList')\n    if ( attributesList ) {\n      attributesList.style.height = this.height + \"px\"\n      attributesList.style.width  = this.width + \"px\"\n    }\n    \n  },\n\n  watch : {\n    requestString(value) {\n      console.log(\"receive!!!\")\n      this.updateRequestString(value) \n    },\n\n    selected_filterProperty(value) {\n      this.$emit('updateFilterProperty',JSON.stringify(value))\n    }\n  },\n  data () {\n    return {\n      propertyFilterList : [\n        {\n          id: FilterProperty.TO,\n          label : \"TO\"\n        },\n        {\n          id: FilterProperty.FROM,\n          label : \"FROM\"\n        },\n        {\n          id: FilterProperty.IS_A,\n          label : \"IS_A\"\n        },\n        {\n          id: FilterProperty.ALL,\n          label : \"ALL\"\n        },\n      ],\n      request : null,\n      selected_filterProperty : FilterProperty.TO,\n      attributeList: []\n    }\n  },\n\n  computed : {\n    displayCommonAttributeButtons() {\n      if (this.request) {\n        return this.request.focusIsSelected()\n      }\n      return false\n    },\n\n    displayRemoveButton() {\n      if (this.request) {\n        return this.request.focusIsSelected() && !this.request.isFocusStart()\n      }\n        \n      else\n        return false\n    }\n\n\n  },\n  \n  methods: {\n    \n    updateRequestString(value : string) {\n       //alert(\"-------------- updateRequestString ---------------------\")\n      this.request = new RequestManager(value)\n\n      if (this.request.focusIsSelected()) { \n        GraphBuilder.buildAttributesBox(this.request).then(\n          (response : Object[]) => {\n            this.attributeList = response\n          })\n      } else {\n        this.attributeList = [];\n      }\n     \n    },\n\n    removeNode() {\n      this.request.removeNode(this)\n      this.$emit('updateRequestManager',this.request.serialized())\n    },\n\n    updateAttribute(event : string) {\n      this.request.updateAttribute(JSON.parse(event))\n      this.$emit('updateRequestManager',this.request.serialized())\n    }\n  }\n})\n\nexport default class AttributesPanel extends Vue {\n\n}\n</script>\n\n<style>\n.attributesList {\n  display: 'block' ;\n  overflow-y:auto  ;\n}\n</style>\n","<template>\r\n\r\n  <div :id=\"attributeInt.id\" class=\"attribute-box\">\r\n    <label class=\"attr-label\">{{ attributeInt.label }}</label>\r\n    <div className=\"attr-icons\">\r\n        <font-awesome-icon @click=\"closeLink\" :icon=\"['fas', 'link']\" v-if=\"attributeInt.linked\" />\r\n        <font-awesome-icon @click=\"openLink\" :icon=\"['fas', 'unlink']\" v-else />\r\n        <font-awesome-icon @click=\"closeEye\" :icon=\"['fas', 'eye']\" v-if=\"attributeInt.visible\" />\r\n        <font-awesome-icon @click=\"openEye\" :icon=\"['fas', 'eye-slash']\" v-else />\r\n       <!-- <font-awesome-icon :icon=\"['fas', 'question-circle']\" /> -->\r\n    </div>\r\n    \r\n    <div v-if=\"attributeInt.range == 'uri'\">\r\n      <URIBox>\r\n      </URIBox>\r\n    </div>\r\n    \r\n    <div v-else-if=\"attributeInt.range == 'xsd:string'\">\r\n        <XsdString\r\n          v-bind:attribute=\"attributeInt\"\r\n        ></XsdString>\r\n    </div>\r\n    <div v-else-if=\"['xsd:numeric','xsd:double','xsd:float','xsd:integer'].includes(attributeInt.range)\">\r\n        <XsdNumeric\r\n          v-bind:attribute=\"attributeInt\"\r\n        ></XsdNumeric>\r\n    </div>\r\n    <div v-else>\r\n        {{ attributeInt.range }} is not supported !\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from '@/ts/types';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faEye, faEyeSlash, faLink, faUnlink, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\nimport URIBox from './URIBox.vue'\r\nimport XsdString from './XsdString.vue';\r\nimport XsdNumeric from './XsdNumeric.vue';\r\n\r\n[ faLink, faUnlink, faCircle, faQuestionCircle, faEye, faEyeSlash ].map(icon => library.add(icon)) ;\r\n\r\n\r\n@Options({\r\n  components : { \r\n    library,FontAwesomeIcon, XsdString, XsdNumeric,URIBox\r\n    },\r\n  \r\n  emits: [\"updateAttribute\"],\r\n\r\n  props: { \r\n      attribute : {\r\n        type : Object as () => AskOmicsViewAttributes, \r\n        required: true\r\n      }\r\n  },\r\n\r\n  methods: {\r\n      toggleLinkAttribute: () => { console.log( \"click 1 !\") },\r\n      \r\n      openEye(){ \r\n        this.attributeInt.visible = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n      \r\n      closeEye() {\r\n        this.attributeInt.visible = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n\r\n      openLink() {\r\n        this.attributeInt.linked = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n\r\n      closeLink() {\r\n        this.attributeInt.linked = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n\r\n      toggleOptional: () => { console.log( \"click 3 !\") }\r\n  },\r\n  data () {\r\n    return {\r\n      attributeInt : this.attribute\r\n    }\r\n  }\r\n})\r\n\r\nexport default class AttributeBox extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\ndiv.attribute-box {\r\n  margin: 5px;\r\n  padding: 5px;\r\n  border-radius: 10px;\r\n\r\n  border: 1px solid #c5c5c5;\r\n  background: #f6f6f6;\r\n  font-weight: normal;\r\n  color: #454545;\r\n}\r\n\r\nlabel.attr-label {\r\n  font-weight: 700;\r\n}\r\n\r\ndiv.attr-icons {\r\n  float: right;\r\n}\r\ni.attr-icon {\r\n  padding-right: 8px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","<template>\r\n<div id=\"askomics-uri-box\">\r\n<table>\r\n<tr>\r\n    <td>\r\n        <select v-model=\"typeSearch\">\r\n            <option v-for=\"option in optionsTypeSearch\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    <td>\r\n        <select v-model=\"typeCompare\">\r\n            <option v-for=\"option in optionsTypeCompare\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    <td>\r\n        <input v-model=\"filterValue\" placeholder=\"edit me\">\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\n\r\n@Options({\r\n    name: \"URIBox\",\r\n    \r\n    props: {\r\n    },\r\n\r\n    methods: {\r\n    },\r\n\r\n    data() { \r\n        return {\r\n            visible : false,\r\n            linked: false,\r\n            typeSearch: 'A',\r\n            optionsTypeSearch: [\r\n                { text: 'Exact', value: 'A' },\r\n                { text: 'Regex', value: 'B' }\r\n            ],\r\n            typeCompare: 'A',\r\n            optionsTypeCompare: [\r\n                { text: '=', value: 'A' },\r\n                { text: '!=', value: 'B' }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    }\r\n})\r\n\r\nexport default class UriBox extends Vue {\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","\r\nimport { Options, Vue } from 'vue-class-component';\r\n\r\n@Options({\r\n    name: \"URIBox\",\r\n    \r\n    props: {\r\n    },\r\n\r\n    methods: {\r\n    },\r\n\r\n    data() { \r\n        return {\r\n            visible : false,\r\n            linked: false,\r\n            typeSearch: 'A',\r\n            optionsTypeSearch: [\r\n                { text: 'Exact', value: 'A' },\r\n                { text: 'Regex', value: 'B' }\r\n            ],\r\n            typeCompare: 'A',\r\n            optionsTypeCompare: [\r\n                { text: '=', value: 'A' },\r\n                { text: '!=', value: 'B' }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    }\r\n})\r\n\r\nexport default class UriBox extends Vue {\r\n\r\n}\r\n\r\n\r\n","import { render } from \"./URIBox.vue?vue&type=template&id=bddc2214\"\nimport script from \"./URIBox.vue?vue&type=script&lang=ts\"\nexport * from \"./URIBox.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n<div id=\"askomics-text-box\">\r\n<table>\r\n<tr>\r\n    <td>\r\n        <select v-model=\"typeSearch\">\r\n            <option v-for=\"option in optionsTypeSearch\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    <td>\r\n        <select v-model=\"typeCompare\">\r\n            <option v-for=\"option in optionsTypeCompare\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    <td>\r\n        <input v-model=\"filterValue\" placeholder=\"edit me\">\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from 'src/ts/types';\r\n\r\n@Options({\r\n    \r\n    props: {\r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n\r\n    methods: {\r\n    },\r\n\r\n    data() { \r\n        return {\r\n            typeSearch: 'A',\r\n            optionsTypeSearch: [\r\n                { text: 'Exact', value: 'A' },\r\n                { text: 'Regex', value: 'B' }\r\n            ],\r\n            typeCompare: 'A',\r\n            optionsTypeCompare: [\r\n                { text: '=', value: 'A' },\r\n                { text: '!=', value: 'B' }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    }\r\n})\r\n\r\nexport default class XsdString extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from 'src/ts/types';\r\n\r\n@Options({\r\n    \r\n    props: {\r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n\r\n    methods: {\r\n    },\r\n\r\n    data() { \r\n        return {\r\n            typeSearch: 'A',\r\n            optionsTypeSearch: [\r\n                { text: 'Exact', value: 'A' },\r\n                { text: 'Regex', value: 'B' }\r\n            ],\r\n            typeCompare: 'A',\r\n            optionsTypeCompare: [\r\n                { text: '=', value: 'A' },\r\n                { text: '!=', value: 'B' }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    }\r\n})\r\n\r\nexport default class XsdString extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n\r\n","import { render } from \"./XsdString.vue?vue&type=template&id=383768b8\"\nimport script from \"./XsdString.vue?vue&type=script&lang=ts\"\nexport * from \"./XsdString.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n<div id=\"askomics-text-box\">\r\n<table>\r\n<tr>\r\n    <td>\r\n        <select v-model=\"operator\">\r\n            <option v-for=\"option in optionsOprator\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    <td>\r\n        <input v-model=\"filterValue\" placeholder=\"edit me\">\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from 'src/ts/types'\r\n\r\n@Options({\r\n    props: { \r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n    \r\n    methods : {\r\n    \r\n    },\r\n\r\n    data() { \r\n        return {\r\n            operator: '=',\r\n            optionsOprator: [\r\n                { text: '=', value: '=' },\r\n                { text: '<', value: '<' },\r\n                { text: '>', value: '>' },\r\n                { text: '>=', value: '>=' },\r\n                { text: '!=', value: '!=' }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    }\r\n})\r\n\r\nexport default class XsdNumeric extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from 'src/ts/types'\r\n\r\n@Options({\r\n    props: { \r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n    \r\n    methods : {\r\n    \r\n    },\r\n\r\n    data() { \r\n        return {\r\n            operator: '=',\r\n            optionsOprator: [\r\n                { text: '=', value: '=' },\r\n                { text: '<', value: '<' },\r\n                { text: '>', value: '>' },\r\n                { text: '>=', value: '>=' },\r\n                { text: '!=', value: '!=' }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    }\r\n})\r\n\r\nexport default class XsdNumeric extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n","import { render } from \"./XsdNumeric.vue?vue&type=template&id=554f9f40\"\nimport script from \"./XsdNumeric.vue?vue&type=script&lang=ts\"\nexport * from \"./XsdNumeric.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from '@/ts/types';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faEye, faEyeSlash, faLink, faUnlink, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\nimport URIBox from './URIBox.vue'\r\nimport XsdString from './XsdString.vue';\r\nimport XsdNumeric from './XsdNumeric.vue';\r\n\r\n[ faLink, faUnlink, faCircle, faQuestionCircle, faEye, faEyeSlash ].map(icon => library.add(icon)) ;\r\n\r\n\r\n@Options({\r\n  components : { \r\n    library,FontAwesomeIcon, XsdString, XsdNumeric,URIBox\r\n    },\r\n  \r\n  emits: [\"updateAttribute\"],\r\n\r\n  props: { \r\n      attribute : {\r\n        type : Object as () => AskOmicsViewAttributes, \r\n        required: true\r\n      }\r\n  },\r\n\r\n  methods: {\r\n      toggleLinkAttribute: () => { console.log( \"click 1 !\") },\r\n      \r\n      openEye(){ \r\n        this.attributeInt.visible = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n      \r\n      closeEye() {\r\n        this.attributeInt.visible = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n\r\n      openLink() {\r\n        this.attributeInt.linked = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n\r\n      closeLink() {\r\n        this.attributeInt.linked = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attributeInt))\r\n      },\r\n\r\n      toggleOptional: () => { console.log( \"click 3 !\") }\r\n  },\r\n  data () {\r\n    return {\r\n      attributeInt : this.attribute\r\n    }\r\n  }\r\n})\r\n\r\nexport default class AttributeBox extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n","import { render } from \"./AttributeBox.vue?vue&type=template&id=9b07c67e\"\nimport script from \"./AttributeBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AttributeBox.vue?vue&type=script&lang=ts\"\n\nimport \"./AttributeBox.vue?vue&type=style&index=0&id=9b07c67e&lang=css\"\nscript.render = render\n\nexport default script","\n\nimport { Options, Vue } from 'vue-class-component';\n\nimport AttributeBox from '../attribute/AttributeBox.vue'\nimport RequestManager from '@/ts/RequestManager'\n/*\nimport UserIncrementManager from '@/ts/UserIncrementManager' */\nimport { FilterProperty } from '@/ts/types'\nimport { GraphBuilder } from '@/ts/GraphBuilder'\n\n\n@Options({\n  name: \"AttributesPanel\",\n  emits: [\"updateRequestManager\",\"updateFilterProperty\"],\n  components : { AttributeBox },\n  props : {\n    requestString     : {\n                          type: String,\n                          required: true\n                        },\n    width             : Number,\n    height            : Number,\n  },\n\n  mounted() {\n    \n    this.updateRequestString(this.requestString) \n\n    let attributesList = document.querySelector<HTMLElement>('.attributesList')\n    if ( attributesList ) {\n      attributesList.style.height = this.height + \"px\"\n      attributesList.style.width  = this.width + \"px\"\n    }\n    \n  },\n\n  watch : {\n    requestString(value) {\n      console.log(\"receive!!!\")\n      this.updateRequestString(value) \n    },\n\n    selected_filterProperty(value) {\n      this.$emit('updateFilterProperty',JSON.stringify(value))\n    }\n  },\n  data () {\n    return {\n      propertyFilterList : [\n        {\n          id: FilterProperty.TO,\n          label : \"TO\"\n        },\n        {\n          id: FilterProperty.FROM,\n          label : \"FROM\"\n        },\n        {\n          id: FilterProperty.IS_A,\n          label : \"IS_A\"\n        },\n        {\n          id: FilterProperty.ALL,\n          label : \"ALL\"\n        },\n      ],\n      request : null,\n      selected_filterProperty : FilterProperty.TO,\n      attributeList: []\n    }\n  },\n\n  computed : {\n    displayCommonAttributeButtons() {\n      if (this.request) {\n        return this.request.focusIsSelected()\n      }\n      return false\n    },\n\n    displayRemoveButton() {\n      if (this.request) {\n        return this.request.focusIsSelected() && !this.request.isFocusStart()\n      }\n        \n      else\n        return false\n    }\n\n\n  },\n  \n  methods: {\n    \n    updateRequestString(value : string) {\n       //alert(\"-------------- updateRequestString ---------------------\")\n      this.request = new RequestManager(value)\n\n      if (this.request.focusIsSelected()) { \n        GraphBuilder.buildAttributesBox(this.request).then(\n          (response : Object[]) => {\n            this.attributeList = response\n          })\n      } else {\n        this.attributeList = [];\n      }\n     \n    },\n\n    removeNode() {\n      this.request.removeNode(this)\n      this.$emit('updateRequestManager',this.request.serialized())\n    },\n\n    updateAttribute(event : string) {\n      this.request.updateAttribute(JSON.parse(event))\n      this.$emit('updateRequestManager',this.request.serialized())\n    }\n  }\n})\n\nexport default class AttributesPanel extends Vue {\n\n}\n","import { render } from \"./AttributesPanel.vue?vue&type=template&id=5d99d33f\"\nimport script from \"./AttributesPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./AttributesPanel.vue?vue&type=script&lang=ts\"\n\nimport \"./AttributesPanel.vue?vue&type=style&index=0&id=5d99d33f&lang=css\"\nscript.render = render\n\nexport default script","\n\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport router from '@/router/index';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n\nimport QueryGraphPanel from './QueryGraphPanel.vue'\nimport AttributesPanel from './AttributesPanel.vue'\nimport { FilterProperty } from '@/ts/types';\n\n[ faSpinner ].map(icon => library.add(icon)) ;\n\n@Options({\n  name: \"QueryBuilder\",\n  \n  components : {  \n      library,FontAwesomeIcon, QueryGraphPanel,AttributesPanel\n      },\n  \n  emits: [\"updateQuery\"],\n  \n  props : {\n    query :  String\n  },\n \n  data () {\n    return {\n      currentQuery       : this.query,\n      requestBusy        : false,\n      requestBusyPercent : \"0\",\n      requestBusyEvent   : \"\",\n      filterProperty     : FilterProperty.TO,\n    }\n  },\n   \n  watch : {\n    requestBusy : 'prepareRequestBusy',\n    requestBusyPercent : 'prepareRequestBusy'\n  } ,\n  \n  methods: {\n    \n    prepareRequestBusy() {\n      if (!this.requestBusy || this.requestBusyPercent == \"100\") {\n        this.requestBusyPercent = \"0\"\n        this.requestBusyEvent = \"\"\n      }\n    },\n\n    updateQuery(value : string) {\n      this.currentQuery = value\n      this.$emit('updateQuery',value)\n    },\n\n    attributeBoxEvent(e: string) {\n      console.log(\"attributeBoxEvent:\",e)\n    },\n\n    /* https://router.vuejs.org/guide/essentials/navigation.html*/\n\n    getResults() {\n      router.push({ name : 'results' , params: { rm: this.currentQuery }})\n    } ,\n\n    back() {\n\n    } ,\n\n    forward() {\n\n    }\n  }\n  \n})\n\nexport default class AskOmics extends Vue {\n\n}\n\n","import { render } from \"./QueryBuilder.vue?vue&type=template&id=2a4e2f74\"\nimport script from \"./QueryBuilder.vue?vue&type=script&lang=ts\"\nexport * from \"./QueryBuilder.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component';\nimport QueryBuilder from '@/components/askomics/panels/QueryBuilder.vue'\n\n@Options({\n  name: \"AskOmicsView\",\n  \n  components: {\n    QueryBuilder \n  },\n\n  emits: [\"updateDiscovery\"],\n \n  computed: {\n    query() {\n      return this.$route.params.query\n    }\n  },\n\n  methods : {\n    updateQuery(config_strategy_query : string) {\n      const r = JSON.parse(config_strategy_query)\n      this.$emit('updateDiscovery',r[2])\n    }\n  }\n\n})\nexport default class AskOmics extends Vue {}\n","import { render } from \"./AskOmics.vue?vue&type=template&id=a88daee6\"\nimport script from \"./AskOmics.vue?vue&type=script&lang=ts\"\nexport * from \"./AskOmics.vue?vue&type=script&lang=ts\"\n\nimport \"./AskOmics.vue?vue&type=style&index=0&id=a88daee6&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <ResultsPanel :rm=\"rm\" />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport ResultsPanel from '@/components/results/ResultsPanel'\n\n@Options({\n  name: \"ResultsView\",\n  components: {\n    ResultsPanel\n  },\n\n  data() { \n        return {\n        }\n  },\n  \n  computed: {\n    rm() {\n      console.log(this.$route.params)\n      return this.$route.params.rm\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Results extends Vue {}\n</script>","<template>\n<div id=\"results-panel\">\n    <vue-table-lite \n                    :is-static-mode=\"isStaticMode\"\n                    :has-checkbox=\"hasCheckbox\"\n                    :is-loading=\"isLoading\" \n                    :is-re-search=\"isReSearch\" \n                    :columns=\"columns\" \n                    :rows=\"rows\" \n                    :total=\"totalRecordCount\" \n                    :sortable=\"isSortable\" \n                    :messages=\"messages\" \n                    @do-search=\"doSearch\" \n                    @is-finished=\"tableLoadingFinish\" \n                    @return-checked-row=\"updateCheckedRows\" />\n\n</div>\n</template>\n\n<script lang=\"ts\">\nimport RequestManager from '@/ts/RequestManager';\nimport { Options, Vue } from 'vue-class-component';\nimport VueTableLite from 'vue3-table-lite'\n\n@Options({\n    name: \"ResultsPanel\",\n    \n    components : { VueTableLite },\n\n    props: {\n        rm : {\n                type: String,\n                required: false\n        },\n        \n        isStaticMode : {\n                type: Boolean,\n                required: false,\n                default: true\n        },\n\n        hasCheckbox : {\n                type: Boolean,\n                required: false,\n                default: false\n        },\n\n        isSortable : {\n                type: Object,\n                required: false,\n                default: {\n                    order : \"id\",\n                    sort : \"asc\"\n                }\n        },\n    },\n\n    data() { \n        return {\n            laziestPages : [],\n            rows : [],\n            totalRecordCount : 2 ,\n\n            messages : {\n                    pagingInfo : \"Showing {0}-{1} of {2}\",\n                    pageSizeChangeLabel: \"Row count:\",\n                    gotoPageLabel: \"Go to page:\",\n                    noDataAvailable: \"No data\",\n                },\n                    \n            isLoading : false,\n            isReSearch : false,\n            isSortable : {\n                    order : \"id\",\n                    sort : \"asc\"\n            },\n        }\n    },\n\n    computed: {\n        columns() {\n            const columns = new RequestManager(this.rm).getColumnsResults() \n            this.resultsPage(0)\n\n            return columns\n        }\n    },\n\n    methods: {\n\n        resultsPage(indexLazyPage : number, numberOfResults : number) {\n          \n            new RequestManager(this.rm).getCountAndLaziesPages(numberOfResults)\n            .then( \n                (args : any) => {\n                    \n                    this.totalRecordCount = Object.values(args)[0] ;\n                    \n                    const laziestPages = Object.values(args)[1] as Array<any>;\n                    \n                    if (this.totalRecordCount>0 && laziestPages.length>0) {\n                        \n                        laziestPages[indexLazyPage]\n                            .commit()\n                            .raw()\n                            .then( (response : any) => { \n                            //console.log(JSON.stringify(response,null,2));\n                            this.rows = []\n                            let URIinstance : Map<String,String> = new Map()\n                            for (let i=0;i<response.results.bindings.length;i++) {\n                                let row : any = {};\n                                row['id'] = (indexLazyPage*10)+i\n                                \n                                const tabURI = [...new Set(this.columns\n                                    .filter( (col : any) => col.node_id ).map( (col : any) => col.node_id))]\n                                \n                                tabURI.forEach((uri : any ) => {   \n                                    /* value of instance only */\n                                    URIinstance.set(uri,response.results.bindings[i][uri].value)\n                                })\n\n                                this.columns.forEach((col : any) => {              \n                                    /* datatype only */\n                                    if ( col.field != col.node_id) {\n                                        let val =\"<undefined>\"\n\n                                        const uriInstance : string = URIinstance.get(col.node_id) as string\n                                        \n                                        console.log(JSON.stringify(response.results.datatypes[col.field][uriInstance]))\n                                        if (response.results.datatypes[col.field] && response.results.datatypes[col.field][uriInstance]) {\n                                            if (response.results.datatypes[col.field][uriInstance].length>0)\n                                                val = response.results.datatypes[col.field][uriInstance][0].value; \n                                        }\n                                        \n                                        row[col.field] = val\n                                    }\n                                    \n                                })\n                                this.rows.push(row) ;\n                            } \n                        })\n                }})\n        },\n        \n        doSearch(offset : number, limit : number, order : string, sort : string) {\n            console.log(\"doSearch\")\n            console.log(offset,limit,order,sort)\n\n            this.isLoading = true\n\n            if (offset)\n                this.isReSearch = true \n            else \n                this.isReSearch = false\n            //console.log(offset)\n            \n            this.resultsPage(Math.floor(offset/10),limit)\n            try {\n                if (order) this.sortable.order = order;\n            } catch (err) {\n                console.warn(err)\n            }\n\n            try {\n                if (sort) this.sortable.sort = sort;\n            } catch (err) {\n                console.warn(err)\n            }\n        },\n\n        tableLoadingFinish() {\n            console.log(\"tableLoadingFinish\")\n            //alert(\"DO tableLoadingFinish\")\n            this.isLoading = false;\n        },\n\n        updateCheckedRows() {\n            console.log(\"updateCheckedRows\")\n        }        \n\n    }\n})\n\nexport default class ResultsPanel extends Vue {\n\n}\n\n\n</script>\n\n<style>\n\n</style>","\nimport RequestManager from '@/ts/RequestManager';\nimport { Options, Vue } from 'vue-class-component';\nimport VueTableLite from 'vue3-table-lite'\n\n@Options({\n    name: \"ResultsPanel\",\n    \n    components : { VueTableLite },\n\n    props: {\n        rm : {\n                type: String,\n                required: false\n        },\n        \n        isStaticMode : {\n                type: Boolean,\n                required: false,\n                default: true\n        },\n\n        hasCheckbox : {\n                type: Boolean,\n                required: false,\n                default: false\n        },\n\n        isSortable : {\n                type: Object,\n                required: false,\n                default: {\n                    order : \"id\",\n                    sort : \"asc\"\n                }\n        },\n    },\n\n    data() { \n        return {\n            laziestPages : [],\n            rows : [],\n            totalRecordCount : 2 ,\n\n            messages : {\n                    pagingInfo : \"Showing {0}-{1} of {2}\",\n                    pageSizeChangeLabel: \"Row count:\",\n                    gotoPageLabel: \"Go to page:\",\n                    noDataAvailable: \"No data\",\n                },\n                    \n            isLoading : false,\n            isReSearch : false,\n            isSortable : {\n                    order : \"id\",\n                    sort : \"asc\"\n            },\n        }\n    },\n\n    computed: {\n        columns() {\n            const columns = new RequestManager(this.rm).getColumnsResults() \n            this.resultsPage(0)\n\n            return columns\n        }\n    },\n\n    methods: {\n\n        resultsPage(indexLazyPage : number, numberOfResults : number) {\n          \n            new RequestManager(this.rm).getCountAndLaziesPages(numberOfResults)\n            .then( \n                (args : any) => {\n                    \n                    this.totalRecordCount = Object.values(args)[0] ;\n                    \n                    const laziestPages = Object.values(args)[1] as Array<any>;\n                    \n                    if (this.totalRecordCount>0 && laziestPages.length>0) {\n                        \n                        laziestPages[indexLazyPage]\n                            .commit()\n                            .raw()\n                            .then( (response : any) => { \n                            //console.log(JSON.stringify(response,null,2));\n                            this.rows = []\n                            let URIinstance : Map<String,String> = new Map()\n                            for (let i=0;i<response.results.bindings.length;i++) {\n                                let row : any = {};\n                                row['id'] = (indexLazyPage*10)+i\n                                \n                                const tabURI = [...new Set(this.columns\n                                    .filter( (col : any) => col.node_id ).map( (col : any) => col.node_id))]\n                                \n                                tabURI.forEach((uri : any ) => {   \n                                    /* value of instance only */\n                                    URIinstance.set(uri,response.results.bindings[i][uri].value)\n                                })\n\n                                this.columns.forEach((col : any) => {              \n                                    /* datatype only */\n                                    if ( col.field != col.node_id) {\n                                        let val =\"<undefined>\"\n\n                                        const uriInstance : string = URIinstance.get(col.node_id) as string\n                                        \n                                        console.log(JSON.stringify(response.results.datatypes[col.field][uriInstance]))\n                                        if (response.results.datatypes[col.field] && response.results.datatypes[col.field][uriInstance]) {\n                                            if (response.results.datatypes[col.field][uriInstance].length>0)\n                                                val = response.results.datatypes[col.field][uriInstance][0].value; \n                                        }\n                                        \n                                        row[col.field] = val\n                                    }\n                                    \n                                })\n                                this.rows.push(row) ;\n                            } \n                        })\n                }})\n        },\n        \n        doSearch(offset : number, limit : number, order : string, sort : string) {\n            console.log(\"doSearch\")\n            console.log(offset,limit,order,sort)\n\n            this.isLoading = true\n\n            if (offset)\n                this.isReSearch = true \n            else \n                this.isReSearch = false\n            //console.log(offset)\n            \n            this.resultsPage(Math.floor(offset/10),limit)\n            try {\n                if (order) this.sortable.order = order;\n            } catch (err) {\n                console.warn(err)\n            }\n\n            try {\n                if (sort) this.sortable.sort = sort;\n            } catch (err) {\n                console.warn(err)\n            }\n        },\n\n        tableLoadingFinish() {\n            console.log(\"tableLoadingFinish\")\n            //alert(\"DO tableLoadingFinish\")\n            this.isLoading = false;\n        },\n\n        updateCheckedRows() {\n            console.log(\"updateCheckedRows\")\n        }        \n\n    }\n})\n\nexport default class ResultsPanel extends Vue {\n\n}\n\n\n","import { render } from \"./ResultsPanel.vue?vue&type=template&id=62b75f10\"\nimport script from \"./ResultsPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./ResultsPanel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component';\nimport ResultsPanel from '@/components/results/ResultsPanel'\n\n@Options({\n  name: \"ResultsView\",\n  components: {\n    ResultsPanel\n  },\n\n  data() { \n        return {\n        }\n  },\n  \n  computed: {\n    rm() {\n      console.log(this.$route.params)\n      return this.$route.params.rm\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Results extends Vue {}\n","import { render } from \"./Results.vue?vue&type=template&id=10cd1437\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ConfigurationPanel :configurations_list=\"config_list\" v-model:configuration=\"configuration\" />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport ConfigurationPanel from '@/components/configuration/ConfigurationPanel.vue'\nimport { UserConfiguration } from '@/ts/types'\n\n@Options({\n  name: \"ConfigurationView\",\n  components: {\n    ConfigurationPanel\n  },\n\n  data() { \n        return {\n          config_list: [ ]\n        }\n  },\n  \n  computed: {\n    configuration() {\n      return UserConfiguration.build(JSON.parse(this.$route.params.configuration))\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Configuration extends Vue {}\n</script>","<template>\n  <div id=\"configuration-panel\">\n      <div class=\"container\"> \n          <hr/>\n          \n          <div class=\"row\">\n            <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <select v-model=\"selectedimetype\" class=\"form-control\">\n                    <option v-for=\"option in optionsMimetype\" :key=\"option.text\" v-bind:value=\"option.value\">\n                      {{ option.text }}\n                    </option>\n                  </select>\n                  </div>\n                  <input type=\"text\" v-model=\"selectedEndpoint\" class=\"form-control\" @change='updateConfiguration' placeholder=\"http://\" list=\"browsers\" aria-label=\"Endpoint\">\n                  <datalist id=\"browsers\">\n                    <option v-for=\"item in configurationsList\" :key=\"item\" v-bind:value=\"item.endpoint\"/>\n                  </datalist>\n                </div>\n        \n          </div>\n          \n          <div class=\"row\" >\n            <div class=\"input-group mb-3\" >\n              <div>\n                  <label class=\"form-control\" for=\"sel1\">Strategy:</label>\n              </div>\n              \n              <div class=\"form-check form-check-inline\">\n                    <input name=\"strategyRequest\" value=\"askomics\" class=\"form-check-input\" type=\"radio\" v-model=\"selectedStrategy\" @change='updateConfiguration'>\n                    <label class=\"form-check-label\" for=\"strategyRequest\">\n                      AskOmics \n                    </label>\n                  </div>\n                  <div class=\"form-check form-check-inline\">\n                    <input name=\"strategyRequest\" value=\"data-driven\" class=\"form-check-input\" type=\"radio\" v-model=\"selectedStrategy\" @change='updateConfiguration'>\n                    <label class=\"form-check-label\" for=\"strategyRequest\">\n                      Data-Driven\n                    </label>\n                  </div>\n                </div>\n             </div>\n            \n     </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { UserConfiguration } from '@/ts/types'\n\n@Options({\n  name: \"ConfigurationPanel\",\n  components : {  \n      },\n  emits: [\"updateConfiguration\"],\n  props : { \n    configuration: Object,\n    configurationsList : {\n      type    : Array,\n      default : () => [\n        {\n          title    : \"PeakForest\",\n          endpoint : \"https://peakforest.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolomics Endpoint - Metabolights\",\n          endpoint : \"https://metabolights.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Genostack - Metabolights\",\n          endpoint : \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n         {\n          title    : \"Rhea - expert-curated knowledgebase of chemical and transport reactions of biological interest\",\n          endpoint : \"https://sparql.rhea-db.org/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"KEGG - Kyoto Encyclopedia of Genes and Genomes\",\n          endpoint : \"https://www.genome.jp/oc/proxy/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Mesh Term\",\n          endpoint : \"https://id.nlm.nih.gov/mesh/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"MetaNetX - Automated Model Construction and Genome Annotation for Large-Scale Metabolic Networks\",\n          endpoint : \"https://rdf.metanetx.org/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolights_studies.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        },\n        {\n          title    : \"Metabolights_studies_askomics.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies_askomics.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        },\n        {\n          title    : \"DBPedia\",\n          endpoint : \"https://dbpedia.org/sparql/\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        }\n      ]\n      },\n     strategy: {\n      type    : String,\n      default : \"data-driven\"\n    }\n  },\n\n  data () {\n    return {\n        selectedimetype: 'application/sparql-query',\n        optionsMimetype: [\n            { text: 'SPARQL', value: 'application/sparql-query' },\n            { text: 'Turtle', value: 'B' }\n          ],\n        selectedStrategy: this.strategy,\n        selectedEndpoint : \"\" \n    }\n  },\n  \n  mounted() {\n    this.selectedimetype  = this.configuration.mimetype\n    this.selectedEndpoint = this.configuration.url\n    this.selectedStrategy = this.configuration.strategy\n  },\n  \n  methods: {\n\n    getUserConfiguration(configObj : any) {\n      let configuration = new UserConfiguration(configObj.title)\n      configuration.mimetype = configObj.mimetype\n      \n      switch (configObj.type) {\n        case \"url\" : {\n          configuration.url      = configObj.endpoint\n          break ;\n        }\n        case \"file\" : {\n          configuration.file     = configObj.endpoint\n          break ;\n        }\n        case \"content\" : {\n          configuration.content  = configObj.endpoint\n          break ;\n        }\n        default : {\n          configuration.url      = configObj.endpoint\n        }\n      }\n      return configuration\n    } ,\n    \n    updateConfiguration(event : Event) {\n      console.log(\"update:\",event)\n      \n      const confL = this.configurationsList.filter( (config : any) => config.endpoint == this.selectedEndpoint )\n\n      let configuration : UserConfiguration\n\n      if (confL.length>0) {\n        configuration = this.getUserConfiguration(confL[0])\n      } else {\n        /* User definition */\n        configuration           = new UserConfiguration(\"defined-by-user\")\n        configuration.url       = this.selectedEndpoint\n        configuration.mimetype  = this.selectedimetype\n      }\n      \n      configuration.strategy = this.selectedStrategy\n\n      this.$emit('updateConfiguration',JSON.stringify(configuration))\n    }\n  }\n  \n})\n\nexport default class ConfigurationPanel extends Vue {\n\n}\n\n</script>\n\n<style>\n</style>\n","\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { UserConfiguration } from '@/ts/types'\n\n@Options({\n  name: \"ConfigurationPanel\",\n  components : {  \n      },\n  emits: [\"updateConfiguration\"],\n  props : { \n    configuration: Object,\n    configurationsList : {\n      type    : Array,\n      default : () => [\n        {\n          title    : \"PeakForest\",\n          endpoint : \"https://peakforest.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolomics Endpoint - Metabolights\",\n          endpoint : \"https://metabolights.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Genostack - Metabolights\",\n          endpoint : \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n         {\n          title    : \"Rhea - expert-curated knowledgebase of chemical and transport reactions of biological interest\",\n          endpoint : \"https://sparql.rhea-db.org/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"KEGG - Kyoto Encyclopedia of Genes and Genomes\",\n          endpoint : \"https://www.genome.jp/oc/proxy/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Mesh Term\",\n          endpoint : \"https://id.nlm.nih.gov/mesh/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"MetaNetX - Automated Model Construction and Genome Annotation for Large-Scale Metabolic Networks\",\n          endpoint : \"https://rdf.metanetx.org/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolights_studies.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        },\n        {\n          title    : \"Metabolights_studies_askomics.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies_askomics.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        },\n        {\n          title    : \"DBPedia\",\n          endpoint : \"https://dbpedia.org/sparql/\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        }\n      ]\n      },\n     strategy: {\n      type    : String,\n      default : \"data-driven\"\n    }\n  },\n\n  data () {\n    return {\n        selectedimetype: 'application/sparql-query',\n        optionsMimetype: [\n            { text: 'SPARQL', value: 'application/sparql-query' },\n            { text: 'Turtle', value: 'B' }\n          ],\n        selectedStrategy: this.strategy,\n        selectedEndpoint : \"\" \n    }\n  },\n  \n  mounted() {\n    this.selectedimetype  = this.configuration.mimetype\n    this.selectedEndpoint = this.configuration.url\n    this.selectedStrategy = this.configuration.strategy\n  },\n  \n  methods: {\n\n    getUserConfiguration(configObj : any) {\n      let configuration = new UserConfiguration(configObj.title)\n      configuration.mimetype = configObj.mimetype\n      \n      switch (configObj.type) {\n        case \"url\" : {\n          configuration.url      = configObj.endpoint\n          break ;\n        }\n        case \"file\" : {\n          configuration.file     = configObj.endpoint\n          break ;\n        }\n        case \"content\" : {\n          configuration.content  = configObj.endpoint\n          break ;\n        }\n        default : {\n          configuration.url      = configObj.endpoint\n        }\n      }\n      return configuration\n    } ,\n    \n    updateConfiguration(event : Event) {\n      console.log(\"update:\",event)\n      \n      const confL = this.configurationsList.filter( (config : any) => config.endpoint == this.selectedEndpoint )\n\n      let configuration : UserConfiguration\n\n      if (confL.length>0) {\n        configuration = this.getUserConfiguration(confL[0])\n      } else {\n        /* User definition */\n        configuration           = new UserConfiguration(\"defined-by-user\")\n        configuration.url       = this.selectedEndpoint\n        configuration.mimetype  = this.selectedimetype\n      }\n      \n      configuration.strategy = this.selectedStrategy\n\n      this.$emit('updateConfiguration',JSON.stringify(configuration))\n    }\n  }\n  \n})\n\nexport default class ConfigurationPanel extends Vue {\n\n}\n\n","import { render } from \"./ConfigurationPanel.vue?vue&type=template&id=8c848b44\"\nimport script from \"./ConfigurationPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./ConfigurationPanel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component';\nimport ConfigurationPanel from '@/components/configuration/ConfigurationPanel.vue'\nimport { UserConfiguration } from '@/ts/types'\n\n@Options({\n  name: \"ConfigurationView\",\n  components: {\n    ConfigurationPanel\n  },\n\n  data() { \n        return {\n          config_list: [ ]\n        }\n  },\n  \n  computed: {\n    configuration() {\n      return UserConfiguration.build(JSON.parse(this.$route.params.configuration))\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Configuration extends Vue {}\n","import { render } from \"./Configuration.vue?vue&type=template&id=4d35a779\"\nimport script from \"./Configuration.vue?vue&type=script&lang=ts\"\nexport * from \"./Configuration.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\nimport AskOmics from '../views/AskOmics.vue'\nimport Results from '../views/Results.vue'\nimport Configuration from '../views/Configuration.vue'\nimport AskEndpoint from '../views/AskEndpoint.vue'\nimport AskHashQuery from '../views/AskHashQuery.vue'\nimport { UserConfiguration } from '@/ts/types'\n\nconst routes: Array<RouteRecordRaw> = [\n /* {\n    path: '/:endpoint',\n    name: 'Ask Endpoint',\n    component: Configuration // change to worklows -> configuration -> askomics view\n  },\n  {\n    path: '/:hash_query',\n    name: 'Ask Query',\n    component: Configuration // change to worklows -> configuration -> askomics view\n  },*/\n  {\n    path: '/',\n    name: 'app',\n    component: AskOmics\n  },\n  {\n    path: '/askomics/:query',\n    name: 'askomics',\n    component: AskOmics\n  },\n  {\n    path: '/results/:rm',\n    name: 'results',\n    component: Results\n  },\n  {\n    path: '/configuration/:configuration',\n    name: 'configuration',\n    component: Configuration\n  }\n]\n\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\n/*\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap\"\n*/\ncreateApp(App).use(router).mount('#app')\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./QueryGraphPanel.vue?vue&type=style&index=0&id=59fde202&lang=css\""],"sourceRoot":""}