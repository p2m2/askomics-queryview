{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/GraphBuilder.vue?8673","webpack:///./src/components/discovery-builder/panels/QueryGraphPanel.vue?d388","webpack:///./src/components/discovery-builder/panels/AttributesPanel.vue?500a","webpack:///./src/components/discovery-builder/panels/QueryBuilderPanel.vue?f5a6","webpack:///./src/components/discovery-builder/attribute/AttributeBox.vue?25ed","webpack:///./src/App.vue","webpack:///./src/ts/types.ts","webpack:///./src/ts/utils.ts","webpack:///./src/views/GraphBuilder.vue","webpack:///./src/components/discovery-builder/panels/QueryBuilderPanel.vue","webpack:///./src/components/discovery-builder/panels/QueryGraphPanel.vue","webpack:///./src/ts/RequestManager.ts","webpack:///./src/ts/StrategyRequestAbstract.ts","webpack:///./src/ts/StrategyRequestAskOmics.ts","webpack:///./src/ts/StrategyRequestDataDriven.ts","webpack:///./src/ts/UserIncrementManager.ts","webpack:///./src/components/discovery-builder/panels/QueryGraphPanel.vue?1815","webpack:///./src/components/discovery-builder/panels/QueryGraphPanel.vue?dfb3","webpack:///./src/components/discovery-builder/panels/AttributesPanel.vue","webpack:///./src/components/discovery-builder/attribute/AttributeBox.vue","webpack:///./src/components/discovery-builder/attribute/URIBox.vue","webpack:///./src/components/discovery-builder/attribute/URIBox.vue?279d","webpack:///./src/components/discovery-builder/attribute/URIBox.vue?541d","webpack:///./src/components/discovery-builder/attribute/XsdString.vue","webpack:///./src/components/discovery-builder/attribute/XsdString.vue?5a3f","webpack:///./src/components/discovery-builder/attribute/XsdString.vue?2ea9","webpack:///./src/components/discovery-builder/attribute/XsdNumeric.vue","webpack:///./src/components/discovery-builder/attribute/XsdNumeric.vue?f68d","webpack:///./src/components/discovery-builder/attribute/XsdNumeric.vue?73aa","webpack:///./src/components/discovery-builder/attribute/AttributeBox.vue?2ced","webpack:///./src/components/discovery-builder/attribute/AttributeBox.vue?5ae7","webpack:///./src/ts/GraphBuilder.ts","webpack:///./src/components/discovery-builder/panels/AttributesPanel.vue?b4de","webpack:///./src/components/discovery-builder/panels/AttributesPanel.vue?1f85","webpack:///./src/components/discovery-builder/panels/QueryBuilderPanel.vue?7729","webpack:///./src/components/discovery-builder/panels/QueryBuilderPanel.vue?47d4","webpack:///./src/views/GraphBuilder.vue?b482","webpack:///./src/views/GraphBuilder.vue?0640","webpack:///./src/views/Console.vue","webpack:///./src/views/Console.vue?764c","webpack:///./src/views/Console.vue?eaa5","webpack:///./src/views/Results.vue","webpack:///./src/components/results/ResultsPanel.vue","webpack:///./src/components/results/ResultsPanel.vue?8110","webpack:///./src/components/results/ResultsPanel.vue?0592","webpack:///./src/views/Results.vue?d1d7","webpack:///./src/views/Results.vue?89e9","webpack:///./src/views/Configuration.vue","webpack:///./src/components/configuration/ConfigurationPanel.vue","webpack:///./src/components/configuration/ConfigurationPanel.vue?2cc8","webpack:///./src/components/configuration/ConfigurationPanel.vue?6576","webpack:///./src/views/Configuration.vue?02c2","webpack:///./src/views/Configuration.vue?c84f","webpack:///./src/router/index.ts","webpack:///./src/App.vue?1d14","webpack:///./src/App.vue?97f5","webpack:///./src/main.ts","webpack:///./src/views/Console.vue?5b70"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","role","aria-label","type","data-toggle","data-placement","title","disabled","href","target","configuration","icon","backwardActive","back","forwardActive","forward","builder","getResults","console","copyPermalinkQueryBuilderToClipBoard","clear","requestManagerStringify","$event","AttributeOperator","NodeType","LinkType","ObjectState","FilterProperty","regexp","test","_string","substring","url","splitList","split","last","splitList2","decodeURI","bytes","si","thresh","Math","abs","units","u","toFixed","date","event","Date","toUTCString","str","hash","charCodeAt","toString","toUpperCase","hex","rgb","parseInt","g","b","luma","id","order","uri","range","label","visible","negative","linked","filterValue","operator","CONTAINS","this","splitUrl","trim","replace","UNDEFINED","EQUAL","att","AskOmicsViewAttributes","file","content","mimetype","method","strategy","logLevel","pageSize","batchProcessing","cache","Error","ma","methodAcess","remoteAccess","copy","UserConfiguration","x","AskOmicsGenericNode","randomInteger","min","max","y","String","idCounter","state_n","SUGGESTED","CONCRETE","SELECTED","assign","floor","random","RangeBoxType","focus","state","AskOmicsViewNode","SOMETHING","typeLink","source","vx","vy","requestString","updateRequestString","currentQuery","filterProperty","updateQuery","requestBusy","JSON","parse","requestBusyPercent","stringify","requestBusyEvent","width","height","size","spin","style","aria-valuenow","aria-valuemin","aria-valuemax","canvasClass","discovery_map","config_rdf","Promise","successCallback","failureCallback","setConfigString","something","isSubjectOf","select","limit","commit","raw","then","response","Set","results","bindings","map","datatype","e","listUriDatatypeProperty","listUriDatatypePropertyClean","Map","all","getDatatypesWithProperty","allPairPropertyDatatype","PropertyDatatype","set","catch","askomics_prefix","log","discovery","isObjectOf","isA","current","isLinkTo","root","filter","isLiteral","not","strStarts","isUri","idx_history","vue","RequestManager","strategy_str","serializedDiscovery","setDiscovery","setSerializedString","setConfiguration","getConfiguration","getDiscovery","getSerializedString","config","jsonConfigurationSWDiscoveryString","setDecoration","defaultGraph","current_focus","setConfig","warn","build","getDecoration","rm","serialized","getGraph","nodes","links","setGraph","graph","$emit","disco","node","link","snd_node_id","snd_node","pop","FORWARD_PROPERTY","BACKWARD_PROPERTY","IS_A","error","numberOfResults","getFocus","index","listVarName","varname","focusIsSelected","isFocusStart","nodeFocus","cond","Number","every","idx_node","neighbours","nodesWithExistingLinks","flatMap","includes","id_node_rem","remove_node_graph","remove","attribute","contains","STREQUAL","equal","STRSTARTS","STRENDS","strEnds","NOTEQUAL","notEqual","INF","inf","INFEQUAL","infEqual","SUP","sup","SUPEQUAL","supEqual","alert","attributeList","distinct","checkVariablePresent","listLabelEntity","datatypes","mapFilterAttributes","keys","k","unshift","lUris","getDatatypes","mapPropertyAndRange","iCount","uriProperty","propertyEntities","FORWARD_ENTITY","BACKWARD_ENTITY","forwardEntities","backwardEntities","transaction","progression","percent","requestEvent","mR","entity","labelEntity","labelProperty","has","browse","deep","attributes_current_node","decorations","attributes","entries","element","node_label","node_id","idRef","field","sortable","isKey","flat","variables","getColumnsResults","variables_uniq","setPageSize","selectByPage","args","forwardIsActive","backwardIsActive","request","forEach","v","toShape","setFocus","setNewNodeWithLink","emits","components","props","required","ctrlKey","canvas","ctx","color","zoom","zoomTime","trans","colorGrey","colorDarkGrey","colorFirebrick","lineWidth","nodeSize","textSize","blankNodeSize","arrowLength","forceCollide","strengthForce","strengthForceManBody","alphaTarget","nodesSimulation","linksSimulation","selectedNodeCanvas","mounted","setUpSimulation","refreshSimulation","beforeDestroy","watch","simulation","restart","methods","selectedNode","getContext","force","strength","on","updateSimulation","canvasClick","container","subject","dragsubject","dragstarted","dragged","dragended","setObjectsSimulation","isNode","idxSimulation","findIndex","isLink","clearRect","fillStyle","fillRect","beginPath","globalAlpha","strokeStyle","drawLink","stroke","drawNode","zoomed","translate","transform","scale","find","rect","getBoundingClientRect","left","top","releaseSelectedObject","updateGraph","creation_node","debug","setShapeNode","removeSuggestion","display_suggestions","setFocusRoot","component","ArrayPromises","ALL","clickNodeForward","clickNodeBackward","TO","FROM","nodesAndLinksArray","nodesAndLinks","concat","finally","active","fx","fy","IntersectionCoordinate","x1","y1","x2","y2","theta","atan","cos","sin","middleCoordinate","triangleCoordinate","headlen","atan2","xa","PI","ya","xb","yb","unselectedColor","unselectedColorText","stringToHexColor","setLineDash","arc","fill","closePath","font","textAlign","textBaseline","fillText","moveTo","lineTo","triangle","render","displayCommonAttributeButtons","selected_filterProperty","propertyFilterList","propFilter","displayRemoveButton","removeNode","item","updateAttribute","className","erase","closeEye","openEye","updateFilterValue","optionsTypeCompare","option","text","optionsTypeSearch","placeholder","optionsOprator","add","library","FontAwesomeIcon","XsdString","XsdNumeric","URIBox","toggleLinkAttribute","from","clean","openLink","closeLink","toggleOptional","listAttributes","obj","getObject","AttributeBox","created","attributesList","document","querySelector","componentKey","computed","removableNode","updateAttributeList","buildAttributesBox","sort","a","QueryGraphPanel","AttributesPanel","prepareRequestBusy","attributeBoxEvent","QueryBuilderPanel","decompress","$route","params","requestManagerString","old","innerHTML","message","is-static-mode","isStaticMode","has-checkbox","hasCheckbox","is-loading","isLoading","is-re-search","isReSearch","columns","rows","total","totalRecordCount","isSortable","messages","doSearch","tableLoadingFinish","updateCheckedRows","VueTableLite","Boolean","default","laziestPages","pagingInfo","pageSizeChangeLabel","gotoPageLabel","noDataAvailable","resultsPage","indexLazyPage","getCountAndLaziesPages","values","URIinstance","row","tabURI","col","val","uriInstance","offset","err","ResultsPanel","configurations_list","config_list","for","selectedimetype","optionsMimetype","selectedEndpoint","updateConfiguration","list","configurationsList","endpoint","selectedStrategy","Array","getUserConfiguration","configObj","confL","ConfigurationPanel","routes","path","router","history","location","search","URLSearchParams","compress_data","setDefaultStartRequestManager","updateHistoryButton","getDefault","updateRequestManagerStringify","compress","backward","$toast","info","compressed","origin","navigator","clipboard","writeText","success","use","position","mount"],"mappings":"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","file":"js/app.abd383d6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/discovery-queryview/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./GraphBuilder.vue?vue&type=style&index=0&id=032fee69&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./QueryGraphPanel.vue?vue&type=style&index=0&id=b8deaafc&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AttributesPanel.vue?vue&type=style&index=0&id=363611d2&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./QueryBuilderPanel.vue?vue&type=style&index=0&id=843c9f7a&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AttributeBox.vue?vue&type=style&index=0&id=6360ad6d&lang=css\"","<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n     <div class=\"container-fluid\">\n      \n      <div class=\"collapse navbar-collapse\">\n       \n          <div class=\"btn-group\" role=\"group\" aria-label=\"tools graph\">\n              <button type=\"button\" class=\"form-control btn btn-primary\" \n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"SPARQL Endpoint/RDF Files/ Query Builder Confiuration.\"\n              @click=\"configuration\">\n                 <font-awesome-icon icon=\"sliders-h\" />  \n              </button>\n\n              <button type=\"button\" class=\"form-control btn btn-primary\" \n              @click=\"back\" \n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\"\n              title=\"Undo last action, go back.\"\n              v-if=\"backwardActive\">\n                <font-awesome-icon icon=\"backward\" />  \n              </button>\n              <button type=\"button\" class=\"form-control btn btn-primary disabled\" \n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\"\n              title=\"Undo last action, go back.\"\n              v-else disabled>\n                 <font-awesome-icon icon=\"backward\" />  \n              </button>\n\n              <button type=\"button\" class=\"form-control btn btn-primary\" \n              @click=\"forward\" \n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"Retrieve the canceled action, go forward.\"\n              v-if=\"forwardActive\">\n                 <font-awesome-icon icon=\"forward\" />  \n              </button>\n              <button type=\"button\" class=\"form-control btn btn-primary disabled\"  \n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"Retrieve the canceled action, go forward.\"\n              v-else disabled>\n                 <font-awesome-icon icon=\"forward\" />  \n              </button>\n\n              <button type=\"button\" class=\"form-control btn btn-primary\" \n              @click=\"builder\"\n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"Build the query.\"\n              >\n\n                 <font-awesome-icon icon=\"project-diagram\" />  \n              </button>\n\n              <button type=\"button\" class=\"form-control btn btn-primary\" \n              @click=\"getResults\"\n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"Display the query results.\"\n              >\n                <font-awesome-icon icon=\"poll\" />  \n              </button> \n              \n              <button type=\"button\" class=\"form-control btn btn-info\" \n              @click=\"console\"\n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"Information about the current query (discovery internal state).\"\n              >\n                <font-awesome-icon icon=\"terminal\" />\n              </button>\n\n              <button type=\"button\" class=\"form-control btn btn-success\" \n              @click=\"copyPermalinkQueryBuilderToClipBoard\"\n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"Copy a permalink to save the current query.\"\n              >\n                <font-awesome-icon icon=\"clipboard-list\" />\n              </button>\n\n              <button type=\"button\" class=\"form-control btn btn-danger\" @click=\"clear\"\n              data-toggle=\"tooltip\" \n              data-placement=\"bottom\" \n              title=\"Delete the current request and start a new session.\"\n              >Clear</button>\n            </div>\n\n         \n        <!--\n        <form class=\"d-flex\">\n          <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n          <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>\n      -->\n      </div>\n    </div>\n  </nav>\n\n  <!-- Extraneous non-emits event listeners  -->\n\n  <router-view \n      @updateRequestManager=\"requestManagerStringify = $event\"\n  />\n    <!--  -->\n\n <div class=\"card-footer\">\n     \n     <a href=\"https://github.com/p2m2/askomics-queryview\" target=\"_blank\" >beta-0.0.3</a> \n     <br/>\n     <a href=\"https://p2m2.github.io/discovery/\" target=\"_blank\">@p2m2/discovery</a>\n </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { UserConfiguration } from '@/ts/types'\n\nimport router from '@/router/index';\n\nimport RequestManager from './ts/RequestManager';\n\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faBackward, faForward, faSpinner, \n          faClipboard, faClipboardList, faPoll, \n          faTerminal, faSlidersH, faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n[ faBackward, faForward, faSpinner, faClipboard, faClipboardList, faPoll, faTerminal, faSlidersH, faProjectDiagram ].map(icon => library.add(icon)) ;\n\n@Options({\n  name: \"AppView\",\n\n  components : {  \n      library,FontAwesomeIcon\n    },\n\n  data() { \n        return {\n          requestManagerStringify : \"\",\n          forwardActive      : false,\n          backwardActive     : false\n        }\n  },\n\n  created() {\n    /* If user have a permalink -- management */\n    let uri = window.location.search\n    let params = new URLSearchParams(uri);\n\n    if (params.has(\"hash\")) {\n       /* form http://..../query/XXXXXXX */\n      const compress_data = params.get(\"hash\")\n      this.requestManagerStringify = require('lzbase62').decompress(compress_data)      \n      this.builder()\n\n    } else {\n      this.setDefaultStartRequestManager()\n      this.configuration()\n    }\n    \n  },\n\n  watch: {\n     requestManagerStringify() {\n       this.updateHistoryButton()\n     }\n  },\n \n  methods : {\n\n    setDefaultStartRequestManager() {\n      let configuration  = new UserConfiguration(\"default_rdf_source\")\n      \n      configuration.mimetype = \"application/sparql-query\"\n      configuration.url      = \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\"\n      configuration.strategy = \"data-driven\" \n      \n      /*\n      this.configuration.type      = \"file\"\n      this.configuration.url       = \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies.ttl\"\n      this.configuration.mimetype  = \"text/turtle\"\n      this.configuration.strategy  = \"data-driven\" \n    */\n      this.requestManagerStringify = RequestManager.getDefault(configuration,this).serialized()\n    },\n    \n    updateRequestManagerStringify(value : string) {\n      this.requestManagerStringify = value\n      router.replace({ params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n    \n    updateHistoryButton() {\n      this.forwardActive  = RequestManager.forwardIsActive()\n      this.backwardActive = RequestManager.backwardIsActive()\n    },\n\n    back() {\n      this.updateRequestManagerStringify(RequestManager.backward())\n      this.updateHistoryButton()\n      this.$toast.info(\"backward\"); \n    } ,\n\n    forward() {\n      this.updateRequestManagerStringify(RequestManager.forward())\n      this.updateHistoryButton()\n      this.$toast.info(\"forward\"); \n    },\n\n     /* https://router.vuejs.org/guide/essentials/navigation.html*/\n     \n    builder() {\n      router.push({ name : 'builder' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n\n    getResults() {\n      router.push({ name : 'results' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    } ,\n\n    console() {\n      router.push({ name : 'console' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n\n    configuration() {\n      router.push({ name : 'configuration' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n\n    copyPermalinkQueryBuilderToClipBoard() {\n        const compressed = require('lzbase62').compress(this.requestManagerStringify);\n        const url = document.location.origin+process.env.BASE_URL+\"?hash=\"+compressed\n        const vue = this\n        navigator.clipboard.writeText(url).then(function() {\n            /* clipboard successfully set */\n            vue.$toast.success(\"query builder url to clipboard !\"); \n          }, function(e:Event) {\n            /* clipboard write failed */\n            vue.$toast.error(\"query builder url to clipboard failed !\"); \n             console.error(e)\n          });\n    },\n\n    clear() {\n      let r = new RequestManager(this.requestManagerStringify,this)\n      r.clear()\n      this.updateRequestManagerStringify(r.serialized())\n      this.$toast.info(\"clear session !\"); \n    }\n  }\n\n})\nexport default class App extends Vue {}\n</script>\n\n<style>\n</style>\n","import Utils from \"./utils\"\n\n\ninterface AskOmicsViewAttributesI {\n    id: string\n    order: number,\n    uri: string\n    label: string\n    range : string\n    visible: boolean    \n    negative: boolean   \n    linked: boolean\n    properties : Object\n    filterValue : string  \n    operator  : AttributeOperator       \n}\n\nexport class AskOmicsViewAttributes {\n      id: string\n      order: number\n      uri: string\n      label: string\n      range : string\n      visible: boolean      = false\n      negative: boolean     = false\n      linked: boolean       = false\n      filterValue : string  = \"\"\n      operator  : AttributeOperator = AttributeOperator.CONTAINS\n\n\n      constructor(id: string,order : number,uri: string,range: string, label : string=\"\") {\n        this.id = id\n        this.order = order\n        this.uri = uri\n        this.label = label == \"\" ? Utils.splitUrl(uri): label \n        this.range = range.trim().replace(\"http://www.w3.org/2001/XMLSchema#\",\"xsd:\")\n      }\n    \n      getObject() {\n        return {\n            id: this.id, \n            order: this.order,\n            uri : this.uri, \n            label: this.label, \n            range: this.range, \n            visible: this.visible , \n            negative: this.negative,\n            linked : this.linked,\n            filterValue : this.filterValue,\n            operator : this.operator\n          }\n      }\n\n      clean() : AskOmicsViewAttributes  {\n        this.visible  = false  \n        this.negative = false  \n        this.linked   = false  \n        this.filterValue = \"\" \n        this.operator = AttributeOperator.UNDEFINED\n        if ( this.range == \"xsd:string\" || this.range == \"uri\" ) this.operator = AttributeOperator.CONTAINS\n        else if ( \n            this.range == \"xsd:numeric\" || \n            this.range == \"xsd:integer\" || \n            this.range == \"xsd:double\" || \n            this.range == \"xsd:float\" ) this.operator = AttributeOperator.EQUAL\n\n        return this\n      }\n  \n      static from(n: AskOmicsViewAttributesI) : AskOmicsViewAttributes {\n        const att = new AskOmicsViewAttributes(n.id,n.order,n.uri,n.range,n.label)\n        att.visible = n.visible\n        att.negative = n.negative \n        att.linked = n.linked\n        att.filterValue = n.filterValue,\n        att.operator = n.operator\n        \n        return att\n\n    }\n\n}\n\nexport interface Graph3DJS { \n    nodes : AskOmicsViewNode[], \n    links : AskOmicsViewLink[] \n}\n\n\nexport enum AttributeOperator {\n    UNDEFINED=0,\n    STREQUAL,\n    CONTAINS,\n   /* REGEXP, wait fix #143 issue - discovery */\n    STRSTARTS,\n    STRENDS,\n    EQUAL,\n    NOTEQUAL,\n    INF,\n    INFEQUAL,\n    SUP,\n    SUPEQUAL\n}\n\nexport enum NodeType {\n    SOMETHING=0,\n    FORWARD_ENTITY,\n    BACKWARD_ENTITY   \n}\n\nexport enum LinkType {\n    FORWARD_PROPERTY=0,\n    BACKWARD_PROPERTY,\n    IS_A\n}\n\nexport enum ObjectState {\n    SUGGESTED=0,\n    CONCRETE,\n    SELECTED,   \n}\n\nexport enum FilterProperty {\n    TO=0,\n    IS_A,\n    FROM,\n    ALL,   \n}\n\n/**\n *  \"text/turtle\",\n      \"text/n3\",\n      \"text/rdf-xml\",\n      \"application/rdf+xml\"\n */\nexport class UserConfiguration {\n    id             : string  \n    url            : string = \"\"\n    file           : string = \"\"\n    content        : string = \"\"\n    mimetype       : string = \"application/sparql-query\"\n    method         : string = \"POST\"\n\n    strategy       : string = \"data-driven\"\n    logLevel       : string = \"info\"\n\n    pageSize        : number = 10\n    batchProcessing : number = 10\n\n    cache           : boolean = true \n\n    constructor(id  : string) {\n            this.id = id\n    }\n    \n\n    static build(s : any) : UserConfiguration {\n        const copy     = new UserConfiguration(s.id)\n        \n        if (s.url) copy.url    = s.url \n        if (s.file) copy.file            = s.file \n        if (s.content) copy.content         = s.content\n        if (s.mimetype) copy.mimetype        = s.mimetype \n        if (s.method) copy.method          = s.method \n        if (s.strategy) copy.strategy        = s.strategy  \n        if (s.logLevel) copy.logLevel        = s.logLevel\n        if (s.pageSize) copy.pageSize        = s.pageSize  \n        if (s.batchProcessing) copy.batchProcessing = s.batchProcessing\n        if (s.cache) copy.cache = s.cache\n\n        return copy  \n    }\n\n    remoteAccess() : string {\n        if ( this.url.length>0) {\n            return `\"url\" : \"`+this.url+`\"`\n        } else if ( this.file.length>0) {\n            return `\"file\" : \"`+this.file+`\"`\n        } else if ( this.content.length>0 ) {\n            return `\"content\" : \"`+this.content+`\"`\n        }\n        \n        throw Error(\"url|file|content should bed defined.\") ;\n\n    }\n    methodAcess() : string {\n        if ( this.method ) `\"method\" : \"`+this.method+`\"`\n        return \"\"\n    }\n\n    jsonConfigurationSWDiscoveryString() : string {\n\n        let ma : string = this.methodAcess() \n\n        if (ma.length > 0 ) {\n            ma = ma + \",\\n\"\n        } \n\n        return  `{\n            \"sources\" : [{\n            \"id\"  : \"__id__\",\\n`  +\n            this.remoteAccess() + \",\\n\" +\n            ma +\n            `\"mimetype\" : \"`+this.mimetype+`\"` + \n        `}],\n            \"settings\" : {\n                \"cache\" : `+this.cache +`,\n                \"logLevel\" : \"`+this.logLevel+`\",\n                \"sizeBatchProcessing\" :  `+this.batchProcessing +`,\n                \"pageSize\" : `+this.pageSize +`\n            }\n        }`\n    }\n}\n  \n\nexport abstract class AskOmicsGenericNode {\n    id          : string\n    uri         : string = \"\"\n    label       : string = \"\"\n    state_n     : ObjectState\n    \n    static min : number = -4\n    static max : number = 4\n\n    x         : number = 375 + AskOmicsGenericNode.randomInteger(AskOmicsGenericNode.min,AskOmicsGenericNode.max) // (740/2) \n    y         : number = 225 + AskOmicsGenericNode.randomInteger(AskOmicsGenericNode.min,AskOmicsGenericNode.max) // (450/2)\n\n    static idCounter : number  = 0 ;\n\n    constructor( uri : string ,  label : string ) {\n        this.id = String(AskOmicsGenericNode.idCounter++)\n        this.uri = uri \n        this.state_n = ObjectState.SUGGESTED    \n        \n        if ( label.length > 0 )\n            this.label = label\n        else\n            this.label = Utils.splitUrl(uri)\n    }\n\n    static randomInteger(min : number , max : number) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n\n    isSuggested() : Boolean { return this.state_n == ObjectState.SUGGESTED}\n\n    isConcrete() : Boolean { return this.state_n == ObjectState.CONCRETE}\n\n    isSelected() : Boolean { return this.state_n == ObjectState.SELECTED}\n\n    setSuggested() : void { this.state_n = ObjectState.SUGGESTED}\n\n    setConcrete() : void { this.state_n = ObjectState.CONCRETE}\n\n    setSelected() : void { this.state_n = ObjectState.SELECTED}\n\n    getObject() : object {\n        return Object.assign({},this)\n    }\n}\n\nexport class AskOmicsViewNode extends AskOmicsGenericNode {\n    \n    focus     : string\n    type      : NodeType\n\n    constructor(uri : string, label : string, type: NodeType) {\n        super(uri,label);\n        this.type  = type\n        this.focus = \"\"\n    }\n    \n  \n    static something(state : ObjectState,focus:string) : AskOmicsViewNode {\n        const n = new AskOmicsViewNode(\"something\",\"Something\",NodeType.SOMETHING) ;\n        n.type = NodeType.SOMETHING ;\n        n.state_n = state\n        n.focus = focus\n        return n\n    }\n} \n\nexport class AskOmicsViewLink extends AskOmicsGenericNode {\n    type      : LinkType\n    source    : string\n    target    : string\n    vx         : number = 0\n    vy         : number = 0\n\n    constructor(uri : string,  label : string, typeLink : LinkType, source : string, target : string) {\n        super(uri,label);\n       \n        this.type = typeLink\n        this.source = source\n        this.target = target    \n    }\n} \n\nexport enum RangeBoxType {\n    XSD_UNKNOWN=0,\n    XSD_NUMERIC,\n    XSD_BOOLEAN,\n    XSD_STRING,   \n}\n\nexport type RdfSparqlResultForm = {\n    type : String,\n    value: String, \n    datatype: String,\n    \"xml:lang\" : String\n}","export default class Utils {\n\n    static isUrl(s : string) {\n      /* eslint-disable */\n       var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\n       return regexp.test(s);\n    }\n  \n    static truncate(_string : string, n: number) {\n      if (_string.length > n) {\n        return _string.substring(0 ,n) + \"...\"\n      } else {\n        return _string\n      }\n    }\n  \n    static splitUrl(url : string) : string {\n      let splitList = url.split('/')\n      // take last elem\n      let last = splitList[splitList.length - 1]\n      let splitList2 = last.split('#')\n      return decodeURI(splitList2[splitList2.length - 1])\n    }\n  \n    static humanFileSize (bytes : number, si : boolean) {\n      let thresh = si ? 1000 : 1024\n      if (Math.abs(bytes) < thresh) {\n        return bytes + ' B'\n      }\n      let units = si ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n      let u = -1\n      do {\n        bytes /= thresh\n        ++u\n      } while (Math.abs(bytes) >= thresh && u < units.length - 1)\n      return bytes.toFixed(1) + ' ' + units[u]\n    }\n  \n    static humanDate (date : number) {\n      let event = new Date(date * 1000)\n      return event.toUTCString()\n    }\n  /*\n    static objectHaveKeys(obj : Object, level, ...rest) {\n      if (obj === undefined) return false\n      if (rest.length == 0 && obj.hasOwnProperty(level)) return true\n      return this.objectHaveKeys(obj[level], ...rest)\n    }\n  \n    static isFunction(functionToCheck) {\n      return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]'\n    }\n  */\n    static stringToHexColor (str : string ) {\n      // first, hash the string into an int\n      let hash = 0\n      for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash)\n      }\n      // Then convert this int into a rgb color code\n      let c = (hash & 0x00FFFFFF).toString(16).toUpperCase()\n      let hex = '#' + '00000'.substring(0, 6 - c.length) + c\n      return hex\n    }\n  \n    static isDarkColor(hex : string ) {\n      let c = hex.substring(1)    // strip #\n      let rgb = parseInt(c, 16)   // convert rrggbb to decimal\n      let r = (rgb >> 16) & 0xff  // extract red\n      let g = (rgb >>  8) & 0xff  // extract green\n      let b = (rgb >>  0) & 0xff  // extract blue\n  \n      let luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n  \n      if (luma < 128) {\n        return true\n      }\n      return false\n    }\n  \n  }\n  ","<template>\n    <QueryBuilderPanel v-model:requestString=\"requestString\" @updateRequestManager=\"updateRequestString\" />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport QueryBuilderPanel from '@/components/discovery-builder/panels/QueryBuilderPanel.vue'\n\n@Options({\n  name: \"GraphBuilder\",\n  \n  props : {\n    rm :  String\n  },\n\n  components: {\n    QueryBuilderPanel \n  },\n\n  emits: [\"updateRequestManager\"],\n \n  computed: {\n    requestString() {\n      return require('lzbase62').decompress(this.$route.params.rm)\n    }\n  },\n\n  methods : {\n    updateRequestString(requestManagerString : string) {\n      this.$emit('updateRequestManager',requestManagerString)\n    }\n  }\n\n})\nexport default class GraphBuilder extends Vue {}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n</style>","<template>\n  <div id=\"askomics-panel\">\n      <div class=\"container\"> \n          <hr/>\n          <!-- waiting div -->\n              <br />\n              <div class=\"row\">\n                <div class=\"col col-xs-7\">\n                    <QueryGraphPanel \n                      v-model:requestString=\"currentQuery\"\n                      v-model:filterProperty=\"filterProperty\"\n                      @updateRequestManager=\"updateQuery\"\n                      @requestManagerBusy=\"requestBusy = JSON.parse($event)\"\n                      @requestManagerBusyPercent=\"requestBusyPercent = JSON.stringify(JSON.parse($event)*100)\"\n                      @requestManagerBusyEvent=\"requestBusyEvent\"\n                      :width=\"750\" \n                      :height=\"450\" />\n                </div>\n                \n                <div class=\"col col-xs-5\">\n                    <AttributesPanel \n                      v-model:requestString=\"currentQuery\"\n                      @updateRequestManager=\"updateQuery\"\n                      @updateFilterProperty=\"filterProperty = JSON.parse($event)\"\n                      :width=\"450\" \n                      :height=\"450\"\n                    />\n                </div>\n              </div>\n            <div class=\"row\">\n              <div class=\"col\">\n                <font-awesome-icon icon=\"spinner\" size=\"2x\" spin v-if=\"requestBusy\" />\n        \n                <div class=\"progress\" v-if=\"requestBusy\">\n                      <div class=\"progress-bar\" role=\"progressbar\" :style=\"'width: '+requestBusyPercent+'%'\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                        {{ requestBusyPercent }} {{ requestBusyEvent }}\n                      </div>\n                </div>\n                </div>\n                </div> \n         </div>\n     </div>\n \n</template>\n\n<script lang=\"ts\">\n\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n\nimport QueryGraphPanel from './QueryGraphPanel.vue'\nimport AttributesPanel from './AttributesPanel.vue'\nimport { FilterProperty } from '@/ts/types';\n\n[ faSpinner ].map(icon => library.add(icon)) ;\n\n\n@Options({\n  name: \"QueryBuilderPanel\",\n  \n  components : {  \n      library,FontAwesomeIcon, QueryGraphPanel,AttributesPanel\n      },\n  \n  emits: [\"updateRequestManager\"],\n  \n  props : {\n    requestString :  String\n  },\n \n  data () {\n    return {\n      currentQuery       : this.requestString,\n      requestBusy        : false,\n      requestBusyPercent : \"0\",\n      requestBusyEvent   : \"\",\n      filterProperty     : FilterProperty.TO,\n    }\n  },\n   \n  watch : {\n    requestBusy : 'prepareRequestBusy',\n    \n    requestBusyPercent : 'prepareRequestBusy',\n\n    requestString() {\n      this.currentQuery = this.requestString\n    }\n\n  } ,\n\n  created() {\n  },\n  \n  mounted() {\n  },\n\n  computed : {\n  },\n\n  methods: {\n    \n    prepareRequestBusy() {\n      if (!this.requestBusy || this.requestBusyPercent == \"100\") {\n        this.requestBusyPercent = \"0\"\n        this.requestBusyEvent = \"\"\n      }\n    },\n\n    updateQuery(value : string) {\n      this.currentQuery = value\n      this.$emit('updateRequestManager',this.currentQuery)\n    },\n\n    attributeBoxEvent(e: string) {\n      console.log(\"attributeBoxEvent:\",e)\n    },\n  }\n})\n\nexport default class QueryBuilderPanel extends Vue {\n\n}\n\n</script>\n\n<style>\n.modal-body{\n    max-height: calc(100vh - 200px);\n    overflow-y: auto;\n}\n</style>\n","\n<!-- \n\n  Implementation AskOmics Visualization inside a Web Component\n  https://github.com/askomics/flaskomics/blob/dev/askomics/react/src/routes/query/visualization.jsx \n\n-->\n<template>\n  <div id=\"query-graph-panel\" :class=\"canvasClass\">\n    <canvas id=\"canvas-askomics-graph\" :width=\"width\" :height=\"height\" disabled> </canvas>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport * as d3 from 'd3';\nimport Utils from '@/ts/utils'\nimport RequestManager from '@/ts/RequestManager'\nimport UserIncrementManager from '@/ts/UserIncrementManager'\nimport { ObjectState, LinkType, FilterProperty, AskOmicsViewNode, AskOmicsViewLink } from '@/ts/types';\n\n\n@Options({\n  name: \"QueryGraphPanel\",\n  \n  emits: [\"updateRequestManager\",\"requestManagerBusy\",\"requestManagerBusyEvent\",\"requestManagerBusyPercent\"],\n  \n  components : {  },\n  \n  props: {\n    requestString   : {\n                        type: String,\n                        required: true\n                      },\n    filterProperty   : FilterProperty,\n    width           : Number,\n    height          : Number,\n  },\n\n  data () {\n    return {\n      ctrlKey: false,\n      canvas: null,\n      ctx: null,\n      color: d3.scaleOrdinal([\"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]),\n      zoom : 5,\n      zoomTime : 1000,\n      trans : d3.zoomIdentity,\n      colorGrey : '#808080',\n      colorDarkGrey : '#404040',\n      colorFirebrick : '#cc0000',\n      lineWidth : 2.5,\n      nodeSize : 17,\n      textSize : 12,\n      blankNodeSize : 1,\n      arrowLength : 40,\n      forceCollide: 40,\n      strengthForce: 1.0,\n      strengthForceManBody: -2000,\n      alphaTarget : 0,\n      canvasClass : \"\",\n      nodesSimulation : [],\n      linksSimulation : [],\n      request      : null,\n      selectedNodeCanvas : null\n    }\n  },\n\n  mounted() {\n  \n    if (this.requestString) {\n      this.request = new RequestManager(this.requestString,this)\n      \n      this.setUpSimulation();\n      this.refreshSimulation()\n\n    } else {\n      alert(\"requestString is not set.\")\n    }\n    \n  },\n  \n  beforeDestroy() {\n  },\n\n  watch: {\n    requestString() {\n      this.request = new RequestManager(this.requestString,this)\n      this.refreshSimulation()\n      this.simulation.restart()\n    },\n    \n    filterProperty() {\n      this.refreshSimulation()\n      this.simulation.restart()\n    }\n    \n  },\n  \n  methods: {\n    \n    selectedNode() {\n      return this.request.getGraph().nodes.filter( (n : AskOmicsViewNode) => n.state_n == ObjectState.SELECTED ).pop() \n    } ,\n\n    setUpSimulation() {\n\n        /**\n         * Managing CANVAS\n         */\n      \n      this.canvas = d3.select(\"#canvas-askomics-graph\")\n      this.ctx = this.canvas.node().getContext(\"2d\");\n\n      this.simulation = d3\n          .forceSimulation()\n          .force(\"x\",d3.forceX(this.width/2).strength(this.strengthForce) )\n          .force(\"y\",d3.forceY(this.height/2).strength(this.strengthForce) )\n          .force(\"collide\",d3.forceCollide(this.nodeSize+this.forceCollide))\n          .force(\"charge\", d3.forceManyBody().strength(this.strengthForceManBody))\n       //   .force(\"center\", null)\n         ;\n              \n      this.simulation.on(\"tick\", this.updateSimulation);\n\n      this.canvas\n        .on(\"click\", this.canvasClick)\n        .call(d3.drag()\n            .container(this.canvas.node())\n            .subject(this.dragsubject)\n            .on(\"start\", this.dragstarted)\n            .on(\"drag\", this.dragged)\n            .on(\"end\", this.dragended)\n          )\n        /*.call(\n          d3.zoom()\n              .extent([[0, 0], [this.width, this.height]])\n              .scaleExtent([1, 8])\n              .on(\"zoom\", this.zoomed)\n          )*/\n          ;\n    },\n\n    refreshSimulation() {\n      this.setObjectsSimulation()\n      this.updateSimulation()\n    },\n\n    setObjectsSimulation() {\n      \n      this.nodesSimulation = this.request.getGraph().nodes.map(\n        (node : AskOmicsViewNode) => {\n          const isNode = ( x : AskOmicsViewNode )=> x.id === node.id \n          const idxSimulation = this.nodesSimulation.findIndex( isNode )\n          if ( idxSimulation>=0 ) {\n            node.x = this.nodesSimulation[idxSimulation].x\n            node.y = this.nodesSimulation[idxSimulation].y\n          }\n          return node\n        } \n      )\n      \n      this.linksSimulation = this.request.getGraph().links.map(\n        (link : AskOmicsViewLink ) => {\n          const isLink = ( x : AskOmicsViewLink )=> x.id === link.id \n          const idxSimulation = this.linksSimulation.findIndex( isLink )\n          if ( idxSimulation>=0 ) {\n            link.x = this.linksSimulation[idxSimulation].x\n            link.y = this.linksSimulation[idxSimulation].y\n            link.vx = this.linksSimulation[idxSimulation].x\n            link.vy = this.linksSimulation[idxSimulation].y\n          }\n          return link\n        } \n      )\n     \n    },\n        \n    updateSimulation() {\n      \n      this.ctx.clearRect(0,0,this.width, this.height);\n      this.ctx.fillStyle = \"Gainsboro\";\n      this.ctx.fillRect(0,0,this.width,this.height);\n\n      this.ctx.beginPath();\n      this.ctx.globalAlpha = 1.0;\n      this.ctx.strokeStyle = \"#aaa\";\n\n      this.linksSimulation.forEach(this.drawLink);\n      this.ctx.stroke();\n\n      this.ctx.globalAlpha = 1.0;\n      this.nodesSimulation.forEach(this.drawNode);\n      \n\n      this.simulation.nodes(this.nodesSimulation);\n      this.simulation\n              .force(\"link\", d3.forceLink().id(function (d : any ) { return d.id; }))\n              .force(\"link\").links(this.linksSimulation)\n        \n        //this.simulation.restart()\n\n    },\n\n    zoomed(event : any) {\n      this.ctx.translate(event.transform.x, event.transform.y); \n      this.ctx.scale(event.transform.k, event.transform.k);\n    },\n    \n    dragsubject(event : any) {\n        return this.simulation.find(event.x, event.y);\n    },\n\n    /**\n     * Interaction with user actions\n     */\n    \n    canvasClick(event : any) {\n      \n      /* Find Selected Object */\n      let rect = this.canvas.node().getBoundingClientRect();\n      this.selectedNodeCanvas = this.simulation.find(event.x - rect.left, event.y - rect.top,this.nodeSize);\n      \n      if ( !this.selectedNodeCanvas || this.selectedNodeCanvas.state_n != ObjectState.SELECTED) {\n         // if ctrl released \n        if ( ! event.ctrlKey ) this.request.setGraph(UserIncrementManager.releaseSelectedObject(this.request.getGraph()))\n\n        this.updateGraph(this.selectedNodeCanvas)\n        this.$emit('updateRequestManager',this.request.serialized())\n      }\n      \n    },\n    /**\n     * usefull to update canavs when requestManager change his internal state\n     */\n    updateGraph(selectedNodeCanvas : AskOmicsViewNode) {\n      \n      /**\n       * Nothing is selected with go out and remove selection */ \n      if (! selectedNodeCanvas ) {\n        console.debug(\" ---  UNSELECTED NODE / updateGraph/UserIncrementManager.removeSuggestion --- \")\n        this.request.setGraph(UserIncrementManager.removeSuggestion(this.request)) \n        this.request.setFocusRoot()\n        this.refreshSimulation()\n      } else {\n        \n        const creation_node = selectedNodeCanvas.state_n == ObjectState.SUGGESTED\n\n        /**----------------------------------------------------------------------------\n         * Creation Node/Links  \n         */\n        console.debug(\" ---  SELECTED NODE / updateGraph/UserIncrementManager.setShapeNode --- \")\n        this.request.setGraph(UserIncrementManager.setShapeNode(this.request,selectedNodeCanvas))\n       \n        /**----------------------------------------------------------------------------\n         * Remove Suggestion unused\n         */\n        console.debug(\" ---  SELECTED NODE / updateGraph/UserIncrementManager.removeSuggestion --- \")\n        this.request.setGraph(UserIncrementManager.removeSuggestion(this.request))\n\n        /* save session */\n        if (creation_node) this.request.push()\n\n        /**-----------------------------------------------------------------------------\n         *  suggestions management\n         * \n         **/\n\n        this.display_suggestions();\n      }\n\n    },\n\n  display_suggestions( ) {\n    \n    /* proposes suggestion only if defined */\n    if (! this.selectedNode() )\n      return \n\n      /* add new suggestions */\n    \n      let component = this\n      component.canvasClass = \"query-graph-panel-disabled\"\n      \n      let ArrayPromises : Array<Promise<[Object[],Object[]]>> = []\n\n      switch (this.filterProperty) {\n        case FilterProperty.ALL : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeForward(this,this.request,this.selectedNode()),\n              UserIncrementManager.clickNodeBackward(this,this.request,this.selectedNode())\n            ]\n          break\n        }\n        case FilterProperty.TO : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeForward(this,this.request,this.selectedNode()),\n            ]\n          break\n        }\n        case FilterProperty.FROM : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeBackward(this,this.request,this.selectedNode())\n            ]\n          break\n        }\n         case FilterProperty.IS_A : {\n          ArrayPromises = []\n          break\n        }\n      }\n      \n      Promise.all(ArrayPromises).then(nodesAndLinksArray =>{\n\n          let nodes = component.request.getGraph().nodes \n          let links = component.request.getGraph().links \n          \n          for ( let nodesAndLinks of nodesAndLinksArray ) {\n            nodes = nodes.concat(nodesAndLinks[0]) \n            links = links.concat(nodesAndLinks[1])\n          }\n          \n          component.request.setGraph( \n              { nodes : nodes , links : links }\n              );\n\n          component.canvasClass = \"\"\n          \n      }).catch( e => {\n        alert(e)\n      })\n      .finally(function() {\n        /* save session to back old step */\n        component.canvasClass = \"\"\n        component.refreshSimulation()\n      }) \n    },\n    \n    dragstarted(event : any) {\n     \n      if (!event.active) this.simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    },\n\n    dragged(event : any) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    },\n    dragended(event : any) {\n        if (!event.active) this.simulation.alphaTarget(0);\n        event.subject.fx = null;\n        event.subject.fy = null;\n      },\n    \n    IntersectionCoordinate (x1 : number , y1 : number, x2 : number, y2 : number, r : number) {\n        let theta = Math.atan((y2 - y1) / (x1 - x2))\n        let x\n        let y\n        if (x1 < x2) {\n          x = x1 + r * Math.cos(theta)\n          y = y1 - r * Math.sin(theta)\n        } else {\n            x = x1 - r * Math.cos(theta)\n            y = y1 + r * Math.sin(theta)\n          }\n          return { x: x, y: y }\n        },\n    middleCoordinate (x1 : number, y1 : number, x2 : number, y2 : number) {\n        let theta = Math.atan((y2 - y1) / (x1 - x2))\n        let x\n        let y\n        if (x1 < x2) {\n          x = x1 + (this.nodeSize * 4) * Math.cos(theta)\n          y = y1 - (this.nodeSize * 4) * Math.sin(theta)\n        } else {\n          x = x1 - (this.nodeSize * 4) * Math.cos(theta)\n          y = y1 + (this.nodeSize * 4) * Math.sin(theta)\n        }\n        return { x: x, y: y }\n      },\n\n    triangleCoordinate (x1 : number, y1 : number, x2 : number, y2 : number, headlen : number) {\n      let theta = Math.atan2(y1 - y2, x1 - x2)\n\n      let xa = x1 - headlen * Math.cos(theta - Math.PI / 14)\n      let ya = y1 - headlen * Math.sin(theta - Math.PI / 14)\n\n      let xb = x1 - headlen * Math.cos(theta + Math.PI / 14)\n      let yb = y1 - headlen * Math.sin(theta + Math.PI / 14)\n\n      return {\n        xa: xa,\n        ya: ya,\n        xb: xb,\n        yb: yb\n      }\n    },\n\n    drawNode(node : AskOmicsViewNode) {\n     // console.log(JSON.stringify(node))\n      let unselectedColor = this.colorGrey\n      let unselectedColorText = this.colorDarkGrey\n      \n      this.ctx.fillStyle = node.uri ? Utils.stringToHexColor(node.uri) : \"#faaafff\" ;\n      \n      this.ctx.lineWidth = this.lineWidth ;\n\n      this.ctx.strokeStyle = node.state_n == ObjectState.SELECTED ? this.colorFirebrick : unselectedColor ;\n      this.ctx.globalAlpha = node.state_n == ObjectState.SUGGESTED ? 0.5 : 1 ;\n      node.state_n == ObjectState.SUGGESTED ? this.ctx.setLineDash([this.lineWidth, this.lineWidth]) : this.ctx.setLineDash([]);\n\n      // draw node\n      this.ctx.beginPath();\n      this.ctx.arc(node.x, node.y, this.nodeSize, 0, 2 * Math.PI, false);\n      this.ctx.stroke();\n      this.ctx.fill();\n      this.ctx.closePath();\n      // draw text\n      this.ctx.beginPath();\n      this.ctx.fillStyle = unselectedColorText;\n      this.ctx.font = this.nodeSize + 'px Sans-Serif';\n      this.ctx.textAlign = 'middle';\n      this.ctx.textBaseline = 'middle';\n      let label = node.label\n      this.ctx.fillText(label, node.x + this.nodeSize, node.y + this.nodeSize);\n      this.ctx.closePath();\n    },\n    /**\n     * Note . Link could not be of AskOmicsViewLink because \n     *  target and source are node identifier in the definition \n     *  but, at this step, there are of AskOmicsViewNode type.\n     * \n     */\n    drawLink(link : any) {\n      link.state_n == ObjectState.SUGGESTED ? this.ctx.setLineDash([this.lineWidth, this.lineWidth]) : this.ctx.setLineDash([]);\n      let unselectedColor = this.colorGrey\n      let unselectedColorText = this.colorDarkGrey\n      \n      this.ctx.strokeStyle = link.state_n == ObjectState.SELECTED ? this.colorFirebrick : unselectedColor\n      this.ctx.fillStyle = link.state_n == ObjectState.SELECTED ? this.colorFirebrick : this.colorGrey\n      this.ctx.globalAlpha = link.state_n == ObjectState.SUGGESTED ? 0.3 : 1\n      this.ctx.lineWidth = this.lineWidth\n      \n      const target = link.target\n      const source = link.source \n\n      this.ctx.beginPath();\n      let c = this.IntersectionCoordinate(source.x, source.y, target.x, target.y, this.nodeSize)\n      this.ctx.moveTo(c.x, c.y);\n      c = this.IntersectionCoordinate(target.x, target.y, source.x, source.y, this.nodeSize)\n      this.ctx.lineTo(c.x, c.y);\n      this.ctx.stroke();\n      this.ctx.closePath();\n\n      \n\n       // draw arrow\n       if (link.type == LinkType.FORWARD_PROPERTY || link.type == LinkType.BACKWARD_PROPERTY) {\n          this.ctx.beginPath()\n          let triangle = this.triangleCoordinate(target.x, target.y, source.x, source.y, this.arrowLength)\n          this.ctx.moveTo(c.x, c.y)\n          this.ctx.lineTo(triangle.xa, triangle.ya)\n          this.ctx.lineTo(triangle.xb, triangle.yb)\n          this.ctx.fill()\n          this.ctx.closePath()\n       }\n      // draw text\n        this.ctx.beginPath()\n        this.ctx.fillStyle = unselectedColorText\n        this.ctx.font = this.textSize + 'px Sans-Serif'\n        this.ctx.textAlign = 'middle'\n        this.ctx.textBaseline = 'middle'\n        let m = this.middleCoordinate(source.x, source.y, target.x, target.y)\n        this.ctx.fillText(link.label, m.x, m.y)\n        this.ctx.closePath()\n   }\n    \n  }\n})\n\nexport default class QueryGraphPanel extends Vue {\n\n}\n\n</script>\n\n<style>\n\n.query-graph-panel-disabled {\n    cursor: not-allowed;\n    pointer-events: none;\n}\n</style>\n","import { SWDiscoveryConfiguration, SWDiscovery, URI, SWTransaction} from '@p2m2/discovery'\nimport { LinkType, AskOmicsGenericNode, \n         AskOmicsViewNode, AskOmicsViewLink, NodeType, \n         ObjectState, AskOmicsViewAttributes, Graph3DJS, UserConfiguration, AttributeOperator } from './types'\nimport StrategyRequestAbstract from \"./StrategyRequestAbstract\"\nimport StrategyRequestAskOmics from \"./StrategyRequestAskOmics\"\nimport StrategyRequestDataDriven from \"./StrategyRequestDataDriven\"\nimport Utils from './utils'\nimport { Vue } from 'vue-class-component'\n\n/**\n * Trick . TS inser SWDiscovery inside a Proxy type. Exception occurs whith the first use.\n */\nlet discovery_map : Map<number,any> ;\n\nfunction getDiscovery(id : number) : any {\n    const d = discovery_map.get(id);\n    if ( d )\n        return d ;\n    return new SWDiscovery();\n}\n\n/**\n * end trick\n */\n\n let history          : Array<String>           = []\n let idx_history      : number                  = -1 \n\nexport default class RequestManager {\n    static idCounter : number                  = 0 ;\n    id               : number                  = RequestManager.idCounter++;\n    strategy_str     : string                  = \"\" ;\n    strategy         : StrategyRequestAbstract = new StrategyRequestDataDriven();\n    discovery        : any                     = null ;\n    vue              : Vue                      ;\n   \n    constructor(requestManagerStringify : string, vue : Vue) {\n        if ( !discovery_map ) {\n            discovery_map =  new Map<number,any>() ;\n        }\n\n        this.vue = vue \n        this.parse(requestManagerStringify)\n        \n    }\n    \n    parse( serializedDiscovery : string ) {\n        \n        if (! serializedDiscovery || serializedDiscovery.length<=0) {\n            throw new Error(\"Non string to parse !\")\n        }\n        \n        if (serializedDiscovery && serializedDiscovery.length>0) {\n            this.setDiscovery(SWDiscovery().setSerializedString(serializedDiscovery))\n        } else {\n            this.clear()\n        }\n\n         /* to manage configuration managing by the current interface */\n         this.setConfiguration(this.getConfiguration())\n    }\n\n    static defaultGraph(focus: string)  : any {\n        return {\n            nodes : [AskOmicsViewNode.something(ObjectState.CONCRETE,focus)],\n            links : []\n        }\n    }\n\n\n    serialized() : string {\n        return this.getDiscovery().getSerializedString()\n    }\n\n    clear() {       \n        const config = this.getConfiguration()\n\n        this.setDiscovery(\n            SWDiscovery(SWDiscoveryConfiguration.setConfigString(config.jsonConfigurationSWDiscoveryString()))\n            .root()\n            .setDecoration(\"configuration\",JSON.stringify(config))\n            .setDecoration(\"graph\",JSON.stringify(RequestManager.defaultGraph(\"start\")))\n            .something(\"start\")\n            .setDecoration(\"label\",\"Something\")\n            .setDecoration(\"attributes\",JSON.stringify({}))\n            .root())\n\n\n        history                     = []\n        idx_history                 = -1 \n\n        this.push()\n    }\n\n    /* get a default Request Manager */\n    static getDefault(config : UserConfiguration, vue : Vue) : RequestManager {\n        \n        //alert(config.jsonConfigurationSWDiscoveryString())\n\n        return new RequestManager(\n            SWDiscovery(SWDiscoveryConfiguration.setConfigString(config.jsonConfigurationSWDiscoveryString()))\n            .root()\n            .setDecoration(\"configuration\",JSON.stringify(config))\n            .setDecoration(\"graph\",JSON.stringify(this.defaultGraph(\"start\")))\n            .something(\"start\")\n            .setDecoration(\"label\",\"Something\")\n            .setDecoration(\"attributes\",JSON.stringify({}))\n            .root()\n            .getSerializedString(),vue)\n    }\n\n    setConfiguration(config : UserConfiguration) {\n        const current_focus =  this.getDiscovery().focus()\n        this.setDiscovery(\n            this.getDiscovery()\n            .setConfig(SWDiscoveryConfiguration.setConfigString(config.jsonConfigurationSWDiscoveryString()))\n            .root()\n            .setDecoration(\"configuration\",JSON.stringify(config))\n            .focus(current_focus)\n            )\n        \n        switch(config.strategy) {\n            case \"askomics\" : {\n                this.strategy = new StrategyRequestAskOmics() ;\n                break\n            }\n            case \"data-driven\" : {\n                this.strategy = new StrategyRequestDataDriven() ;\n                break\n            }\n            default : {\n                console.warn(\"strategy unknown : \"+this.strategy_str)\n                this.strategy = new StrategyRequestDataDriven() ;\n            }\n        }\n\n    }\n\n    getConfiguration() : UserConfiguration {\n        return UserConfiguration.build(JSON.parse(this.getDiscovery().root().getDecoration(\"configuration\")))\n    }\n\n     /**\n     * History session management with push, forward, back\n     * \n     */\n      push() {\n        if ( idx_history>0 ) {\n            history = history.slice(0,idx_history+1)\n        }\n\n        /* remove all suggested stuff t*/\n        const rm = new RequestManager(this.serialized(),this.vue)\n        const g = rm.getGraph()\n        g.nodes = g.nodes\n                   .filter( n => (n.state_n == ObjectState.CONCRETE || n.state_n == ObjectState.SELECTED ) )\n                   .map( n => { n.state_n = ObjectState.CONCRETE ; return n  })\n\n        g.links = g.links\n                   .filter( l => (l.state_n == ObjectState.CONCRETE || l.state_n == ObjectState.SELECTED ) )\n                   .map( l => { l.state_n = ObjectState.CONCRETE ; return l  })\n        \n        rm.setGraph(g)\n        idx_history = history.push(rm.serialized()) -1\n    }\n\n    static forwardIsActive() {\n        return idx_history < history.length-1\n    }\n\n    static forward() : String {\n        if ( RequestManager.forwardIsActive() ) {\n            idx_history = idx_history + 1\n            return history[idx_history]\n        } else {\n            throw Error(\"Can not pop a discovery session.\")\n        }\n    }\n\n    static backwardIsActive() {\n        console.log(idx_history)\n        return idx_history > 0\n    }\n\n\n    static backward() : String {\n        \n        if ( RequestManager.backwardIsActive() ) {\n            idx_history = idx_history - 1\n            return history[idx_history]\n        } else {\n            throw Error(\"Can not pop a discovery session.\")\n        }\n\n    }\n    \n    setGraph(graph : Object) {\n        const focus : string = this.getDiscovery().focus()\n        \n        this.setDiscovery(\n                    this.getDiscovery()\n                    .root()\n                    .setDecoration(\"graph\",JSON.stringify(graph))\n                    .focus(focus)\n                    )\n        this.vue.$emit('updateRequestManager',this.serialized())\n    }\n\n\n    getGraph() : Graph3DJS {\n        return JSON.parse(this.getDiscovery().root().getDecoration(\"graph\"))\n    }\n\n    setDiscovery(disco : any) : void  { \n        discovery_map.set(this.id,disco) \n        \n    } \n\n    getDiscovery() : any { return getDiscovery(this.id) }\n\n    setNewNodeWithLink(node : AskOmicsViewNode, link : AskOmicsViewLink ) : string {\n        const snd_node_id = link.source == node.id ? link.source : link.target\n        const snd_node : AskOmicsViewNode = this.getGraph().nodes.filter( x => x.id == snd_node_id).pop()!\n        const d : any = this.getDiscovery()\n        d.console()\n        switch(link.type) { \n            case LinkType.FORWARD_PROPERTY: { \n                this.setDiscovery(\n                    d.isSubjectOf(new URI(link.uri))\n                    .setDecoration(\"label\",node.label)\n                    .setDecoration(\"attributes\",JSON.stringify({}))\n                    .isA(new URI(snd_node.uri)))\n                \n                break;\n\n            } \n            case LinkType.BACKWARD_PROPERTY: { \n                this.setDiscovery(\n                    d\n                    .isObjectOf(new URI(link.uri))\n                    .setDecoration(\"label\",node.label)\n                    .setDecoration(\"attributes\",JSON.stringify({}))\n                    .isA(new URI(snd_node.uri)))\n               \n               break; \n            } \n            case LinkType.IS_A: { \n                this.setDiscovery(\n                    d\n                    .isA(new URI(snd_node.uri))\n                    //TODO\n                    //.decorate(\"node\",JSON.stringify(AskOmicsViewNode.build(node)))\n                    )\n               break; \n            } \n            default: { \n               console.error(\"unkown action :\"+JSON.stringify(link))\n               break; \n            } \n         }\n\n         return this.getDiscovery().focus() \n    }\n\n\n    /** CONFIGURATION */\n    setPageSize(numberOfResults : number) {\n        const config : UserConfiguration = this.getConfiguration()\n        config.pageSize = numberOfResults\n        this.setConfiguration(config)\n    }\n   \n    focusIsSelected() : boolean {\n        return ( this.getFocus() != this.getDiscovery().root().focus() ) \n    }\n\n    isFocusStart() : boolean {\n        return ( this.getFocus() == \"start\" ) \n    }\n\n    getFocus() : string {\n        return this.getDiscovery().focus() ;\n    }\n\n    setFocusRoot() : void {\n        const disco = this.getDiscovery().root() ;\n        this.setDiscovery(disco);\n    }\n\n    setFocus(focus : string) : void {\n        const disco = this.getDiscovery().focus(focus)\n        this.setDiscovery(disco);\n    }\n\n    checkVariablePresent(response : any ,index : number ,listVarName : string[] ) : Boolean {\n        for (let i=0;i<listVarName.length;i++) {\n            const varname = listVarName[i]\n            if ( ! response.results.bindings[index][varname] ) {\n                console.warn(\" probleme with entry : \"+JSON.stringify(response.results.bindings[index]))\n                return false\n            }\n        }\n        \n        return true\n    }\n\n    /**\n     * A node is removable if he is connected with only oldest node.\n     * Otherwise user have to remove all newest node before this node\n     */\n    removableNode() : Boolean {\n        \n        if ( !( this.focusIsSelected() && !this.isFocusStart())) \n            return false \n\n        const g = this.getGraph()\n        const nodeFocus  = g.nodes.filter( n => n.focus == this.getDiscovery().focus()).pop()!\n        \n        const cond = (l : AskOmicsViewLink ) => \n        ( (l.source == nodeFocus.id) && ( Number(l.target)<Number(nodeFocus.id)) ) || \n        ( (l.target == nodeFocus.id) && ( Number(l.source)<Number(nodeFocus.id)) ) \n        \n\n        return g.links\n                  .filter(l=> l.state_n == ObjectState.CONCRETE)\n                  .filter(l => (l.source == nodeFocus.id)||(l.target == nodeFocus.id) )\n                  .every( cond )\n    }\n\n    remove_node_graph( graph : Graph3DJS, idx_node : string | undefined ) : Graph3DJS {\n\n        if ( !idx_node ) return graph\n\n        const g : Graph3DJS = { nodes : [], links : [] }\n\n        const neighbours = \n            graph.links.filter(link => (link.source == idx_node)||(link.target == idx_node) )\n                       .filter( link => (link.source != \"1\")&&(link.target != \"1\") ) /* tricks to avoid to remove Something node */\n                       .map( link => { \n                           if ( link.source == idx_node ) { \n                               return link.target \n                            } else { \n                               return link.source\n                            } })\n\n        /* remove links */\n        g.links = graph.links.filter( link => (link.source != idx_node)&&(link.target != idx_node) )\n        /* remove node  */\n        g.nodes = graph.nodes.filter( n => (n.id != idx_node) )\n        \n        /* check if link exist with neighbours. if none remove node ! */\n        const nodesWithExistingLinks = g.links.flatMap( l => [l.source,l.target] )\n        g.nodes = g.nodes.filter( n => ! ( neighbours.includes(n.id)&& (!nodesWithExistingLinks.includes(n.id) ) ))\n        \n        return g\n    }\n\n    removeNode(vue : Vue) {\n        if ( this.focusIsSelected() ) {\n            const focus = this.getDiscovery().focus()\n            \n            //alert(this.getDiscovery().root().getDecoration(\"graph\"))\n            \n            const id_node_rem = this.getGraph().nodes.filter( n => n.focus == focus ).map( n => n.id).pop()\n            const g = this.remove_node_graph(this.getGraph(),id_node_rem)\n            \n            this.setDiscovery(this.getDiscovery().remove(this.getDiscovery().focus()).root()) ;\n\n            this.setGraph(g)\n            \n            this.push()\n\n            this.vue.$emit('updateRequestManager',this.serialized())\n        } else {\n            console.warn(\"None node is selected !\")\n        }\n    }\n\n    updateAttribute(attribute :AskOmicsViewAttributes) {\n\n        if(!this.getDiscovery().getDecoration(\"attributes\")) {\n            alert(\"Bad definition of decorations : \"+this.getDiscovery().getDecoration(\"attributes\"))\n            return\n        }\n        \n        const map = JSON.parse(this.getDiscovery().getDecoration(\"attributes\"))\n        \n        map[attribute.uri] = attribute\n        \n        /** ON PEUT PAS ENCORE SUPPRIMER UN DATATYPE */\n\n        if ( attribute.visible && attribute.uri != \"uri\") {\n            this.getDiscovery().remove(attribute.id)\n            this.setDiscovery(this.getDiscovery().datatype(attribute.uri,attribute.id))\n        } else {\n            this.getDiscovery().remove(attribute.id)\n        }\n        \n        const focus = this.getDiscovery().focus()\n\n    \n        if ( attribute.filterValue.length>0) {\n            let disco = this.getDiscovery()\n\n            if ( attribute.range != \"uri\") {\n                /**\n                 * Create a new node for the uri property\n                 */\n                disco = disco.remove(attribute.id+\"_node\")\n                disco = disco.focus(focus)\n                disco = disco.isSubjectOf(attribute.uri,attribute.id+\"_node\")\n            } else {\n                /**\n                 * filtering on the current object!!!!\n                 */\n            }\n\n            switch ( attribute.operator ) {\n                case AttributeOperator.CONTAINS : {\n                    this.setDiscovery(disco.filter.contains(attribute.filterValue))\n                    break\n                }\n                /*\n                case AttributeTypeSearch.REGEXP : {\n                    this.setDiscovery(disco.filter.regex(attribute.filterValue))\n                    break\n                }*/\n                case AttributeOperator.STREQUAL : {\n                    this.setDiscovery(disco.filter.equal(attribute.filterValue))\n                    break\n                }\n                case AttributeOperator.STRSTARTS : {\n                    this.setDiscovery(disco.filter.strStarts(attribute.filterValue))\n                    break\n                }\n                case AttributeOperator.STRENDS : {\n                    this.setDiscovery(disco.filter.strEnds(attribute.filterValue))\n                    break\n                }\n                \n                case AttributeOperator.EQUAL : {\n                    this.setDiscovery(disco.filter.equal(attribute.filterValue))\n                    break\n                }\n\n                case AttributeOperator.NOTEQUAL : {\n                    this.setDiscovery(disco.filter.notEqual(attribute.filterValue))\n                    break\n                }\n\n                case AttributeOperator.INF : {\n                    this.setDiscovery(disco.filter.inf(attribute.filterValue))\n                    break\n                }\n                case AttributeOperator.INFEQUAL : {\n                    this.setDiscovery(disco.filter.infEqual(attribute.filterValue))\n                    break\n                }\n                case AttributeOperator.SUP : {\n                    this.setDiscovery(disco.filter.sup(attribute.filterValue))\n                    break\n                }\n                case AttributeOperator.SUPEQUAL : {\n                    this.setDiscovery(disco.filter.supEqual(attribute.filterValue))\n                    break\n                }\n                default: {\n                    alert(\"AttributeTypeSearch does not exist :\"+attribute.operator)\n                }\n            }\n        } else {\n            if ( attribute.range != \"uri\")\n                this.setDiscovery(this.getDiscovery().remove(attribute.id+\"_node\").focus(focus))\n        }\n\n        this.setDiscovery(\n            this.getDiscovery()\n            .focus(focus)\n            .setDecoration(\"attributes\",JSON.stringify(map))\n            )\n\n      \n        this.push()\n        this.vue.$emit('updateRequestManager',this.serialized())    \n    }\n\n    attributeList(focus: string) : Promise<AskOmicsViewAttributes[]> {\n        const currentRm = this ;\n\n        return new Promise((successCallback, failureCallback) => {\n            if (this.strategy) {\n                this.strategy.attributeList(this.getDiscovery(),focus) \n                //.console()\n                .select(\"property\",\"labelProperty\")\n                .distinct()\n                .commit()\n                .raw()\n                .then(\n                    (response : any) => {\n                        //console.log(response)\n                        const results : AskOmicsViewAttributes[] = []\n                        \n                        const m : Map<string,string> = new Map()\n                        for (let i=0;i<response.results.bindings.length;i++) {\n                            if ( ! this.checkVariablePresent(response,i,['property']) ) continue\n                            const uri   : string = response.results.bindings[i][\"property\"].value;\n                          /*\n                            TODO : Discovery => wait for \"bind.datatype\" feature\n\n                            let range : string \n                          \n                            if (response.results.bindings[i][\"range\"]) {\n                                range = response.results.bindings[i][\"range\"].value;\n                                console.log(\"RANGE:\"+range);\n                            } */\n                                \n\n                            let label   : string = Utils.splitUrl(uri)  ;\n                            try {\n                                const listLabelEntity = response.results.datatypes[\"labelProperty\"][uri] ;\n                                if ( listLabelEntity )\n                                    label=listLabelEntity[0].value; \n                            } catch (error) {\n                                failureCallback(error);\n                            }     \n\n                            m.set(uri,label)\n                        }\n                        /**\n                         * add current seetings with attributes to have possibility to remove/change filter\n                         * \n                         */\n                       \n                        const mapFilterAttributes = JSON.parse(this.getDiscovery().getDecoration(\"attributes\"))\n                       \n                        for ( const k of Object.keys(mapFilterAttributes)) {\n                            results.push(mapFilterAttributes[k])\n                        }\n                        \n                        if (! Object.keys(mapFilterAttributes).includes(\"uri\")) {\n                            results.unshift(new AskOmicsViewAttributes(\"uri\",0,\"uri\",\"uri\",\"URI\"))\n                        }\n\n                        if ( this.strategy && m.size>0) {\n                            const lUris : string[] = []\n                            for (const key of m.keys()) {\n                                lUris.push(key)\n                            }\n\n                            this.strategy.getDatatypes(this.getConfiguration().jsonConfigurationSWDiscoveryString(), lUris)\n                            .then ( (mapPropertyAndRange )=>{\n                                let iCount = 0\n                                lUris.map(\n                                    uriProperty => {\n                                        /* add only if this uri datatype property is not set as a filter */\n                                        if (! Object.keys(mapFilterAttributes).includes(uriProperty)) {\n                                            let label = m.get(uriProperty)\n                                            let range = mapPropertyAndRange.get(uriProperty)\n                                            \n                                            if (!label) label = uriProperty.split(/\\/#/).pop()\n                                            if (!label) label = \"\"\n                                            if (!range) range = \"\"\n                                            \n                                            const id : string = focus+\"_dt_\"+iCount++\n                                            results.push(\n                                                new AskOmicsViewAttributes(id,iCount,uriProperty,range,label)\n                                            )\n                                        }\n                                      \n                                    })\n                                successCallback(results)\n                                \n                            }).catch(e => {failureCallback(e)} )\n                        } else {\n                            successCallback(results)\n                        }  \n                    })\n                .catch( (e : any) => {failureCallback(e)} )}\n        })\n    }\n\n    forwardEntities(vue : Vue, current: AskOmicsViewNode) : Promise<Map<String,AskOmicsGenericNode>> {\n        return this.propertyEntities(vue, NodeType.FORWARD_ENTITY,current)\n    }\n\n    backwardEntities(vue : Vue, current: AskOmicsViewNode) : Promise<Map<String,AskOmicsGenericNode>> {\n        return this.propertyEntities(vue, NodeType.BACKWARD_ENTITY,current)\n    }\n\n    propertyEntities( vue : Vue, type: NodeType, current: AskOmicsViewNode ) : Promise<Map<String,AskOmicsGenericNode>> {\n        return new Promise((successCallback, failureCallback) => {\n            if (this.strategy) {\n                \n                let disco : any = this.getDiscovery()\n                let typeLink : LinkType\n\n                switch(type) { \n                    case NodeType.FORWARD_ENTITY : { \n                        disco = this.strategy.forwardEntities(this.getDiscovery(),this.getConfiguration().jsonConfigurationSWDiscoveryString(),current)\n                        typeLink = LinkType.FORWARD_PROPERTY\n                        break; \n                    } \n                    case NodeType.BACKWARD_ENTITY : { \n                        disco = this.strategy.backwardEntities(this.getDiscovery(),this.getConfiguration().jsonConfigurationSWDiscoveryString(),current)\n                        typeLink = LinkType.BACKWARD_PROPERTY\n                        break; \n                    } \n                    default: { \n                        failureCallback(\"unkown action :\" +type)\n                        return\n                    } \n                 }\n\n                try {\n                    const transaction : any =\n                     disco\n                        //.console()\n                        .select(\"property\",\"entity\",\"labelEntity\",\"labelProperty\")\n                        .limit(20)\n                        .distinct()\n                        .commit()\n                        .progression( (percent : Number) => {\n                            vue.$emit('requestManagerBusyPercent',JSON.stringify(percent))\n\n                        })\n                        .requestEvent( (event : string ) => {\n                            vue.$emit('requestManagerBusyEvent',JSON.stringify(event))\n                        })\n\n                    transaction\n                        .raw()\n                        .then(\n                            (response : any) => {                      \n                                const mR = new Map()\n                                for (let i=0;i<response.results.bindings.length;i++) {\n                                    if ( ! this.checkVariablePresent(response,i,['entity','property']) ) continue\n                                  \n                                    const entity      : string = response.results.bindings[i][\"entity\"].value;\n                                    const property    : string = response.results.bindings[i][\"property\"].value;\n                                    let labelEntity   : string = \"\"  ;\n                                    let labelProperty : string = \"\"  ;\n                                    let n : AskOmicsViewNode ;\n\n                                    if (!mR.has(entity)) {\n                                       \n                                        try {\n                                            const listLabelEntity = \n                                                response.results.datatypes[\"labelEntity\"][entity] ;\n                                            if ( listLabelEntity )\n                                                labelEntity=listLabelEntity[0].value; \n                                        } catch (error) {\n                                            console.warn(error);\n                                        }     \n                                        \n                                        n = new AskOmicsViewNode(entity,labelEntity,type)\n\n                                        mR.set(entity, n) ;\n                                    } else {\n                                        n = mR.get(entity)\n                                    }\n                                    if(! mR.has(entity+property)) {\n                                        try {\n                                            const listLabelEntity = \n                                                response.results.datatypes[\"labelProperty\"][property] ;\n                                            if ( listLabelEntity )\n                                                labelProperty = listLabelEntity[0].value; \n                                        } catch (error) {\n                                            console.warn(error);\n                                        }    \n                                        \n                                        if (typeLink == LinkType.FORWARD_PROPERTY)\n                                            mR.set( entity+property,new AskOmicsViewLink(property,labelProperty,typeLink,current.id,n.id))\n                                        else \n                                            mR.set( entity+property,new AskOmicsViewLink(property,labelProperty,typeLink,n.id,current.id))\n                                    }\n                                }\n                                successCallback(mR);\n                            }\n                        ).catch( (e : Error) => { failureCallback(e) });\n                    } catch ( e ) {\n                        failureCallback(e)\n                    }\n            } else {\n                failureCallback(\"strategy undefined.\")\n            }\n       })\n    }\n    /**\n     * https://github.com/linmasahiro/vue3-table-lite\n     * @returns \n     */\n    getColumnsResults() {\n        const rm = this.getDiscovery() ;\n        const r = rm.browse(\n            (node : any, deep : Number) => { \n          //      try { \n                    const attributes_current_node = []\n                    if( node.decorations && node.decorations.attributes )  {\n                        const attributes : Object = JSON.parse(node.decorations.attributes)\n                        \n                        for (const [key, element ] of Object.entries(attributes)) {\n                            if ( element.visible ) {\n                                if (element.uri != \"uri\") {\n                                    attributes_current_node.push ({\n                                        node_label : node.decorations.label,\n                                        node_id : node.idRef,\n                                        label: element.label,\n                                        field: element.id,\n                                        width: \"3%\",\n                                        sortable: true,\n                                        isKey: false\n                                    })    \n                                } else {\n                                    attributes_current_node.push ({\n                                        node_label : node.decorations.label,\n                                        node_id : node.idRef,\n                                        label: node.decorations.label,\n                                        field: node.idRef,\n                                        width: \"3%\",\n                                        sortable: true,\n                                        isKey: false\n                                    })\n    \n                                }\n                              \n                            } \n                        }\n                       \n                    }\n                   // alert(JSON.stringify(attributes_current_node))\n                    return attributes_current_node\n                //}\n               /* catch (e ) {\n                    console.log(\"pas grave............\")\n                }*/\n                /*\n                if( node.decorations && node.decorations.node ) {\n                   return {\n                    label: node.idRef,\n                    field: node.idRef,\n                    width: \"3%\",\n                    sortable: true,\n                    isKey: false\n                   }\n                }*/\n            })\n            .filter( (value : Array<Object>) => value.length>0 )\n\n        return r.flat() \n\n    }\n\n    getCountAndLaziesPages(numberOfResults : number = 10) {\n        \n        const variables = this.getColumnsResults().flatMap( (value : any) => [value.node_id,value.field] )  \n        const variables_uniq = [...new Set(variables)];\n      \n        this.setPageSize(numberOfResults)\n        \n        return new Promise((successCallback, failureCallback) => {\n            this.getDiscovery()\n               // .console()\n                .selectByPage(...variables_uniq)\n                .then( ( args : any ) => {\n                    successCallback(args)\n                }).catch( (error : string) => {\n                    failureCallback(error)\n                });\n            })\n\n    }\n\n}","import {QueryVariable, SWDiscovery, SWDiscoveryConfiguration, URI} from '@p2m2/discovery'\nimport { AskOmicsViewNode } from './types'\n/* \n - Structure Node \n       {\n            id: Numeric, \n            label: String,\n            uri : String,\n            suggested: Boolean (true), \n            selected: Boolean (false),\n       }\n\n\n- Structure Link    \n        {\n            source    : Numeric,\n            target    : Numeric,\n            label     : String,\n            suggested : Boolean (true), \n            selected  : Boolean (false), \n            directed  : Boolean (true), \n        }\n\n*/\nexport default abstract class StrategyRequestAbstract {\n    \n    constructor() {\n    }\n\n    getDatatypesWithProperty(config_rdf : any,property: string ) : Promise<string[]> {\n       \n        return new Promise((successCallback, failureCallback) => {\n            SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf))\n                .something()\n                    .isSubjectOf(new URI(property),\"valueL\")\n                    .select(\"valueL\")\n                    .limit(5)\n                    .commit()\n                    .raw()\n                    .then(\n                        (response : any) => {\n                                try {\n                                    const t = [...new Set(response.results.bindings.map( (id : any) => id[\"valueL\"].datatype))];\n                                    if(t[0]) {\n                                        successCallback([property,t[0] as string])\n                                    } else {\n                                        // if datatype not defined, by default is string\n                                        successCallback([property,\"xsd:string\"])\n                                    }\n                                } catch(e) {\n                                    failureCallback(e)\n                                }\n                    })\n            })\n    }\n\n    getDatatypes(config_rdf : any,listUriDatatypeProperty: string[] ) : Promise<Map<string,string>> {\n        const listUriDatatypePropertyClean = [...new Set(listUriDatatypeProperty)]\n        const results : Map<string,string> = new Map()\n        return new Promise((successCallback, failureCallback) => {\n            Promise.all(listUriDatatypePropertyClean.map(property => this.getDatatypesWithProperty(config_rdf,property)))\n            .then(\n                allPairPropertyDatatype => {\n                    allPairPropertyDatatype.map(\n                        PropertyDatatype => results.set(PropertyDatatype[0],PropertyDatatype[1])\n                    )\n                    successCallback(results)\n                })\n            .catch(e => { \n                failureCallback(e) \n            } )\n        })\n    }\n\n    abstract attributeList(discovery : any,focus: string) : any\n\n    /* \n    * Structure Node to return\n       {\n            id: Numeric,      /// equiv   uri : String,\n            focus: String, \n            label: String,\n                              /// pas besoin  suggested: Boolean (true), \n            selected: Boolean (false),\n       }\n    * \n    * in uri : String \n    * @return List(Object(node : Node, links : List(Link)))\n    */\n\n    abstract forwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any\n\n    abstract backwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any\n\n}\n\n","\nimport { SWDiscovery,URI, SWDiscoveryConfiguration} from '@p2m2/discovery'\nimport { NodeType, AskOmicsViewNode } from './types'\nimport StrategyRequestAbstract from './StrategyRequestAbstract'\n\n\n\nexport default class StrategyRequestAskOmics extends StrategyRequestAbstract {\n\n    askomics_prefix : string = \"http://askomics.org/internal/\"\n\n    constructor() {\n        super();\n        console.log(\" ============ StrategyRequestAskOmics ============ \") ;\n    }\n\n    attributeList(discovery : any,focus: string) : any {\n        /*\n        let d : any = (new SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf)).something());\n\n        if ( current.type != NodeType.SOMETHING ) d = d.set(new URI(current.uri))*/\n\n        return discovery\n               .focus(focus)\n               .isSubjectOf(new URI(\"rdf:type\"),\"typeFocus\")\n               .isObjectOf(new URI(\"rdfs:domain\"),\"property\")\n                  .isA(\"owl:DatatypeProperty\")\n                  .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelProperty\")\n                    .isSubjectOf(new URI(\"rdfs:range\"),\"range\")\n    }\n\n    forwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n\n        let d : any = (new SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf)).something());\n        \n        if ( current.type != NodeType.SOMETHING ) d = d.set(new URI(current.uri))\n        \n        return d.isObjectOf(new URI(\"rdfs:domain\"),\"property\")\n                      .isA(this.askomics_prefix+\"AskomicsRelation\")\n                      .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelProperty\")\n                    .isSubjectOf(new URI(\"rdfs:range\"),\"entity\")\n                    .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelEntity\")  \n    }\n\n    backwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n        let d : any = (new SWDiscovery(SWDiscoveryConfiguration.setConfigString(config_rdf)).something());\n        \n        if ( current.type != NodeType.SOMETHING ) d = d.set(new URI(current.uri))\n        \n        return d.isObjectOf(new URI(\"rdfs:range\"),\"property\")\n                      .isA(this.askomics_prefix+\"AskomicsRelation\")\n                      .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelProperty\")\n                    .isSubjectOf(new URI(\"rdfs:domain\"),\"entity\")\n                    .datatype(new URI(\"http://www.w3.org/2000/01/rdf-schema#label\"),\"labelEntity\")  \n    }\n}","import {SWDiscovery,URI,QueryVariable,Literal, SWDiscoveryConfiguration} from '@p2m2/discovery'\nimport { AskOmicsViewNode, NodeType } from './types'\n\nimport StrategyRequestAbstract from './StrategyRequestAbstract'\n\n\n\nexport default class StrategyRequestDataDriven extends StrategyRequestAbstract {\n\n    constructor() {\n        super();\n        //console.log(\" ============ StrategyRequestDataDriven ============ \") ;\n    }\n\n    \n\n    attributeList(discovery : any,focus: string) : any {\n    \n      return discovery\n              .focus(focus)\n              .isLinkTo(new QueryVariable(\"value\"),\"property\")\n              .root()\n              .something(\"value\")\n                  .filter.isLiteral\n                    .focus(\"property\")\n                    .datatype(new URI(\"rdfs:label\"),\"labelProperty\")\n                    .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n    }\n\n    forwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n        return discovery\n           .isSubjectOf(new QueryVariable(\"property\"))\n            .isSubjectOf(new URI(\"rdf:type\"),\"entity\")\n             .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n            .datatype(new URI(\"rdfs:label\"),\"labelEntity\")       \n     .focus(\"property\")\n       .filter.not.strStarts(new Literal(\"http://www.w3.org/2002/07/owl#\"))\n       .filter.not.strStarts(new Literal(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"))\n       .filter.not.strStarts(new Literal(\"http://www.w3.org/2000/01/rdf-schema#\"))\n       .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n            .datatype(new URI(\"rdfs:label\"),\"labelProperty\");\n    }\n\n    backwardEntities(discovery : any,config_rdf : string,current: AskOmicsViewNode) : any {\n        return discovery\n            .filter.isUri\n             .isObjectOf(new QueryVariable(\"property\"))\n            \n            .isSubjectOf(new URI(\"rdf:type\"),\"entity\")\n             .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n            .datatype(new URI(\"rdfs:label\"),\"labelEntity\")       \n          .focus(\"property\")\n          .filter.not.strStarts(new Literal(\"http://www.w3.org/2002/07/owl#\"))\n          .filter.not.strStarts(new Literal(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"))\n          .filter.not.strStarts(new Literal(\"http://www.w3.org/2000/01/rdf-schema#\"))\n          .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n            .filter.not.strStarts(new Literal(\"http://www.openlinksw.com/\"))\n                    .datatype(new URI(\"rdfs:label\"),\"labelProperty\");\n    }\n}","import { ObjectState , Graph3DJS, AskOmicsViewNode, AskOmicsViewLink } from './types'\nimport RequestManager from './RequestManager'\nimport { Vue } from 'vue-class-component'\n\nexport default class UserIncrementManager {\n\n    static releaseSelectedObject(graph : Graph3DJS) : Graph3DJS {\n\n        graph.nodes = graph.nodes.map( n => { \n            if (n.state_n == ObjectState.SELECTED) n.state_n = ObjectState.CONCRETE ;\n            return n\n        })\n        graph.links = graph.links.map( l => { \n            if (l.state_n == ObjectState.SELECTED) l.state_n = ObjectState.CONCRETE ;\n            return l\n        })\n\n        return graph\n    }\n    /*\n\n    static setSelectedNode(graph : Graph3DJS, select : AskOmicsViewNode ) : Graph3DJS {\n        if ( select ) {\n            graph.nodes = graph.nodes.map( n => { \n                if (n.id == select.id) n.state_n = ObjectState.SELECTED ;\n                return n\n            })\n        }\n\n        return graph\n    }*/\n\n    static clickNodeForward( vue : Vue, request : RequestManager ,  n: AskOmicsViewNode ) : Promise<[Object[],Object[]]> {\n            \n        vue.$emit('requestManagerBusy',JSON.stringify(true))\n        \n        return new Promise((successCallback, failureCallback) => {\n                request.forwardEntities(vue,n).then( r => {\n                    const nodes : Object[] = [] ;\n                    const links : Object[] = [] ;\n                    r.forEach((value, key) => {\n                        const v = Object.assign({},value) ;\n                        if (value instanceof AskOmicsViewNode) {\n                            nodes.push(v);\n                        } else if (value instanceof AskOmicsViewLink) {\n                            links.push(v);\n                        }\n                        });\n                        vue.$emit('requestManagerBusy',JSON.stringify(false))\n                        successCallback([nodes,links])\n                    })\n                    .catch(e => {\n                        vue.$emit('requestManagerBusy',JSON.stringify(false))\n                        failureCallback(e)\n                    });\n                });\n    }\n\n    static clickNodeBackward( vue : Vue, request : RequestManager ,  n: AskOmicsViewNode ) : Promise<[Object[],Object[]]> {\n        \n        vue.$emit('requestManagerBusy',JSON.stringify(true))\n\n        return new Promise((successCallback, failureCallback) => {\n            request.backwardEntities(vue,n).then( r => {\n                const nodes : Object[] = [] ;\n                const links : Object[] = [] ;\n                r.forEach((value, key) => {\n                    const v = Object.assign({},value) ;\n                    if (value instanceof AskOmicsViewNode) {\n                        nodes.push(v);\n                    } else if (value instanceof AskOmicsViewLink) {\n                        links.push(v);\n                    }\n                    });\n                    vue.$emit('requestManagerBusy',JSON.stringify(false))\n                    successCallback([nodes,links])\n                })\n                .catch(e => {\n                    vue.$emit('requestManagerBusy',JSON.stringify(false))\n                    failureCallback(e)\n                });\n            });\n}\n\n\n    static setShapeNode(request :RequestManager, toShape: AskOmicsViewNode) : Object {\n        \n        /**\n         * nothing todo is node is selected \n         */\n\n         if ( toShape.state_n == ObjectState.SELECTED ) return request.getGraph()\n\n        const graph = request.getGraph()\n\n        /**\n         * Select Node if node is concrete and exit .\n         */\n        if ( toShape.state_n == ObjectState.CONCRETE ) {\n\n            if ( toShape.focus && toShape.focus.length>0  ) {\n\n                graph.nodes = graph.nodes.map(\n                    (n : AskOmicsViewNode )=> {\n                        if ( n.id == toShape.id ) {\n                            n.state_n = ObjectState.SELECTED\n                            request.setFocus(n.focus)\n                        }\n                        return n\n                    })\n            }\n\n            return graph\n        }\n        \n        \n        /**\n         * shape link/node if suggested\n         */\n        \n        graph.links = graph.links.map(\n            (l : AskOmicsViewLink )=> {\n\n                if ( (l.state_n == ObjectState.SUGGESTED) && (l.source == toShape.id || l.target == toShape.id) ) {\n                    l.state_n = ObjectState.CONCRETE\n                   \n                    /* ------------ */\n                    /* update model */\n                    /* ------------ */\n                    const focus : string = request.setNewNodeWithLink(toShape,l)\n\n                    /* ------------ */\n                    /* FOCUS        */\n                    /* ------------ */\n                    graph.nodes = graph.nodes.map(\n                        (n : AskOmicsViewNode )=> {\n                            if ( n.id == toShape.id ) n.focus = focus\n                            return n \n                        })\n                }\n                return l \n            })\n        /**\n        * SELECTED \n        */\n         graph.nodes = graph.nodes.map(\n            (n : AskOmicsViewNode )=> {\n                if ( n.id == toShape.id ) {\n                    n.state_n = ObjectState.SELECTED\n                }\n                return n \n            }) \n        \n        return graph \n\n    }\n\n    static removeSuggestion(request :RequestManager) {\n        const graph = request.getGraph()\n\n        graph.nodes = graph.nodes.filter( n => n.state_n != ObjectState.SUGGESTED )\n        graph.links = graph.links.filter( l => l.state_n != ObjectState.SUGGESTED )\n        \n        return graph\n    }\n\n}","\nimport { Options, Vue } from 'vue-class-component';\nimport * as d3 from 'd3';\nimport Utils from '@/ts/utils'\nimport RequestManager from '@/ts/RequestManager'\nimport UserIncrementManager from '@/ts/UserIncrementManager'\nimport { ObjectState, LinkType, FilterProperty, AskOmicsViewNode, AskOmicsViewLink } from '@/ts/types';\n\n\n@Options({\n  name: \"QueryGraphPanel\",\n  \n  emits: [\"updateRequestManager\",\"requestManagerBusy\",\"requestManagerBusyEvent\",\"requestManagerBusyPercent\"],\n  \n  components : {  },\n  \n  props: {\n    requestString   : {\n                        type: String,\n                        required: true\n                      },\n    filterProperty   : FilterProperty,\n    width           : Number,\n    height          : Number,\n  },\n\n  data () {\n    return {\n      ctrlKey: false,\n      canvas: null,\n      ctx: null,\n      color: d3.scaleOrdinal([\"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]),\n      zoom : 5,\n      zoomTime : 1000,\n      trans : d3.zoomIdentity,\n      colorGrey : '#808080',\n      colorDarkGrey : '#404040',\n      colorFirebrick : '#cc0000',\n      lineWidth : 2.5,\n      nodeSize : 17,\n      textSize : 12,\n      blankNodeSize : 1,\n      arrowLength : 40,\n      forceCollide: 40,\n      strengthForce: 1.0,\n      strengthForceManBody: -2000,\n      alphaTarget : 0,\n      canvasClass : \"\",\n      nodesSimulation : [],\n      linksSimulation : [],\n      request      : null,\n      selectedNodeCanvas : null\n    }\n  },\n\n  mounted() {\n  \n    if (this.requestString) {\n      this.request = new RequestManager(this.requestString,this)\n      \n      this.setUpSimulation();\n      this.refreshSimulation()\n\n    } else {\n      alert(\"requestString is not set.\")\n    }\n    \n  },\n  \n  beforeDestroy() {\n  },\n\n  watch: {\n    requestString() {\n      this.request = new RequestManager(this.requestString,this)\n      this.refreshSimulation()\n      this.simulation.restart()\n    },\n    \n    filterProperty() {\n      this.refreshSimulation()\n      this.simulation.restart()\n    }\n    \n  },\n  \n  methods: {\n    \n    selectedNode() {\n      return this.request.getGraph().nodes.filter( (n : AskOmicsViewNode) => n.state_n == ObjectState.SELECTED ).pop() \n    } ,\n\n    setUpSimulation() {\n\n        /**\n         * Managing CANVAS\n         */\n      \n      this.canvas = d3.select(\"#canvas-askomics-graph\")\n      this.ctx = this.canvas.node().getContext(\"2d\");\n\n      this.simulation = d3\n          .forceSimulation()\n          .force(\"x\",d3.forceX(this.width/2).strength(this.strengthForce) )\n          .force(\"y\",d3.forceY(this.height/2).strength(this.strengthForce) )\n          .force(\"collide\",d3.forceCollide(this.nodeSize+this.forceCollide))\n          .force(\"charge\", d3.forceManyBody().strength(this.strengthForceManBody))\n       //   .force(\"center\", null)\n         ;\n              \n      this.simulation.on(\"tick\", this.updateSimulation);\n\n      this.canvas\n        .on(\"click\", this.canvasClick)\n        .call(d3.drag()\n            .container(this.canvas.node())\n            .subject(this.dragsubject)\n            .on(\"start\", this.dragstarted)\n            .on(\"drag\", this.dragged)\n            .on(\"end\", this.dragended)\n          )\n        /*.call(\n          d3.zoom()\n              .extent([[0, 0], [this.width, this.height]])\n              .scaleExtent([1, 8])\n              .on(\"zoom\", this.zoomed)\n          )*/\n          ;\n    },\n\n    refreshSimulation() {\n      this.setObjectsSimulation()\n      this.updateSimulation()\n    },\n\n    setObjectsSimulation() {\n      \n      this.nodesSimulation = this.request.getGraph().nodes.map(\n        (node : AskOmicsViewNode) => {\n          const isNode = ( x : AskOmicsViewNode )=> x.id === node.id \n          const idxSimulation = this.nodesSimulation.findIndex( isNode )\n          if ( idxSimulation>=0 ) {\n            node.x = this.nodesSimulation[idxSimulation].x\n            node.y = this.nodesSimulation[idxSimulation].y\n          }\n          return node\n        } \n      )\n      \n      this.linksSimulation = this.request.getGraph().links.map(\n        (link : AskOmicsViewLink ) => {\n          const isLink = ( x : AskOmicsViewLink )=> x.id === link.id \n          const idxSimulation = this.linksSimulation.findIndex( isLink )\n          if ( idxSimulation>=0 ) {\n            link.x = this.linksSimulation[idxSimulation].x\n            link.y = this.linksSimulation[idxSimulation].y\n            link.vx = this.linksSimulation[idxSimulation].x\n            link.vy = this.linksSimulation[idxSimulation].y\n          }\n          return link\n        } \n      )\n     \n    },\n        \n    updateSimulation() {\n      \n      this.ctx.clearRect(0,0,this.width, this.height);\n      this.ctx.fillStyle = \"Gainsboro\";\n      this.ctx.fillRect(0,0,this.width,this.height);\n\n      this.ctx.beginPath();\n      this.ctx.globalAlpha = 1.0;\n      this.ctx.strokeStyle = \"#aaa\";\n\n      this.linksSimulation.forEach(this.drawLink);\n      this.ctx.stroke();\n\n      this.ctx.globalAlpha = 1.0;\n      this.nodesSimulation.forEach(this.drawNode);\n      \n\n      this.simulation.nodes(this.nodesSimulation);\n      this.simulation\n              .force(\"link\", d3.forceLink().id(function (d : any ) { return d.id; }))\n              .force(\"link\").links(this.linksSimulation)\n        \n        //this.simulation.restart()\n\n    },\n\n    zoomed(event : any) {\n      this.ctx.translate(event.transform.x, event.transform.y); \n      this.ctx.scale(event.transform.k, event.transform.k);\n    },\n    \n    dragsubject(event : any) {\n        return this.simulation.find(event.x, event.y);\n    },\n\n    /**\n     * Interaction with user actions\n     */\n    \n    canvasClick(event : any) {\n      \n      /* Find Selected Object */\n      let rect = this.canvas.node().getBoundingClientRect();\n      this.selectedNodeCanvas = this.simulation.find(event.x - rect.left, event.y - rect.top,this.nodeSize);\n      \n      if ( !this.selectedNodeCanvas || this.selectedNodeCanvas.state_n != ObjectState.SELECTED) {\n         // if ctrl released \n        if ( ! event.ctrlKey ) this.request.setGraph(UserIncrementManager.releaseSelectedObject(this.request.getGraph()))\n\n        this.updateGraph(this.selectedNodeCanvas)\n        this.$emit('updateRequestManager',this.request.serialized())\n      }\n      \n    },\n    /**\n     * usefull to update canavs when requestManager change his internal state\n     */\n    updateGraph(selectedNodeCanvas : AskOmicsViewNode) {\n      \n      /**\n       * Nothing is selected with go out and remove selection */ \n      if (! selectedNodeCanvas ) {\n        console.debug(\" ---  UNSELECTED NODE / updateGraph/UserIncrementManager.removeSuggestion --- \")\n        this.request.setGraph(UserIncrementManager.removeSuggestion(this.request)) \n        this.request.setFocusRoot()\n        this.refreshSimulation()\n      } else {\n        \n        const creation_node = selectedNodeCanvas.state_n == ObjectState.SUGGESTED\n\n        /**----------------------------------------------------------------------------\n         * Creation Node/Links  \n         */\n        console.debug(\" ---  SELECTED NODE / updateGraph/UserIncrementManager.setShapeNode --- \")\n        this.request.setGraph(UserIncrementManager.setShapeNode(this.request,selectedNodeCanvas))\n       \n        /**----------------------------------------------------------------------------\n         * Remove Suggestion unused\n         */\n        console.debug(\" ---  SELECTED NODE / updateGraph/UserIncrementManager.removeSuggestion --- \")\n        this.request.setGraph(UserIncrementManager.removeSuggestion(this.request))\n\n        /* save session */\n        if (creation_node) this.request.push()\n\n        /**-----------------------------------------------------------------------------\n         *  suggestions management\n         * \n         **/\n\n        this.display_suggestions();\n      }\n\n    },\n\n  display_suggestions( ) {\n    \n    /* proposes suggestion only if defined */\n    if (! this.selectedNode() )\n      return \n\n      /* add new suggestions */\n    \n      let component = this\n      component.canvasClass = \"query-graph-panel-disabled\"\n      \n      let ArrayPromises : Array<Promise<[Object[],Object[]]>> = []\n\n      switch (this.filterProperty) {\n        case FilterProperty.ALL : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeForward(this,this.request,this.selectedNode()),\n              UserIncrementManager.clickNodeBackward(this,this.request,this.selectedNode())\n            ]\n          break\n        }\n        case FilterProperty.TO : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeForward(this,this.request,this.selectedNode()),\n            ]\n          break\n        }\n        case FilterProperty.FROM : {\n          ArrayPromises = [\n              UserIncrementManager.clickNodeBackward(this,this.request,this.selectedNode())\n            ]\n          break\n        }\n         case FilterProperty.IS_A : {\n          ArrayPromises = []\n          break\n        }\n      }\n      \n      Promise.all(ArrayPromises).then(nodesAndLinksArray =>{\n\n          let nodes = component.request.getGraph().nodes \n          let links = component.request.getGraph().links \n          \n          for ( let nodesAndLinks of nodesAndLinksArray ) {\n            nodes = nodes.concat(nodesAndLinks[0]) \n            links = links.concat(nodesAndLinks[1])\n          }\n          \n          component.request.setGraph( \n              { nodes : nodes , links : links }\n              );\n\n          component.canvasClass = \"\"\n          \n      }).catch( e => {\n        alert(e)\n      })\n      .finally(function() {\n        /* save session to back old step */\n        component.canvasClass = \"\"\n        component.refreshSimulation()\n      }) \n    },\n    \n    dragstarted(event : any) {\n     \n      if (!event.active) this.simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    },\n\n    dragged(event : any) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    },\n    dragended(event : any) {\n        if (!event.active) this.simulation.alphaTarget(0);\n        event.subject.fx = null;\n        event.subject.fy = null;\n      },\n    \n    IntersectionCoordinate (x1 : number , y1 : number, x2 : number, y2 : number, r : number) {\n        let theta = Math.atan((y2 - y1) / (x1 - x2))\n        let x\n        let y\n        if (x1 < x2) {\n          x = x1 + r * Math.cos(theta)\n          y = y1 - r * Math.sin(theta)\n        } else {\n            x = x1 - r * Math.cos(theta)\n            y = y1 + r * Math.sin(theta)\n          }\n          return { x: x, y: y }\n        },\n    middleCoordinate (x1 : number, y1 : number, x2 : number, y2 : number) {\n        let theta = Math.atan((y2 - y1) / (x1 - x2))\n        let x\n        let y\n        if (x1 < x2) {\n          x = x1 + (this.nodeSize * 4) * Math.cos(theta)\n          y = y1 - (this.nodeSize * 4) * Math.sin(theta)\n        } else {\n          x = x1 - (this.nodeSize * 4) * Math.cos(theta)\n          y = y1 + (this.nodeSize * 4) * Math.sin(theta)\n        }\n        return { x: x, y: y }\n      },\n\n    triangleCoordinate (x1 : number, y1 : number, x2 : number, y2 : number, headlen : number) {\n      let theta = Math.atan2(y1 - y2, x1 - x2)\n\n      let xa = x1 - headlen * Math.cos(theta - Math.PI / 14)\n      let ya = y1 - headlen * Math.sin(theta - Math.PI / 14)\n\n      let xb = x1 - headlen * Math.cos(theta + Math.PI / 14)\n      let yb = y1 - headlen * Math.sin(theta + Math.PI / 14)\n\n      return {\n        xa: xa,\n        ya: ya,\n        xb: xb,\n        yb: yb\n      }\n    },\n\n    drawNode(node : AskOmicsViewNode) {\n     // console.log(JSON.stringify(node))\n      let unselectedColor = this.colorGrey\n      let unselectedColorText = this.colorDarkGrey\n      \n      this.ctx.fillStyle = node.uri ? Utils.stringToHexColor(node.uri) : \"#faaafff\" ;\n      \n      this.ctx.lineWidth = this.lineWidth ;\n\n      this.ctx.strokeStyle = node.state_n == ObjectState.SELECTED ? this.colorFirebrick : unselectedColor ;\n      this.ctx.globalAlpha = node.state_n == ObjectState.SUGGESTED ? 0.5 : 1 ;\n      node.state_n == ObjectState.SUGGESTED ? this.ctx.setLineDash([this.lineWidth, this.lineWidth]) : this.ctx.setLineDash([]);\n\n      // draw node\n      this.ctx.beginPath();\n      this.ctx.arc(node.x, node.y, this.nodeSize, 0, 2 * Math.PI, false);\n      this.ctx.stroke();\n      this.ctx.fill();\n      this.ctx.closePath();\n      // draw text\n      this.ctx.beginPath();\n      this.ctx.fillStyle = unselectedColorText;\n      this.ctx.font = this.nodeSize + 'px Sans-Serif';\n      this.ctx.textAlign = 'middle';\n      this.ctx.textBaseline = 'middle';\n      let label = node.label\n      this.ctx.fillText(label, node.x + this.nodeSize, node.y + this.nodeSize);\n      this.ctx.closePath();\n    },\n    /**\n     * Note . Link could not be of AskOmicsViewLink because \n     *  target and source are node identifier in the definition \n     *  but, at this step, there are of AskOmicsViewNode type.\n     * \n     */\n    drawLink(link : any) {\n      link.state_n == ObjectState.SUGGESTED ? this.ctx.setLineDash([this.lineWidth, this.lineWidth]) : this.ctx.setLineDash([]);\n      let unselectedColor = this.colorGrey\n      let unselectedColorText = this.colorDarkGrey\n      \n      this.ctx.strokeStyle = link.state_n == ObjectState.SELECTED ? this.colorFirebrick : unselectedColor\n      this.ctx.fillStyle = link.state_n == ObjectState.SELECTED ? this.colorFirebrick : this.colorGrey\n      this.ctx.globalAlpha = link.state_n == ObjectState.SUGGESTED ? 0.3 : 1\n      this.ctx.lineWidth = this.lineWidth\n      \n      const target = link.target\n      const source = link.source \n\n      this.ctx.beginPath();\n      let c = this.IntersectionCoordinate(source.x, source.y, target.x, target.y, this.nodeSize)\n      this.ctx.moveTo(c.x, c.y);\n      c = this.IntersectionCoordinate(target.x, target.y, source.x, source.y, this.nodeSize)\n      this.ctx.lineTo(c.x, c.y);\n      this.ctx.stroke();\n      this.ctx.closePath();\n\n      \n\n       // draw arrow\n       if (link.type == LinkType.FORWARD_PROPERTY || link.type == LinkType.BACKWARD_PROPERTY) {\n          this.ctx.beginPath()\n          let triangle = this.triangleCoordinate(target.x, target.y, source.x, source.y, this.arrowLength)\n          this.ctx.moveTo(c.x, c.y)\n          this.ctx.lineTo(triangle.xa, triangle.ya)\n          this.ctx.lineTo(triangle.xb, triangle.yb)\n          this.ctx.fill()\n          this.ctx.closePath()\n       }\n      // draw text\n        this.ctx.beginPath()\n        this.ctx.fillStyle = unselectedColorText\n        this.ctx.font = this.textSize + 'px Sans-Serif'\n        this.ctx.textAlign = 'middle'\n        this.ctx.textBaseline = 'middle'\n        let m = this.middleCoordinate(source.x, source.y, target.x, target.y)\n        this.ctx.fillText(link.label, m.x, m.y)\n        this.ctx.closePath()\n   }\n    \n  }\n})\n\nexport default class QueryGraphPanel extends Vue {\n\n}\n\n","import { render } from \"./QueryGraphPanel.vue?vue&type=template&id=b8deaafc\"\nimport script from \"./QueryGraphPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./QueryGraphPanel.vue?vue&type=script&lang=ts\"\n\nimport \"./QueryGraphPanel.vue?vue&type=style&index=0&id=b8deaafc&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div id=\"attributes-panel\" class=\"attributesList\">\n    <div class=\"d-flex justify-content-end\">\n       <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n         \n          <div>\n            <div id=\"v-model-select-property\" class=\"form-control\" v-if=\"displayCommonAttributeButtons\" >\n              <select v-model=\"selected_filterProperty\">\n                <option :key=\"propFilter.id\" :value=\"propFilter.id\" v-for=\"propFilter in propertyFilterList\">{{ propFilter.label }}</option>\n              </select>\n            </div>\n          </div>\n          \n          <div>\n            <button type=\"button\" class=\"form-control btn btn-secondary\" @click=\"removeNode\" v-if=\"displayRemoveButton\">Remove</button>\n            <button type=\"button\" class=\"form-control btn btn-secondary\" v-else disabled>Remove</button>\n          </div>\n          \n          <!--\n          <div class=\"btn-group\" role=\"group\">\n            <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Dropdown\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n              <a class=\"dropdown-item\" href=\"#\">Dropdown link</a>\n              <a class=\"dropdown-item\" href=\"#\">Dropdown link</a>\n            </div>\n          </div>-->\n       </div>\n      </div>\n                \n    <attributeBox\n      v-for=\"item in attributeList\" :key=\"item.id\"\n      :attribute=\"item\"\n      @updateAttribute=\"updateAttribute\"\n      />\n  </div>\n</template>\n\n<script lang=\"ts\">\n\nimport { Options, Vue } from 'vue-class-component';\n\nimport AttributeBox from '../attribute/AttributeBox.vue'\nimport RequestManager from '@/ts/RequestManager'\n/*\nimport UserIncrementManager from '@/ts/UserIncrementManager' */\nimport { FilterProperty } from '@/ts/types'\nimport { GraphBuilder } from '@/ts/GraphBuilder'\n\n\n@Options({\n  name: \"AttributesPanel\",\n  emits: [\"updateRequestManager\",\"updateFilterProperty\"],\n  components : { AttributeBox },\n  props : {\n    requestString     : {\n                          type: String,\n                          required: true\n                        },\n    width             : Number,\n    height            : Number,\n  },\n\n  created() {\n   \n  },\n\n  mounted() {\n    this.updateRequestString(this.requestString)\n    let attributesList = document.querySelector<HTMLElement>('.attributesList')\n    if ( attributesList ) {\n      attributesList.style.height = this.height + \"px\"\n      attributesList.style.width  = this.width + \"px\"\n    }   \n  },\n\n  watch : {\n    requestString(value) {\n      this.updateRequestString(value) \n    \n    },\n\n    selected_filterProperty(value) {\n      this.$emit('updateFilterProperty',JSON.stringify(value))\n    } \n  },\n  data () {\n    return {\n      propertyFilterList : [\n        {\n          id: FilterProperty.TO,\n          label : \"TO\"\n        },\n        {\n          id: FilterProperty.FROM,\n          label : \"FROM\"\n        },\n        {\n          id: FilterProperty.IS_A,\n          label : \"IS_A\"\n        },\n        {\n          id: FilterProperty.ALL,\n          label : \"ALL\"\n        },\n      ],\n      request : null,\n      selected_filterProperty : FilterProperty.TO,\n      attributeList: [],\n      componentKey: 0,\n    }\n  },\n\n  computed : {\n    displayCommonAttributeButtons() {\n      if (this.request) {\n        return this.request.focusIsSelected()\n      }\n      return false\n    },\n\n    displayRemoveButton() {\n      if (this.request) {\n        return this.request.removableNode()\n      }\n        \n      else\n        return false\n    }\n\n\n  },\n\n \n  methods: {\n    \n    updateRequestString(value : string) {\n\n      this.request = new RequestManager(value,this)\n      this.updateAttributeList()\n    },\n\n    updateAttributeList() {\n      if (this.request.focusIsSelected()) { \n        GraphBuilder.buildAttributesBox(this.request).then(\n          (response : Object[]) => {\n            this.attributeList = response\n            this.attributeList.sort((a : any, b:any) => Number(a.order) - Number(b.order));\n          })\n      } else {\n        this.attributeList = [];\n      }     \n    },\n\n    removeNode() {\n      this.request.removeNode(this)\n      this.updateAttributeList()\n    },\n\n    updateAttribute(event : string) {\n      this.request.updateAttribute(JSON.parse(event))\n      this.updateAttributeList()\n    }\n  }\n})\n\nexport default class AttributesPanel extends Vue {\n\n}\n</script>\n\n<style>\n.attributesList {\n  display: 'block' ;\n  overflow-y:auto  ;\n}\n</style>\n","<template>\r\n\r\n  <div :id=\"attribute.id\" class=\"attribute-box\">\r\n    <label class=\"attr-label\">{{ attribute.label }}</label>\r\n    <div className=\"attr-icons\">\r\n        <font-awesome-icon @click=\"erase\" :icon=\"['fas', 'eraser']\" />\r\n        <!-- <font-awesome-icon @click=\"closeLink\" :icon=\"['fas', 'link']\" v-if=\"attribute.linked\" />\r\n        <font-awesome-icon @click=\"openLink\" :icon=\"['fas', 'unlink']\" v-else /> -->\r\n\r\n        <font-awesome-icon @click=\"closeEye\" :icon=\"['fas', 'eye']\" v-if=\"attribute.visible\" />\r\n        <font-awesome-icon @click=\"openEye\" :icon=\"['fas', 'eye-slash']\" v-else />\r\n       <!-- <font-awesome-icon :icon=\"['fas', 'question-circle']\" /> -->\r\n    </div>\r\n    \r\n    <div v-if=\"attribute.range == 'uri'\">\r\n      <URIBox\r\n        v-bind:attribute=\"attribute\"\r\n        @updateAttribute=\"$emit('updateAttribute',$event)\"\r\n      >\r\n      </URIBox>\r\n    </div>\r\n    \r\n    <div v-else-if=\"attribute.range == 'xsd:string'\">\r\n        <XsdString\r\n          v-model:attribute=\"attribute\"\r\n          @updateAttribute=\"$emit('updateAttribute',$event)\"\r\n        ></XsdString>\r\n    </div>\r\n    <div v-else-if=\"['xsd:numeric','xsd:double','xsd:float','xsd:integer'].includes(attribute.range)\">\r\n        <XsdNumeric\r\n          v-bind:attribute=\"attribute\"\r\n           @updateAttribute=\"$emit('updateAttribute',$event)\"\r\n        ></XsdNumeric>\r\n    </div>\r\n    <div v-else>\r\n        {{ attribute.range }} is not supported !\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from '@/ts/types';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faEye, faEyeSlash, faLink, faUnlink, faQuestionCircle, faEraser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\nimport URIBox from './URIBox.vue'\r\nimport XsdString from './XsdString.vue';\r\nimport XsdNumeric from './XsdNumeric.vue';\r\n\r\n[ faLink, faUnlink, faCircle, faQuestionCircle, faEye, faEyeSlash, faEraser ].map(icon => library.add(icon)) ;\r\n\r\n\r\n@Options({\r\n  components : { \r\n    library,FontAwesomeIcon, XsdString, XsdNumeric,URIBox\r\n    },\r\n  \r\n  emits: [\"updateAttribute\"],\r\n\r\n  props: { \r\n      attribute : {\r\n        type : Object as () => AskOmicsViewAttributes, \r\n        required: true\r\n      }\r\n  },\r\n  \r\n  methods: {\r\n      toggleLinkAttribute: () => { console.log( \"click 1 !\") },\r\n      \r\n      erase() {\r\n        this.$emit('updateAttribute',JSON.stringify(AskOmicsViewAttributes.from(this.attribute).clean()))\r\n      },\r\n\r\n      openEye(){ \r\n        this.attribute.visible = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n      \r\n      closeEye() {\r\n        this.attribute.visible = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n\r\n      openLink() {\r\n        this.attribute.linked = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n\r\n      closeLink() {\r\n        this.attribute.linked = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n\r\n      toggleOptional: () => { console.log( \"click 3 !\") }\r\n  },\r\n  \r\n  data () {\r\n    return {\r\n    }\r\n  }\r\n})\r\n\r\nexport default class AttributeBox extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\ndiv.attribute-box {\r\n  margin: 5px;\r\n  padding: 5px;\r\n  border-radius: 10px;\r\n\r\n  border: 1px solid #c5c5c5;\r\n  background: #f6f6f6;\r\n  font-weight: normal;\r\n  color: #454545;\r\n}\r\n\r\nlabel.attr-label {\r\n  font-weight: 700;\r\n}\r\n\r\ndiv.attr-icons {\r\n  float: right;\r\n}\r\ni.attr-icon {\r\n  padding-right: 8px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","<template>\r\n<div id=\"askomics-uri-box\">\r\n<table>\r\n<tr>\r\n    <td>\r\n        <select v-on:blur=\"updateFilterValue\" v-model=\"attribute.operator\">\r\n            <option v-for=\"option in optionsTypeCompare\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    \r\n    <td>\r\n        <select v-on:blur=\"updateFilterValue\" v-model=\"attribute.negative\">\r\n            <option v-for=\"option in optionsTypeSearch\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    \r\n    <td>\r\n        <input v-on:blur=\"updateFilterValue\" v-model=\"attribute.filterValue\" placeholder=\"edit me\">\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes, AttributeOperator  } from '@/ts/types';\r\n\r\n@Options({\r\n    name: \"URIBox\",\r\n    \r\n    emits: [\"updateAttribute\"],\r\n\r\n    props: {\r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n\r\n    data() { \r\n        return {\r\n            optionsTypeSearch: [\r\n                { text: 'Contains', value: AttributeOperator.CONTAINS },\r\n                { text: 'Exact', value: AttributeOperator.EQUAL },\r\n           //     { text: 'Regex', value: AttributeOperator.REGEXP },\r\n                { text: 'Starts', value: AttributeOperator.STRSTARTS },\r\n                { text: 'Ends', value: AttributeOperator.STRENDS }\r\n            ],\r\n            optionsTypeCompare: [\r\n                { text: '', value: false },\r\n                { text: 'NOT', value: true }\r\n            ],\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        updateFilterValue() {\r\n            if (this.attribute.filterValue && this.attribute.filterValue.length>0)\r\n                this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n        }\r\n    },\r\n})\r\n\r\nexport default class UriBox extends Vue {\r\n    attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes, AttributeOperator  } from '@/ts/types';\r\n\r\n@Options({\r\n    name: \"URIBox\",\r\n    \r\n    emits: [\"updateAttribute\"],\r\n\r\n    props: {\r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n\r\n    data() { \r\n        return {\r\n            optionsTypeSearch: [\r\n                { text: 'Contains', value: AttributeOperator.CONTAINS },\r\n                { text: 'Exact', value: AttributeOperator.EQUAL },\r\n           //     { text: 'Regex', value: AttributeOperator.REGEXP },\r\n                { text: 'Starts', value: AttributeOperator.STRSTARTS },\r\n                { text: 'Ends', value: AttributeOperator.STRENDS }\r\n            ],\r\n            optionsTypeCompare: [\r\n                { text: '', value: false },\r\n                { text: 'NOT', value: true }\r\n            ],\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        updateFilterValue() {\r\n            if (this.attribute.filterValue && this.attribute.filterValue.length>0)\r\n                this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n        }\r\n    },\r\n})\r\n\r\nexport default class UriBox extends Vue {\r\n    attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n\r\n","import { render } from \"./URIBox.vue?vue&type=template&id=68258ca0\"\nimport script from \"./URIBox.vue?vue&type=script&lang=ts\"\nexport * from \"./URIBox.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n<div id=\"askomics-text-box\">\r\n<table>\r\n<tr>\r\n    <td>\r\n        <select v-on:blur=\"updateFilterValue\" v-model=\"attribute.negative\">\r\n            <option v-for=\"option in optionsTypeCompare\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n\r\n    <td>\r\n        <select v-on:blur=\"updateFilterValue\" v-model=\"attribute.operator\">\r\n            <option v-for=\"option in optionsTypeSearch\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n   \r\n    <td>\r\n        <input v-on:blur=\"updateFilterValue\" v-model=\"attribute.filterValue\" placeholder=\"edit me\">\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes, AttributeOperator  } from '@/ts/types';\r\n\r\n@Options({\r\n\r\n    name: \"XsdString\",\r\n\r\n    emits: [\"updateAttribute\"],\r\n\r\n    props: {\r\n        attribute : {\r\n            type : Object as () => AskOmicsViewAttributes ,\r\n            required: true\r\n            }\r\n    },\r\n    data() { \r\n        return {\r\n            optionsTypeSearch: [\r\n                { text: 'Contains', value: AttributeOperator.CONTAINS },\r\n                { text: 'Exact', value: AttributeOperator.EQUAL },\r\n           //     { text: 'Regex', value: AttributeOperator.REGEXP },\r\n                { text: 'Starts', value: AttributeOperator.STRSTARTS },\r\n                { text: 'Ends', value: AttributeOperator.STRENDS }\r\n            ],\r\n            optionsTypeCompare: [\r\n                { text: '', value: false },\r\n                { text: 'NOT', value: true }\r\n            ],\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        updateFilterValue() {\r\n            if (this.attribute.filterValue && this.attribute.filterValue.length>0)\r\n                this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n        }\r\n    },\r\n})\r\n\r\nexport default class XsdString extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes, AttributeOperator  } from '@/ts/types';\r\n\r\n@Options({\r\n\r\n    name: \"XsdString\",\r\n\r\n    emits: [\"updateAttribute\"],\r\n\r\n    props: {\r\n        attribute : {\r\n            type : Object as () => AskOmicsViewAttributes ,\r\n            required: true\r\n            }\r\n    },\r\n    data() { \r\n        return {\r\n            optionsTypeSearch: [\r\n                { text: 'Contains', value: AttributeOperator.CONTAINS },\r\n                { text: 'Exact', value: AttributeOperator.EQUAL },\r\n           //     { text: 'Regex', value: AttributeOperator.REGEXP },\r\n                { text: 'Starts', value: AttributeOperator.STRSTARTS },\r\n                { text: 'Ends', value: AttributeOperator.STRENDS }\r\n            ],\r\n            optionsTypeCompare: [\r\n                { text: '', value: false },\r\n                { text: 'NOT', value: true }\r\n            ],\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        updateFilterValue() {\r\n            if (this.attribute.filterValue && this.attribute.filterValue.length>0)\r\n                this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n        }\r\n    },\r\n})\r\n\r\nexport default class XsdString extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n\r\n","import { render } from \"./XsdString.vue?vue&type=template&id=70c3f213\"\nimport script from \"./XsdString.vue?vue&type=script&lang=ts\"\nexport * from \"./XsdString.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n<div id=\"askomics-text-box\">\r\n<table>\r\n<tr>\r\n    <td>\r\n        <select v-on:blur=\"updateFilterValue\" v-model=\"attribute.operator\">\r\n            <option v-for=\"option in optionsOprator\" v-bind:key=\"option.value\" v-bind:value=\"option.value\">\r\n                {{ option.text }}\r\n            </option>\r\n        </select>\r\n    </td>\r\n    <td>\r\n        <input v-on:blur=\"updateFilterValue\" v-model=\"attribute.filterValue\" placeholder=\"edit me\">\r\n    </td>\r\n</tr>\r\n</table>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes, AttributeOperator  } from '@/ts/types';\r\n\r\n@Options({\r\n\r\n    name: \"XsdNumeric\",\r\n\r\n    emits: [\"updateAttribute\"],\r\n\r\n    props: { \r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n    \r\n    data() { \r\n        return {\r\n            optionsOprator: [\r\n                { text: '=', value: AttributeOperator.EQUAL },\r\n                { text: '<', value: AttributeOperator.INF },\r\n                { text: '<=', value: AttributeOperator.INFEQUAL },\r\n                { text: '>', value: AttributeOperator.SUP },\r\n                { text: '>=', value: AttributeOperator.SUPEQUAL },\r\n                { text: '!=', value: AttributeOperator.NOTEQUAL }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        updateFilterValue() {\r\n            if (this.attribute.filterValue && this.attribute.filterValue.length>0)\r\n                this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n        }\r\n    },\r\n})\r\n\r\nexport default class XsdNumeric extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes, AttributeOperator  } from '@/ts/types';\r\n\r\n@Options({\r\n\r\n    name: \"XsdNumeric\",\r\n\r\n    emits: [\"updateAttribute\"],\r\n\r\n    props: { \r\n        attribute : Object as () => AskOmicsViewAttributes \r\n    },\r\n    \r\n    data() { \r\n        return {\r\n            optionsOprator: [\r\n                { text: '=', value: AttributeOperator.EQUAL },\r\n                { text: '<', value: AttributeOperator.INF },\r\n                { text: '<=', value: AttributeOperator.INFEQUAL },\r\n                { text: '>', value: AttributeOperator.SUP },\r\n                { text: '>=', value: AttributeOperator.SUPEQUAL },\r\n                { text: '!=', value: AttributeOperator.NOTEQUAL }\r\n            ],\r\n            filterValue: '',\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        updateFilterValue() {\r\n            if (this.attribute.filterValue && this.attribute.filterValue.length>0)\r\n                this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n        }\r\n    },\r\n})\r\n\r\nexport default class XsdNumeric extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n","import { render } from \"./XsdNumeric.vue?vue&type=template&id=5a59b7ca\"\nimport script from \"./XsdNumeric.vue?vue&type=script&lang=ts\"\nexport * from \"./XsdNumeric.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { Options, Vue } from 'vue-class-component';\r\nimport { AskOmicsViewAttributes } from '@/ts/types';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCircle, faEye, faEyeSlash, faLink, faUnlink, faQuestionCircle, faEraser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\nimport URIBox from './URIBox.vue'\r\nimport XsdString from './XsdString.vue';\r\nimport XsdNumeric from './XsdNumeric.vue';\r\n\r\n[ faLink, faUnlink, faCircle, faQuestionCircle, faEye, faEyeSlash, faEraser ].map(icon => library.add(icon)) ;\r\n\r\n\r\n@Options({\r\n  components : { \r\n    library,FontAwesomeIcon, XsdString, XsdNumeric,URIBox\r\n    },\r\n  \r\n  emits: [\"updateAttribute\"],\r\n\r\n  props: { \r\n      attribute : {\r\n        type : Object as () => AskOmicsViewAttributes, \r\n        required: true\r\n      }\r\n  },\r\n  \r\n  methods: {\r\n      toggleLinkAttribute: () => { console.log( \"click 1 !\") },\r\n      \r\n      erase() {\r\n        this.$emit('updateAttribute',JSON.stringify(AskOmicsViewAttributes.from(this.attribute).clean()))\r\n      },\r\n\r\n      openEye(){ \r\n        this.attribute.visible = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n      \r\n      closeEye() {\r\n        this.attribute.visible = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n\r\n      openLink() {\r\n        this.attribute.linked = true\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n\r\n      closeLink() {\r\n        this.attribute.linked = false\r\n        this.$emit('updateAttribute',JSON.stringify(this.attribute))\r\n      },\r\n\r\n      toggleOptional: () => { console.log( \"click 3 !\") }\r\n  },\r\n  \r\n  data () {\r\n    return {\r\n    }\r\n  }\r\n})\r\n\r\nexport default class AttributeBox extends Vue {\r\n  attribute!: AskOmicsViewAttributes\r\n}\r\n\r\n","import { render } from \"./AttributeBox.vue?vue&type=template&id=6360ad6d\"\nimport script from \"./AttributeBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AttributeBox.vue?vue&type=script&lang=ts\"\n\nimport \"./AttributeBox.vue?vue&type=style&index=0&id=6360ad6d&lang=css\"\nscript.render = render\n\nexport default script","import {AskOmicsViewNode, AskOmicsViewLink, AskOmicsViewAttributes } from '@/ts/types'\nimport RequestManager from './RequestManager';\n\ninterface GraphBuilderExpr {\n    nodes:Array<AskOmicsViewNode>;\n    links:Array<AskOmicsViewLink>;\n}\n\n\nexport class GraphBuilder {\n    constructor() {}\n\n     /**\n     * build graph from Request Manager (discovery)\n     */\n      static buildAttributesBox(rm : RequestManager) : Promise< Object[]> {\n        const lAttributeBox :  Object[] = [] ;\n      //  alert(\"buildAttributesBox\")\n        return new Promise((successCallback, failureCallback) => {\n            rm.getDiscovery().browse(\n                (node : any, deep : Number) => {\n                    if ( node.idRef == rm.getFocus()) {\n                        const decorations  = node.decorations.attributes ? JSON.parse(node.decorations.attributes) : {}\n                                //new Map(JSON.parse(node.decorations.attributes)) as Map<String,AskOmicsViewAttributes> : new Map() \n                        \n                        rm.attributeList(rm.getFocus()).then(\n                            response => {\n                                /* attribute from RDF store */\n                                const listAttributes : Object[] = \n                                \n                                response\n                                  .map( (obj : AskOmicsViewAttributes)  =>  {\n                                    if (  decorations[obj.uri] ) {\n                                        return AskOmicsViewAttributes.from(decorations[obj.uri]!)\n                                    } \n                                    \n                                    return obj\n                                  })\n                                  .map( (obj : AskOmicsViewAttributes )  =>  obj.getObject() )\n                                  \n\n                                successCallback(listAttributes)\n                            }\n                        ).catch(e => {failureCallback(e)})\n                    }\n                }\n            )})\n    }\n}","\n\nimport { Options, Vue } from 'vue-class-component';\n\nimport AttributeBox from '../attribute/AttributeBox.vue'\nimport RequestManager from '@/ts/RequestManager'\n/*\nimport UserIncrementManager from '@/ts/UserIncrementManager' */\nimport { FilterProperty } from '@/ts/types'\nimport { GraphBuilder } from '@/ts/GraphBuilder'\n\n\n@Options({\n  name: \"AttributesPanel\",\n  emits: [\"updateRequestManager\",\"updateFilterProperty\"],\n  components : { AttributeBox },\n  props : {\n    requestString     : {\n                          type: String,\n                          required: true\n                        },\n    width             : Number,\n    height            : Number,\n  },\n\n  created() {\n   \n  },\n\n  mounted() {\n    this.updateRequestString(this.requestString)\n    let attributesList = document.querySelector<HTMLElement>('.attributesList')\n    if ( attributesList ) {\n      attributesList.style.height = this.height + \"px\"\n      attributesList.style.width  = this.width + \"px\"\n    }   \n  },\n\n  watch : {\n    requestString(value) {\n      this.updateRequestString(value) \n    \n    },\n\n    selected_filterProperty(value) {\n      this.$emit('updateFilterProperty',JSON.stringify(value))\n    } \n  },\n  data () {\n    return {\n      propertyFilterList : [\n        {\n          id: FilterProperty.TO,\n          label : \"TO\"\n        },\n        {\n          id: FilterProperty.FROM,\n          label : \"FROM\"\n        },\n        {\n          id: FilterProperty.IS_A,\n          label : \"IS_A\"\n        },\n        {\n          id: FilterProperty.ALL,\n          label : \"ALL\"\n        },\n      ],\n      request : null,\n      selected_filterProperty : FilterProperty.TO,\n      attributeList: [],\n      componentKey: 0,\n    }\n  },\n\n  computed : {\n    displayCommonAttributeButtons() {\n      if (this.request) {\n        return this.request.focusIsSelected()\n      }\n      return false\n    },\n\n    displayRemoveButton() {\n      if (this.request) {\n        return this.request.removableNode()\n      }\n        \n      else\n        return false\n    }\n\n\n  },\n\n \n  methods: {\n    \n    updateRequestString(value : string) {\n\n      this.request = new RequestManager(value,this)\n      this.updateAttributeList()\n    },\n\n    updateAttributeList() {\n      if (this.request.focusIsSelected()) { \n        GraphBuilder.buildAttributesBox(this.request).then(\n          (response : Object[]) => {\n            this.attributeList = response\n            this.attributeList.sort((a : any, b:any) => Number(a.order) - Number(b.order));\n          })\n      } else {\n        this.attributeList = [];\n      }     \n    },\n\n    removeNode() {\n      this.request.removeNode(this)\n      this.updateAttributeList()\n    },\n\n    updateAttribute(event : string) {\n      this.request.updateAttribute(JSON.parse(event))\n      this.updateAttributeList()\n    }\n  }\n})\n\nexport default class AttributesPanel extends Vue {\n\n}\n","import { render } from \"./AttributesPanel.vue?vue&type=template&id=363611d2\"\nimport script from \"./AttributesPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./AttributesPanel.vue?vue&type=script&lang=ts\"\n\nimport \"./AttributesPanel.vue?vue&type=style&index=0&id=363611d2&lang=css\"\nscript.render = render\n\nexport default script","\n\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n\nimport QueryGraphPanel from './QueryGraphPanel.vue'\nimport AttributesPanel from './AttributesPanel.vue'\nimport { FilterProperty } from '@/ts/types';\n\n[ faSpinner ].map(icon => library.add(icon)) ;\n\n\n@Options({\n  name: \"QueryBuilderPanel\",\n  \n  components : {  \n      library,FontAwesomeIcon, QueryGraphPanel,AttributesPanel\n      },\n  \n  emits: [\"updateRequestManager\"],\n  \n  props : {\n    requestString :  String\n  },\n \n  data () {\n    return {\n      currentQuery       : this.requestString,\n      requestBusy        : false,\n      requestBusyPercent : \"0\",\n      requestBusyEvent   : \"\",\n      filterProperty     : FilterProperty.TO,\n    }\n  },\n   \n  watch : {\n    requestBusy : 'prepareRequestBusy',\n    \n    requestBusyPercent : 'prepareRequestBusy',\n\n    requestString() {\n      this.currentQuery = this.requestString\n    }\n\n  } ,\n\n  created() {\n  },\n  \n  mounted() {\n  },\n\n  computed : {\n  },\n\n  methods: {\n    \n    prepareRequestBusy() {\n      if (!this.requestBusy || this.requestBusyPercent == \"100\") {\n        this.requestBusyPercent = \"0\"\n        this.requestBusyEvent = \"\"\n      }\n    },\n\n    updateQuery(value : string) {\n      this.currentQuery = value\n      this.$emit('updateRequestManager',this.currentQuery)\n    },\n\n    attributeBoxEvent(e: string) {\n      console.log(\"attributeBoxEvent:\",e)\n    },\n  }\n})\n\nexport default class QueryBuilderPanel extends Vue {\n\n}\n\n","import { render } from \"./QueryBuilderPanel.vue?vue&type=template&id=843c9f7a\"\nimport script from \"./QueryBuilderPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./QueryBuilderPanel.vue?vue&type=script&lang=ts\"\n\nimport \"./QueryBuilderPanel.vue?vue&type=style&index=0&id=843c9f7a&lang=css\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component';\nimport QueryBuilderPanel from '@/components/discovery-builder/panels/QueryBuilderPanel.vue'\n\n@Options({\n  name: \"GraphBuilder\",\n  \n  props : {\n    rm :  String\n  },\n\n  components: {\n    QueryBuilderPanel \n  },\n\n  emits: [\"updateRequestManager\"],\n \n  computed: {\n    requestString() {\n      return require('lzbase62').decompress(this.$route.params.rm)\n    }\n  },\n\n  methods : {\n    updateRequestString(requestManagerString : string) {\n      this.$emit('updateRequestManager',requestManagerString)\n    }\n  }\n\n})\nexport default class GraphBuilder extends Vue {}\n","import { render } from \"./GraphBuilder.vue?vue&type=template&id=032fee69\"\nimport script from \"./GraphBuilder.vue?vue&type=script&lang=ts\"\nexport * from \"./GraphBuilder.vue?vue&type=script&lang=ts\"\n\nimport \"./GraphBuilder.vue?vue&type=style&index=0&id=032fee69&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div id=\"console-panel\">\n      <div class=\"container\"> \n        <pre class=\"code\"> {{ console }} </pre>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport RequestManager from '@/ts/RequestManager'\n\n@Options({\n  name: \"Console\",\n  \n  components: { \n  },\n\n  emits: [\"updateDiscovery\"],\n \n  data () {\n    return {\n    }\n  },\n\n  computed: {\n    console() {\n        var old = console.log;\n        let innerHTML = \"\"\n\n        console.log = function (message) {\n          \n          let m = message\n          /* remove color . @todo : create a console with color */\n          for (let i=0;i<=47;i++) \n            m = m.replace(\"\\x1b[\"+i+\"m\",\"\")\n\n          innerHTML += m  + '\\n';\n        }\n\n        let currentQuery = require('lzbase62').decompress(this.$route.params.rm)\n\n        \n\n        new RequestManager(currentQuery,this).getDiscovery().console()\n        console.log = old\n        return innerHTML\n    }\n  }\n})\nexport default class Console extends Vue {}\n</script>\n\n<style lang=\"css\">\npre.code {\n        font-family: Consolas, Menlo, Monaco, \"Lucida Console\", \"Liberation Mono\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Courier New\", monospace, sans-serif;\n        background-color: #eee;\n        text-align: left;\n        overflow: auto;\n        font-size: 13px;\n        padding: 5px;\n        width: 1250px ;\n        padding-bottom: 20px ;\n        max-height: 600px;\n        margin-bottom: 1em;\n        display: block;\n        color: #393318;\n        white-space: pre;\n}\n\n</style>","\nimport { Options, Vue } from 'vue-class-component';\nimport RequestManager from '@/ts/RequestManager'\n\n@Options({\n  name: \"Console\",\n  \n  components: { \n  },\n\n  emits: [\"updateDiscovery\"],\n \n  data () {\n    return {\n    }\n  },\n\n  computed: {\n    console() {\n        var old = console.log;\n        let innerHTML = \"\"\n\n        console.log = function (message) {\n          \n          let m = message\n          /* remove color . @todo : create a console with color */\n          for (let i=0;i<=47;i++) \n            m = m.replace(\"\\x1b[\"+i+\"m\",\"\")\n\n          innerHTML += m  + '\\n';\n        }\n\n        let currentQuery = require('lzbase62').decompress(this.$route.params.rm)\n\n        \n\n        new RequestManager(currentQuery,this).getDiscovery().console()\n        console.log = old\n        return innerHTML\n    }\n  }\n})\nexport default class Console extends Vue {}\n","import { render } from \"./Console.vue?vue&type=template&id=5821447c\"\nimport script from \"./Console.vue?vue&type=script&lang=ts\"\nexport * from \"./Console.vue?vue&type=script&lang=ts\"\n\nimport \"./Console.vue?vue&type=style&index=0&id=5821447c&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <ResultsPanel :rm=\"rm\" />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport ResultsPanel from '@/components/results/ResultsPanel'\n\n@Options({\n  name: \"Results\",\n  components: {\n    ResultsPanel\n  },\n\n  data() { \n        return {\n        }\n  },\n  \n  computed: {\n    rm() {\n      return require('lzbase62').decompress(this.$route.params.rm)\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Results extends Vue {}\n</script>","<template>\n<div id=\"results-panel\">\n    <vue-table-lite \n                    :is-static-mode=\"isStaticMode\"\n                    :has-checkbox=\"hasCheckbox\"\n                    :is-loading=\"isLoading\" \n                    :is-re-search=\"isReSearch\" \n                    :columns=\"columns\" \n                    :rows=\"rows\" \n                    :total=\"totalRecordCount\" \n                    :sortable=\"isSortable\" \n                    :messages=\"messages\" \n                    @do-search=\"doSearch\" \n                    @is-finished=\"tableLoadingFinish\" \n                    @return-checked-row=\"updateCheckedRows\" />\n\n</div>\n</template>\n\n<script lang=\"ts\">\nimport RequestManager from '@/ts/RequestManager';\nimport { Options, Vue } from 'vue-class-component';\nimport VueTableLite from 'vue3-table-lite'\n\n@Options({\n    name: \"ResultsPanel\",\n    \n    components : { VueTableLite },\n\n    props: {\n        rm : {\n                type: String,\n                required: false\n        },\n        \n        isStaticMode : {\n                type: Boolean,\n                required: false,\n                default: true\n        },\n\n        hasCheckbox : {\n                type: Boolean,\n                required: false,\n                default: false\n        },\n\n        isSortable : {\n                type: Object,\n                required: false,\n                default: {\n                    order : \"id\",\n                    sort : \"asc\"\n                }\n        },\n    },\n\n    data() { \n        return {\n            laziestPages : [],\n            rows : [],\n            totalRecordCount : 2 ,\n\n            messages : {\n                    pagingInfo : \"Showing {0}-{1} of {2}\",\n                    pageSizeChangeLabel: \"Row count:\",\n                    gotoPageLabel: \"Go to page:\",\n                    noDataAvailable: \"No data\",\n                },\n                    \n            isLoading : false,\n            isReSearch : false\n        }\n    },\n\n    computed: {\n        columns() {\n            return new RequestManager(this.rm,this).getColumnsResults() \n        }\n    },\n\n    mounted() {\n        this.resultsPage(0)\n    },\n\n    methods: {\n\n        resultsPage(indexLazyPage : number, numberOfResults : number) {\n          if (this.columns.length == 0 ) {\n                this.rows = []\n          } \n          else \n            new RequestManager(this.rm,this).getCountAndLaziesPages(numberOfResults)\n            .then( \n                (args : any) => {\n                    \n                    this.totalRecordCount = Object.values(args)[0] ;\n                    \n                    const laziestPages = Object.values(args)[1] as Array<any>;\n                    \n                    if (this.totalRecordCount>0 && laziestPages.length>0) {\n                        \n                        laziestPages[indexLazyPage]\n                            .commit()\n                            .raw()\n                            .then( (response : any) => { \n                                this.rows = []\n                                let URIinstance : Map<String,String> = new Map()\n                                for (let i=0;i<response.results.bindings.length;i++) {\n                                    let row : any = {};\n                                    row['id'] = (indexLazyPage*10)+i\n                                    \n                                    const tabURI = [...new Set(this.columns\n                                        .filter( (col : any) => col.node_id ).map( (col : any) => col.node_id))]\n                                    \n                                    tabURI.forEach((uri : any ) => {   \n                                        /* value of instance only */\n                                        URIinstance.set(uri,response.results.bindings[i][uri].value)\n                                    })\n\n                                    this.columns.forEach((col : any) => {             \n                                    /* datatype only */\n                                   // if ( col.field != col.node_id) {\n                                        let val =\"\"\n\n                                        const uriInstance : string = URIinstance.get(col.node_id) as string\n                                        if (col.field === col.node_id ) {\n                                            val = uriInstance\n                                        } else {\n                                            if (response.results.datatypes[col.field] && response.results.datatypes[col.field][uriInstance]) {\n                                                if (response.results.datatypes[col.field][uriInstance].length>0)\n                                                    val = response.results.datatypes[col.field][uriInstance][0].value; \n                                            }\n                                        }\n\n                                        row[col.field] = val\n                                    //}\n                                    \n                                })\n                                this.rows.push(row) ;\n                            } \n                        })\n                }})\n        },\n        \n        doSearch(offset : number, limit : number, order : string, sort : string) {\n           \n            this.isLoading = true\n\n            if (offset)\n                this.isReSearch = true \n            else \n                this.isReSearch = false\n        \n            \n            this.resultsPage(Math.floor(offset/10),limit)\n            try {\n                if (order) this.sortable.order = order;\n            } catch (err) {\n                console.warn(err)\n            }\n\n            try {\n                if (sort) this.sortable.sort = sort;\n            } catch (err) {\n                console.warn(err)\n            }\n        },\n\n        tableLoadingFinish() {\n            this.isLoading = false;\n        },\n\n        updateCheckedRows() {\n            console.log(\"updateCheckedRows\")\n        }        \n\n    }\n})\n\nexport default class ResultsPanel extends Vue {\n\n}\n\n\n</script>\n\n<style>\n\n</style>","\nimport RequestManager from '@/ts/RequestManager';\nimport { Options, Vue } from 'vue-class-component';\nimport VueTableLite from 'vue3-table-lite'\n\n@Options({\n    name: \"ResultsPanel\",\n    \n    components : { VueTableLite },\n\n    props: {\n        rm : {\n                type: String,\n                required: false\n        },\n        \n        isStaticMode : {\n                type: Boolean,\n                required: false,\n                default: true\n        },\n\n        hasCheckbox : {\n                type: Boolean,\n                required: false,\n                default: false\n        },\n\n        isSortable : {\n                type: Object,\n                required: false,\n                default: {\n                    order : \"id\",\n                    sort : \"asc\"\n                }\n        },\n    },\n\n    data() { \n        return {\n            laziestPages : [],\n            rows : [],\n            totalRecordCount : 2 ,\n\n            messages : {\n                    pagingInfo : \"Showing {0}-{1} of {2}\",\n                    pageSizeChangeLabel: \"Row count:\",\n                    gotoPageLabel: \"Go to page:\",\n                    noDataAvailable: \"No data\",\n                },\n                    \n            isLoading : false,\n            isReSearch : false\n        }\n    },\n\n    computed: {\n        columns() {\n            return new RequestManager(this.rm,this).getColumnsResults() \n        }\n    },\n\n    mounted() {\n        this.resultsPage(0)\n    },\n\n    methods: {\n\n        resultsPage(indexLazyPage : number, numberOfResults : number) {\n          if (this.columns.length == 0 ) {\n                this.rows = []\n          } \n          else \n            new RequestManager(this.rm,this).getCountAndLaziesPages(numberOfResults)\n            .then( \n                (args : any) => {\n                    \n                    this.totalRecordCount = Object.values(args)[0] ;\n                    \n                    const laziestPages = Object.values(args)[1] as Array<any>;\n                    \n                    if (this.totalRecordCount>0 && laziestPages.length>0) {\n                        \n                        laziestPages[indexLazyPage]\n                            .commit()\n                            .raw()\n                            .then( (response : any) => { \n                                this.rows = []\n                                let URIinstance : Map<String,String> = new Map()\n                                for (let i=0;i<response.results.bindings.length;i++) {\n                                    let row : any = {};\n                                    row['id'] = (indexLazyPage*10)+i\n                                    \n                                    const tabURI = [...new Set(this.columns\n                                        .filter( (col : any) => col.node_id ).map( (col : any) => col.node_id))]\n                                    \n                                    tabURI.forEach((uri : any ) => {   \n                                        /* value of instance only */\n                                        URIinstance.set(uri,response.results.bindings[i][uri].value)\n                                    })\n\n                                    this.columns.forEach((col : any) => {             \n                                    /* datatype only */\n                                   // if ( col.field != col.node_id) {\n                                        let val =\"\"\n\n                                        const uriInstance : string = URIinstance.get(col.node_id) as string\n                                        if (col.field === col.node_id ) {\n                                            val = uriInstance\n                                        } else {\n                                            if (response.results.datatypes[col.field] && response.results.datatypes[col.field][uriInstance]) {\n                                                if (response.results.datatypes[col.field][uriInstance].length>0)\n                                                    val = response.results.datatypes[col.field][uriInstance][0].value; \n                                            }\n                                        }\n\n                                        row[col.field] = val\n                                    //}\n                                    \n                                })\n                                this.rows.push(row) ;\n                            } \n                        })\n                }})\n        },\n        \n        doSearch(offset : number, limit : number, order : string, sort : string) {\n           \n            this.isLoading = true\n\n            if (offset)\n                this.isReSearch = true \n            else \n                this.isReSearch = false\n        \n            \n            this.resultsPage(Math.floor(offset/10),limit)\n            try {\n                if (order) this.sortable.order = order;\n            } catch (err) {\n                console.warn(err)\n            }\n\n            try {\n                if (sort) this.sortable.sort = sort;\n            } catch (err) {\n                console.warn(err)\n            }\n        },\n\n        tableLoadingFinish() {\n            this.isLoading = false;\n        },\n\n        updateCheckedRows() {\n            console.log(\"updateCheckedRows\")\n        }        \n\n    }\n})\n\nexport default class ResultsPanel extends Vue {\n\n}\n\n\n","import { render } from \"./ResultsPanel.vue?vue&type=template&id=597c2638\"\nimport script from \"./ResultsPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./ResultsPanel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component';\nimport ResultsPanel from '@/components/results/ResultsPanel'\n\n@Options({\n  name: \"Results\",\n  components: {\n    ResultsPanel\n  },\n\n  data() { \n        return {\n        }\n  },\n  \n  computed: {\n    rm() {\n      return require('lzbase62').decompress(this.$route.params.rm)\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Results extends Vue {}\n","import { render } from \"./Results.vue?vue&type=template&id=308d5daa\"\nimport script from \"./Results.vue?vue&type=script&lang=ts\"\nexport * from \"./Results.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ConfigurationPanel \n     :configurations_list=\"config_list\" \n     :requestManagerStringify=\"requestManagerStringify\"/>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport ConfigurationPanel from '@/components/configuration/ConfigurationPanel.vue'\n\n@Options({\n  name: \"Configuration\",\n  components: {\n    ConfigurationPanel\n  },\n\n  data() { \n        return {\n          config_list: [ ]\n        }\n  },\n  \n  computed: {\n    \n    requestManagerStringify() {\n      return require('lzbase62').decompress(this.$route.params.rm)\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Configuration extends Vue {}\n</script>","<template>\n  <div id=\"configuration-panel\">\n      <div class=\"container\"> \n          <hr/>\n          \n          <div class=\"row\">\n            <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <select v-model=\"selectedimetype\" class=\"form-control\">\n                    <option v-for=\"option in optionsMimetype\" :key=\"option.text\" v-bind:value=\"option.value\">\n                      {{ option.text }}\n                    </option>\n                  </select>\n                  </div>\n                  <input type=\"text\" v-model=\"selectedEndpoint\" class=\"form-control\" @change='updateConfiguration' placeholder=\"http://\" list=\"browsers\" aria-label=\"Endpoint\">\n                  <datalist id=\"browsers\">\n                    <option v-for=\"item in configurationsList\" :key=\"item\" v-bind:value=\"item.endpoint\"/>\n                  </datalist>\n                </div>\n        \n          </div>\n          \n          <div class=\"row\" >\n            <div class=\"input-group mb-3\" >\n              <div>\n                  <label class=\"form-control\" for=\"sel1\">Strategy:</label>\n              </div>\n              \n              <div class=\"form-check form-check-inline\">\n                    <input name=\"strategyRequest\" value=\"askomics\" class=\"form-check-input\" type=\"radio\" v-model=\"selectedStrategy\" @change='updateConfiguration'>\n                    <label class=\"form-check-label\" for=\"strategyRequest\">\n                      AskOmics \n                    </label>\n                  </div>\n                  <div class=\"form-check form-check-inline\">\n                    <input name=\"strategyRequest\" value=\"data-driven\" class=\"form-check-input\" type=\"radio\" v-model=\"selectedStrategy\" @change='updateConfiguration'>\n                    <label class=\"form-check-label\" for=\"strategyRequest\">\n                      Data-Driven\n                    </label>\n                  </div>\n                </div>\n             </div>\n            \n     </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { UserConfiguration } from '@/ts/types'\nimport RequestManager from '@/ts/RequestManager'\n\n@Options({\n  name: \"ConfigurationPanel\",\n  components : {  \n      },\n  emits: [\"updateRequestManager\"],\n  props : { \n    requestManagerStringify: String,\n\n    configurationsList : {\n      type    : Array,\n      default : () => [\n        {\n          title    : \"PeakForest\",\n          endpoint : \"https://peakforest.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolomics Endpoint - Metabolights\",\n          endpoint : \"https://metabolights.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"FORUM Endpoint - Metabolism Knowledge Network Portal\",\n          endpoint : \"https://forum.semantic-metabolomics.fr/sparql/\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Genostack - Metabolights\",\n          endpoint : \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolights_studies.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        },\n        {\n          title    : \"Metabolights_studies_askomics.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies_askomics.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        }\n      ]\n      },\n     strategy: {\n      type    : String,\n      default : \"data-driven\"\n    }\n  },\n\n  data () {\n    return {\n        selectedimetype: 'application/sparql-query',\n        optionsMimetype: [\n            { text: 'SPARQL', value: 'application/sparql-query' },\n            { text: 'Turtle', value: 'text/turtle' }\n          ],\n        selectedStrategy: this.strategy,\n        selectedEndpoint : \"\" \n    }\n  },\n  \n  mounted() {\n\n    if (this.configurationsList.length <= 0) {\n      throw \"devel : None configuration list is finded.\"\n    }\n     \n    let configuration : UserConfiguration = new RequestManager(this.requestManagerStringify,this).getConfiguration()\n\n    this.selectedimetype  = configuration.mimetype\n    this.selectedEndpoint = configuration.url\n    this.selectedStrategy = configuration.strategy\n  },\n  \n  methods: {\n\n    getUserConfiguration(configObj : any) {\n      let configuration = new UserConfiguration(configObj.title)\n      configuration.mimetype = configObj.mimetype\n      \n      switch (configObj.type) {\n        case \"url\" : {\n          configuration.url      = configObj.endpoint\n          break ;\n        }\n        case \"file\" : {\n          configuration.file     = configObj.endpoint\n          break ;\n        }\n        case \"content\" : {\n          configuration.content  = configObj.endpoint\n          break ;\n        }\n        default : {\n          configuration.url      = configObj.endpoint\n        }\n      }\n      return configuration\n    } ,\n    \n    updateConfiguration(event : Event) {\n      console.log(\"update:\",event)\n      \n      const confL = this.configurationsList.filter( (config : any) => config.endpoint == this.selectedEndpoint )\n\n      let configuration : UserConfiguration\n\n      if (confL.length>0) {\n        configuration = this.getUserConfiguration(confL[0])\n      } else {\n        /* User definition */\n        configuration           = new UserConfiguration(\"defined-by-user\")\n        configuration.url       = this.selectedEndpoint\n        configuration.mimetype  = this.selectedimetype\n      }\n      \n      configuration.strategy = this.selectedStrategy\n\n      let rm = new RequestManager(this.requestManagerStringify,this)\n      \n      rm.setConfiguration(configuration)\n\n      this.$emit('updateRequestManager',rm.serialized())\n    }\n  }\n  \n})\n\nexport default class ConfigurationPanel extends Vue {\n\n}\n\n</script>\n\n<style>\n</style>\n","\nimport { Options, Vue } from 'vue-class-component'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { UserConfiguration } from '@/ts/types'\nimport RequestManager from '@/ts/RequestManager'\n\n@Options({\n  name: \"ConfigurationPanel\",\n  components : {  \n      },\n  emits: [\"updateRequestManager\"],\n  props : { \n    requestManagerStringify: String,\n\n    configurationsList : {\n      type    : Array,\n      default : () => [\n        {\n          title    : \"PeakForest\",\n          endpoint : \"https://peakforest.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolomics Endpoint - Metabolights\",\n          endpoint : \"https://metabolights.semantic-metabolomics.fr/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"FORUM Endpoint - Metabolism Knowledge Network Portal\",\n          endpoint : \"https://forum.semantic-metabolomics.fr/sparql/\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Genostack - Metabolights\",\n          endpoint : \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\",\n          type     : \"url\",\n          mimetype : \"application/sparql-query\"\n        },\n        {\n          title    : \"Metabolights_studies.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        },\n        {\n          title    : \"Metabolights_studies_askomics.ttl\",\n          endpoint : \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies_askomics.ttl\",\n          type     : \"file\",\n          mimetype : \"text/turtle\"\n        }\n      ]\n      },\n     strategy: {\n      type    : String,\n      default : \"data-driven\"\n    }\n  },\n\n  data () {\n    return {\n        selectedimetype: 'application/sparql-query',\n        optionsMimetype: [\n            { text: 'SPARQL', value: 'application/sparql-query' },\n            { text: 'Turtle', value: 'text/turtle' }\n          ],\n        selectedStrategy: this.strategy,\n        selectedEndpoint : \"\" \n    }\n  },\n  \n  mounted() {\n\n    if (this.configurationsList.length <= 0) {\n      throw \"devel : None configuration list is finded.\"\n    }\n     \n    let configuration : UserConfiguration = new RequestManager(this.requestManagerStringify,this).getConfiguration()\n\n    this.selectedimetype  = configuration.mimetype\n    this.selectedEndpoint = configuration.url\n    this.selectedStrategy = configuration.strategy\n  },\n  \n  methods: {\n\n    getUserConfiguration(configObj : any) {\n      let configuration = new UserConfiguration(configObj.title)\n      configuration.mimetype = configObj.mimetype\n      \n      switch (configObj.type) {\n        case \"url\" : {\n          configuration.url      = configObj.endpoint\n          break ;\n        }\n        case \"file\" : {\n          configuration.file     = configObj.endpoint\n          break ;\n        }\n        case \"content\" : {\n          configuration.content  = configObj.endpoint\n          break ;\n        }\n        default : {\n          configuration.url      = configObj.endpoint\n        }\n      }\n      return configuration\n    } ,\n    \n    updateConfiguration(event : Event) {\n      console.log(\"update:\",event)\n      \n      const confL = this.configurationsList.filter( (config : any) => config.endpoint == this.selectedEndpoint )\n\n      let configuration : UserConfiguration\n\n      if (confL.length>0) {\n        configuration = this.getUserConfiguration(confL[0])\n      } else {\n        /* User definition */\n        configuration           = new UserConfiguration(\"defined-by-user\")\n        configuration.url       = this.selectedEndpoint\n        configuration.mimetype  = this.selectedimetype\n      }\n      \n      configuration.strategy = this.selectedStrategy\n\n      let rm = new RequestManager(this.requestManagerStringify,this)\n      \n      rm.setConfiguration(configuration)\n\n      this.$emit('updateRequestManager',rm.serialized())\n    }\n  }\n  \n})\n\nexport default class ConfigurationPanel extends Vue {\n\n}\n\n","import { render } from \"./ConfigurationPanel.vue?vue&type=template&id=41c16250\"\nimport script from \"./ConfigurationPanel.vue?vue&type=script&lang=ts\"\nexport * from \"./ConfigurationPanel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from 'vue-class-component';\nimport ConfigurationPanel from '@/components/configuration/ConfigurationPanel.vue'\n\n@Options({\n  name: \"Configuration\",\n  components: {\n    ConfigurationPanel\n  },\n\n  data() { \n        return {\n          config_list: [ ]\n        }\n  },\n  \n  computed: {\n    \n    requestManagerStringify() {\n      return require('lzbase62').decompress(this.$route.params.rm)\n    }\n  },\n\n  methods : {\n  }\n})\nexport default class Configuration extends Vue {}\n","import { render } from \"./Configuration.vue?vue&type=template&id=de00e896\"\nimport script from \"./Configuration.vue?vue&type=script&lang=ts\"\nexport * from \"./Configuration.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\nimport GraphBuilder from '../views/GraphBuilder.vue'\nimport Console from '../views/Console.vue'\nimport Results from '../views/Results.vue'\nimport Configuration from '../views/Configuration.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/builder/:rm',\n    name: 'builder',\n    component: GraphBuilder,\n  },\n  {\n    path: '/results/:rm',\n    name: 'results',\n    component: Results\n  },\n  {\n    path: '/console/:rm',\n    name: 'console',\n    component: Console\n  },\n  {\n    path: '/configuration/:rm',\n    name: 'configuration',\n    component: Configuration\n  }\n]\n\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","\nimport { Options, Vue } from 'vue-class-component';\nimport { UserConfiguration } from '@/ts/types'\n\nimport router from '@/router/index';\n\nimport RequestManager from './ts/RequestManager';\n\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faBackward, faForward, faSpinner, \n          faClipboard, faClipboardList, faPoll, \n          faTerminal, faSlidersH, faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\n[ faBackward, faForward, faSpinner, faClipboard, faClipboardList, faPoll, faTerminal, faSlidersH, faProjectDiagram ].map(icon => library.add(icon)) ;\n\n@Options({\n  name: \"AppView\",\n\n  components : {  \n      library,FontAwesomeIcon\n    },\n\n  data() { \n        return {\n          requestManagerStringify : \"\",\n          forwardActive      : false,\n          backwardActive     : false\n        }\n  },\n\n  created() {\n    /* If user have a permalink -- management */\n    let uri = window.location.search\n    let params = new URLSearchParams(uri);\n\n    if (params.has(\"hash\")) {\n       /* form http://..../query/XXXXXXX */\n      const compress_data = params.get(\"hash\")\n      this.requestManagerStringify = require('lzbase62').decompress(compress_data)      \n      this.builder()\n\n    } else {\n      this.setDefaultStartRequestManager()\n      this.configuration()\n    }\n    \n  },\n\n  watch: {\n     requestManagerStringify() {\n       this.updateHistoryButton()\n     }\n  },\n \n  methods : {\n\n    setDefaultStartRequestManager() {\n      let configuration  = new UserConfiguration(\"default_rdf_source\")\n      \n      configuration.mimetype = \"application/sparql-query\"\n      configuration.url      = \"https://askomics-metabolights-192-168-100-98.vm.openstack.genouest.org/virtuoso/sparql\"\n      configuration.strategy = \"data-driven\" \n      \n      /*\n      this.configuration.type      = \"file\"\n      this.configuration.url       = \"https://raw.githubusercontent.com/p2m2/database-files/master/ttl/Metabolights_studies.ttl\"\n      this.configuration.mimetype  = \"text/turtle\"\n      this.configuration.strategy  = \"data-driven\" \n    */\n      this.requestManagerStringify = RequestManager.getDefault(configuration,this).serialized()\n    },\n    \n    updateRequestManagerStringify(value : string) {\n      this.requestManagerStringify = value\n      router.replace({ params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n    \n    updateHistoryButton() {\n      this.forwardActive  = RequestManager.forwardIsActive()\n      this.backwardActive = RequestManager.backwardIsActive()\n    },\n\n    back() {\n      this.updateRequestManagerStringify(RequestManager.backward())\n      this.updateHistoryButton()\n      this.$toast.info(\"backward\"); \n    } ,\n\n    forward() {\n      this.updateRequestManagerStringify(RequestManager.forward())\n      this.updateHistoryButton()\n      this.$toast.info(\"forward\"); \n    },\n\n     /* https://router.vuejs.org/guide/essentials/navigation.html*/\n     \n    builder() {\n      router.push({ name : 'builder' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n\n    getResults() {\n      router.push({ name : 'results' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    } ,\n\n    console() {\n      router.push({ name : 'console' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n\n    configuration() {\n      router.push({ name : 'configuration' , params: { rm: require('lzbase62').compress(this.requestManagerStringify) }})\n    },\n\n    copyPermalinkQueryBuilderToClipBoard() {\n        const compressed = require('lzbase62').compress(this.requestManagerStringify);\n        const url = document.location.origin+process.env.BASE_URL+\"?hash=\"+compressed\n        const vue = this\n        navigator.clipboard.writeText(url).then(function() {\n            /* clipboard successfully set */\n            vue.$toast.success(\"query builder url to clipboard !\"); \n          }, function(e:Event) {\n            /* clipboard write failed */\n            vue.$toast.error(\"query builder url to clipboard failed !\"); \n             console.error(e)\n          });\n    },\n\n    clear() {\n      let r = new RequestManager(this.requestManagerStringify,this)\n      r.clear()\n      this.updateRequestManagerStringify(r.serialized())\n      this.$toast.info(\"clear session !\"); \n    }\n  }\n\n})\nexport default class App extends Vue {}\n","import { render } from \"./App.vue?vue&type=template&id=6baa20ca\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport Toaster from \"@meforma/vue-toaster\";\n\ncreateApp(App)\n    .use(router)\n    .use(Toaster, {\n        position: \"top\",\n        clear:\"40000\"\n      })\n    .mount('#app')\n\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Console.vue?vue&type=style&index=0&id=5821447c&lang=css\""],"sourceRoot":""}